// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v6.32.0
// source: gameevents.proto

package msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EBaseGameEvents int32

const (
	EBaseGameEvents_GE_VDebugGameSessionIDEvent   EBaseGameEvents = 200
	EBaseGameEvents_GE_PlaceDecalEvent            EBaseGameEvents = 201
	EBaseGameEvents_GE_ClearWorldDecalsEvent      EBaseGameEvents = 202
	EBaseGameEvents_GE_ClearEntityDecalsEvent     EBaseGameEvents = 203
	EBaseGameEvents_GE_ClearDecalsForEntityEvent  EBaseGameEvents = 204
	EBaseGameEvents_GE_Source1LegacyGameEventList EBaseGameEvents = 205
	EBaseGameEvents_GE_Source1LegacyListenEvents  EBaseGameEvents = 206
	EBaseGameEvents_GE_Source1LegacyGameEvent     EBaseGameEvents = 207
	EBaseGameEvents_GE_SosStartSoundEvent         EBaseGameEvents = 208
	EBaseGameEvents_GE_SosStopSoundEvent          EBaseGameEvents = 209
	EBaseGameEvents_GE_SosSetSoundEventParams     EBaseGameEvents = 210
	EBaseGameEvents_GE_SosSetLibraryStackFields   EBaseGameEvents = 211
	EBaseGameEvents_GE_SosStopSoundEventHash      EBaseGameEvents = 212
)

// Enum value maps for EBaseGameEvents.
var (
	EBaseGameEvents_name = map[int32]string{
		200: "GE_VDebugGameSessionIDEvent",
		201: "GE_PlaceDecalEvent",
		202: "GE_ClearWorldDecalsEvent",
		203: "GE_ClearEntityDecalsEvent",
		204: "GE_ClearDecalsForEntityEvent",
		205: "GE_Source1LegacyGameEventList",
		206: "GE_Source1LegacyListenEvents",
		207: "GE_Source1LegacyGameEvent",
		208: "GE_SosStartSoundEvent",
		209: "GE_SosStopSoundEvent",
		210: "GE_SosSetSoundEventParams",
		211: "GE_SosSetLibraryStackFields",
		212: "GE_SosStopSoundEventHash",
	}
	EBaseGameEvents_value = map[string]int32{
		"GE_VDebugGameSessionIDEvent":   200,
		"GE_PlaceDecalEvent":            201,
		"GE_ClearWorldDecalsEvent":      202,
		"GE_ClearEntityDecalsEvent":     203,
		"GE_ClearDecalsForEntityEvent":  204,
		"GE_Source1LegacyGameEventList": 205,
		"GE_Source1LegacyListenEvents":  206,
		"GE_Source1LegacyGameEvent":     207,
		"GE_SosStartSoundEvent":         208,
		"GE_SosStopSoundEvent":          209,
		"GE_SosSetSoundEventParams":     210,
		"GE_SosSetLibraryStackFields":   211,
		"GE_SosStopSoundEventHash":      212,
	}
)

func (x EBaseGameEvents) Enum() *EBaseGameEvents {
	p := new(EBaseGameEvents)
	*p = x
	return p
}

func (x EBaseGameEvents) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EBaseGameEvents) Descriptor() protoreflect.EnumDescriptor {
	return file_gameevents_proto_enumTypes[0].Descriptor()
}

func (EBaseGameEvents) Type() protoreflect.EnumType {
	return &file_gameevents_proto_enumTypes[0]
}

func (x EBaseGameEvents) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EBaseGameEvents) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EBaseGameEvents(num)
	return nil
}

// Deprecated: Use EBaseGameEvents.Descriptor instead.
func (EBaseGameEvents) EnumDescriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{0}
}

type CMsgVDebugGameSessionIDEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Clientid      *int32                 `protobuf:"varint,1,opt,name=clientid" json:"clientid,omitempty"`
	Gamesessionid *string                `protobuf:"bytes,2,opt,name=gamesessionid" json:"gamesessionid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgVDebugGameSessionIDEvent) Reset() {
	*x = CMsgVDebugGameSessionIDEvent{}
	mi := &file_gameevents_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVDebugGameSessionIDEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVDebugGameSessionIDEvent) ProtoMessage() {}

func (x *CMsgVDebugGameSessionIDEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVDebugGameSessionIDEvent.ProtoReflect.Descriptor instead.
func (*CMsgVDebugGameSessionIDEvent) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgVDebugGameSessionIDEvent) GetClientid() int32 {
	if x != nil && x.Clientid != nil {
		return *x.Clientid
	}
	return 0
}

func (x *CMsgVDebugGameSessionIDEvent) GetGamesessionid() string {
	if x != nil && x.Gamesessionid != nil {
		return *x.Gamesessionid
	}
	return ""
}

type CMsgPlaceDecalEvent struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Position       *CMsgVector            `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Normal         *CMsgVector            `protobuf:"bytes,2,opt,name=normal" json:"normal,omitempty"`
	Saxis          *CMsgVector            `protobuf:"bytes,3,opt,name=saxis" json:"saxis,omitempty"`
	Boneindex      *int32                 `protobuf:"varint,4,opt,name=boneindex" json:"boneindex,omitempty"`
	Triangleindex  *int32                 `protobuf:"varint,13,opt,name=triangleindex" json:"triangleindex,omitempty"`
	Flags          *uint32                `protobuf:"varint,5,opt,name=flags" json:"flags,omitempty"`
	Color          *uint32                `protobuf:"fixed32,6,opt,name=color" json:"color,omitempty"`
	RandomSeed     *int32                 `protobuf:"varint,7,opt,name=random_seed,json=randomSeed" json:"random_seed,omitempty"`
	DecalGroupName *uint32                `protobuf:"varint,8,opt,name=decal_group_name,json=decalGroupName" json:"decal_group_name,omitempty"`
	SizeOverride   *float32               `protobuf:"fixed32,9,opt,name=size_override,json=sizeOverride" json:"size_override,omitempty"`
	Entityhandle   *uint32                `protobuf:"varint,10,opt,name=entityhandle,def=16777215" json:"entityhandle,omitempty"`
	MaterialId     *uint64                `protobuf:"varint,11,opt,name=material_id,json=materialId" json:"material_id,omitempty"`
	SequenceName   *uint32                `protobuf:"varint,12,opt,name=sequence_name,json=sequenceName" json:"sequence_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CMsgPlaceDecalEvent fields.
const (
	Default_CMsgPlaceDecalEvent_Entityhandle = uint32(16777215)
)

func (x *CMsgPlaceDecalEvent) Reset() {
	*x = CMsgPlaceDecalEvent{}
	mi := &file_gameevents_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPlaceDecalEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPlaceDecalEvent) ProtoMessage() {}

func (x *CMsgPlaceDecalEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPlaceDecalEvent.ProtoReflect.Descriptor instead.
func (*CMsgPlaceDecalEvent) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgPlaceDecalEvent) GetPosition() *CMsgVector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CMsgPlaceDecalEvent) GetNormal() *CMsgVector {
	if x != nil {
		return x.Normal
	}
	return nil
}

func (x *CMsgPlaceDecalEvent) GetSaxis() *CMsgVector {
	if x != nil {
		return x.Saxis
	}
	return nil
}

func (x *CMsgPlaceDecalEvent) GetBoneindex() int32 {
	if x != nil && x.Boneindex != nil {
		return *x.Boneindex
	}
	return 0
}

func (x *CMsgPlaceDecalEvent) GetTriangleindex() int32 {
	if x != nil && x.Triangleindex != nil {
		return *x.Triangleindex
	}
	return 0
}

func (x *CMsgPlaceDecalEvent) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CMsgPlaceDecalEvent) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

func (x *CMsgPlaceDecalEvent) GetRandomSeed() int32 {
	if x != nil && x.RandomSeed != nil {
		return *x.RandomSeed
	}
	return 0
}

func (x *CMsgPlaceDecalEvent) GetDecalGroupName() uint32 {
	if x != nil && x.DecalGroupName != nil {
		return *x.DecalGroupName
	}
	return 0
}

func (x *CMsgPlaceDecalEvent) GetSizeOverride() float32 {
	if x != nil && x.SizeOverride != nil {
		return *x.SizeOverride
	}
	return 0
}

func (x *CMsgPlaceDecalEvent) GetEntityhandle() uint32 {
	if x != nil && x.Entityhandle != nil {
		return *x.Entityhandle
	}
	return Default_CMsgPlaceDecalEvent_Entityhandle
}

func (x *CMsgPlaceDecalEvent) GetMaterialId() uint64 {
	if x != nil && x.MaterialId != nil {
		return *x.MaterialId
	}
	return 0
}

func (x *CMsgPlaceDecalEvent) GetSequenceName() uint32 {
	if x != nil && x.SequenceName != nil {
		return *x.SequenceName
	}
	return 0
}

type CMsgClearWorldDecalsEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flagstoclear  *uint32                `protobuf:"varint,1,opt,name=flagstoclear" json:"flagstoclear,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClearWorldDecalsEvent) Reset() {
	*x = CMsgClearWorldDecalsEvent{}
	mi := &file_gameevents_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClearWorldDecalsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearWorldDecalsEvent) ProtoMessage() {}

func (x *CMsgClearWorldDecalsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearWorldDecalsEvent.ProtoReflect.Descriptor instead.
func (*CMsgClearWorldDecalsEvent) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgClearWorldDecalsEvent) GetFlagstoclear() uint32 {
	if x != nil && x.Flagstoclear != nil {
		return *x.Flagstoclear
	}
	return 0
}

type CMsgClearEntityDecalsEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flagstoclear  *uint32                `protobuf:"varint,1,opt,name=flagstoclear" json:"flagstoclear,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgClearEntityDecalsEvent) Reset() {
	*x = CMsgClearEntityDecalsEvent{}
	mi := &file_gameevents_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClearEntityDecalsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearEntityDecalsEvent) ProtoMessage() {}

func (x *CMsgClearEntityDecalsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearEntityDecalsEvent.ProtoReflect.Descriptor instead.
func (*CMsgClearEntityDecalsEvent) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgClearEntityDecalsEvent) GetFlagstoclear() uint32 {
	if x != nil && x.Flagstoclear != nil {
		return *x.Flagstoclear
	}
	return 0
}

type CMsgClearDecalsForEntityEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Flagstoclear  *uint32                `protobuf:"varint,1,opt,name=flagstoclear" json:"flagstoclear,omitempty"`
	Entityhandle  *uint32                `protobuf:"varint,2,opt,name=entityhandle,def=16777215" json:"entityhandle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CMsgClearDecalsForEntityEvent fields.
const (
	Default_CMsgClearDecalsForEntityEvent_Entityhandle = uint32(16777215)
)

func (x *CMsgClearDecalsForEntityEvent) Reset() {
	*x = CMsgClearDecalsForEntityEvent{}
	mi := &file_gameevents_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgClearDecalsForEntityEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgClearDecalsForEntityEvent) ProtoMessage() {}

func (x *CMsgClearDecalsForEntityEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgClearDecalsForEntityEvent.ProtoReflect.Descriptor instead.
func (*CMsgClearDecalsForEntityEvent) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgClearDecalsForEntityEvent) GetFlagstoclear() uint32 {
	if x != nil && x.Flagstoclear != nil {
		return *x.Flagstoclear
	}
	return 0
}

func (x *CMsgClearDecalsForEntityEvent) GetEntityhandle() uint32 {
	if x != nil && x.Entityhandle != nil {
		return *x.Entityhandle
	}
	return Default_CMsgClearDecalsForEntityEvent_Entityhandle
}

type CMsgSource1LegacyGameEventList struct {
	state         protoimpl.MessageState                       `protogen:"open.v1"`
	Descriptors   []*CMsgSource1LegacyGameEventListDescriptorT `protobuf:"bytes,1,rep,name=descriptors" json:"descriptors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSource1LegacyGameEventList) Reset() {
	*x = CMsgSource1LegacyGameEventList{}
	mi := &file_gameevents_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource1LegacyGameEventList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource1LegacyGameEventList) ProtoMessage() {}

func (x *CMsgSource1LegacyGameEventList) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource1LegacyGameEventList.ProtoReflect.Descriptor instead.
func (*CMsgSource1LegacyGameEventList) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgSource1LegacyGameEventList) GetDescriptors() []*CMsgSource1LegacyGameEventListDescriptorT {
	if x != nil {
		return x.Descriptors
	}
	return nil
}

type CMsgSource1LegacyListenEvents struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Playerslot     *int32                 `protobuf:"varint,1,opt,name=playerslot" json:"playerslot,omitempty"`
	Eventarraybits []uint32               `protobuf:"varint,2,rep,name=eventarraybits" json:"eventarraybits,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CMsgSource1LegacyListenEvents) Reset() {
	*x = CMsgSource1LegacyListenEvents{}
	mi := &file_gameevents_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource1LegacyListenEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource1LegacyListenEvents) ProtoMessage() {}

func (x *CMsgSource1LegacyListenEvents) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource1LegacyListenEvents.ProtoReflect.Descriptor instead.
func (*CMsgSource1LegacyListenEvents) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgSource1LegacyListenEvents) GetPlayerslot() int32 {
	if x != nil && x.Playerslot != nil {
		return *x.Playerslot
	}
	return 0
}

func (x *CMsgSource1LegacyListenEvents) GetEventarraybits() []uint32 {
	if x != nil {
		return x.Eventarraybits
	}
	return nil
}

type CMsgSource1LegacyGameEvent struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	EventName     *string                           `protobuf:"bytes,1,opt,name=event_name,json=eventName" json:"event_name,omitempty"`
	Eventid       *int32                            `protobuf:"varint,2,opt,name=eventid" json:"eventid,omitempty"`
	Keys          []*CMsgSource1LegacyGameEventKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	ServerTick    *int32                            `protobuf:"varint,4,opt,name=server_tick,json=serverTick" json:"server_tick,omitempty"`
	Passthrough   *int32                            `protobuf:"varint,5,opt,name=passthrough" json:"passthrough,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSource1LegacyGameEvent) Reset() {
	*x = CMsgSource1LegacyGameEvent{}
	mi := &file_gameevents_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource1LegacyGameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource1LegacyGameEvent) ProtoMessage() {}

func (x *CMsgSource1LegacyGameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource1LegacyGameEvent.ProtoReflect.Descriptor instead.
func (*CMsgSource1LegacyGameEvent) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{7}
}

func (x *CMsgSource1LegacyGameEvent) GetEventName() string {
	if x != nil && x.EventName != nil {
		return *x.EventName
	}
	return ""
}

func (x *CMsgSource1LegacyGameEvent) GetEventid() int32 {
	if x != nil && x.Eventid != nil {
		return *x.Eventid
	}
	return 0
}

func (x *CMsgSource1LegacyGameEvent) GetKeys() []*CMsgSource1LegacyGameEventKeyT {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *CMsgSource1LegacyGameEvent) GetServerTick() int32 {
	if x != nil && x.ServerTick != nil {
		return *x.ServerTick
	}
	return 0
}

func (x *CMsgSource1LegacyGameEvent) GetPassthrough() int32 {
	if x != nil && x.Passthrough != nil {
		return *x.Passthrough
	}
	return 0
}

type CMsgSosStartSoundEvent struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SoundeventGuid    *int32                 `protobuf:"varint,1,opt,name=soundevent_guid,json=soundeventGuid" json:"soundevent_guid,omitempty"`
	SoundeventHash    *uint32                `protobuf:"fixed32,2,opt,name=soundevent_hash,json=soundeventHash" json:"soundevent_hash,omitempty"`
	SourceEntityIndex *int32                 `protobuf:"varint,3,opt,name=source_entity_index,json=sourceEntityIndex,def=-1" json:"source_entity_index,omitempty"`
	Seed              *int32                 `protobuf:"varint,4,opt,name=seed" json:"seed,omitempty"`
	PackedParams      []byte                 `protobuf:"bytes,5,opt,name=packed_params,json=packedParams" json:"packed_params,omitempty"`
	StartTime         *float32               `protobuf:"fixed32,6,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for CMsgSosStartSoundEvent fields.
const (
	Default_CMsgSosStartSoundEvent_SourceEntityIndex = int32(-1)
)

func (x *CMsgSosStartSoundEvent) Reset() {
	*x = CMsgSosStartSoundEvent{}
	mi := &file_gameevents_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSosStartSoundEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSosStartSoundEvent) ProtoMessage() {}

func (x *CMsgSosStartSoundEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSosStartSoundEvent.ProtoReflect.Descriptor instead.
func (*CMsgSosStartSoundEvent) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{8}
}

func (x *CMsgSosStartSoundEvent) GetSoundeventGuid() int32 {
	if x != nil && x.SoundeventGuid != nil {
		return *x.SoundeventGuid
	}
	return 0
}

func (x *CMsgSosStartSoundEvent) GetSoundeventHash() uint32 {
	if x != nil && x.SoundeventHash != nil {
		return *x.SoundeventHash
	}
	return 0
}

func (x *CMsgSosStartSoundEvent) GetSourceEntityIndex() int32 {
	if x != nil && x.SourceEntityIndex != nil {
		return *x.SourceEntityIndex
	}
	return Default_CMsgSosStartSoundEvent_SourceEntityIndex
}

func (x *CMsgSosStartSoundEvent) GetSeed() int32 {
	if x != nil && x.Seed != nil {
		return *x.Seed
	}
	return 0
}

func (x *CMsgSosStartSoundEvent) GetPackedParams() []byte {
	if x != nil {
		return x.PackedParams
	}
	return nil
}

func (x *CMsgSosStartSoundEvent) GetStartTime() float32 {
	if x != nil && x.StartTime != nil {
		return *x.StartTime
	}
	return 0
}

type CMsgSosStopSoundEvent struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SoundeventGuid *int32                 `protobuf:"varint,1,opt,name=soundevent_guid,json=soundeventGuid" json:"soundevent_guid,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CMsgSosStopSoundEvent) Reset() {
	*x = CMsgSosStopSoundEvent{}
	mi := &file_gameevents_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSosStopSoundEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSosStopSoundEvent) ProtoMessage() {}

func (x *CMsgSosStopSoundEvent) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSosStopSoundEvent.ProtoReflect.Descriptor instead.
func (*CMsgSosStopSoundEvent) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{9}
}

func (x *CMsgSosStopSoundEvent) GetSoundeventGuid() int32 {
	if x != nil && x.SoundeventGuid != nil {
		return *x.SoundeventGuid
	}
	return 0
}

type CMsgSosStopSoundEventHash struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SoundeventHash    *uint32                `protobuf:"fixed32,1,opt,name=soundevent_hash,json=soundeventHash" json:"soundevent_hash,omitempty"`
	SourceEntityIndex *int32                 `protobuf:"varint,2,opt,name=source_entity_index,json=sourceEntityIndex,def=-1" json:"source_entity_index,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for CMsgSosStopSoundEventHash fields.
const (
	Default_CMsgSosStopSoundEventHash_SourceEntityIndex = int32(-1)
)

func (x *CMsgSosStopSoundEventHash) Reset() {
	*x = CMsgSosStopSoundEventHash{}
	mi := &file_gameevents_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSosStopSoundEventHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSosStopSoundEventHash) ProtoMessage() {}

func (x *CMsgSosStopSoundEventHash) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSosStopSoundEventHash.ProtoReflect.Descriptor instead.
func (*CMsgSosStopSoundEventHash) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{10}
}

func (x *CMsgSosStopSoundEventHash) GetSoundeventHash() uint32 {
	if x != nil && x.SoundeventHash != nil {
		return *x.SoundeventHash
	}
	return 0
}

func (x *CMsgSosStopSoundEventHash) GetSourceEntityIndex() int32 {
	if x != nil && x.SourceEntityIndex != nil {
		return *x.SourceEntityIndex
	}
	return Default_CMsgSosStopSoundEventHash_SourceEntityIndex
}

type CMsgSosSetSoundEventParams struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	SoundeventGuid *int32                 `protobuf:"varint,1,opt,name=soundevent_guid,json=soundeventGuid" json:"soundevent_guid,omitempty"`
	PackedParams   []byte                 `protobuf:"bytes,5,opt,name=packed_params,json=packedParams" json:"packed_params,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CMsgSosSetSoundEventParams) Reset() {
	*x = CMsgSosSetSoundEventParams{}
	mi := &file_gameevents_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSosSetSoundEventParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSosSetSoundEventParams) ProtoMessage() {}

func (x *CMsgSosSetSoundEventParams) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSosSetSoundEventParams.ProtoReflect.Descriptor instead.
func (*CMsgSosSetSoundEventParams) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{11}
}

func (x *CMsgSosSetSoundEventParams) GetSoundeventGuid() int32 {
	if x != nil && x.SoundeventGuid != nil {
		return *x.SoundeventGuid
	}
	return 0
}

func (x *CMsgSosSetSoundEventParams) GetPackedParams() []byte {
	if x != nil {
		return x.PackedParams
	}
	return nil
}

type CMsgSosSetLibraryStackFields struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StackHash     *uint32                `protobuf:"fixed32,1,opt,name=stack_hash,json=stackHash" json:"stack_hash,omitempty"`
	PackedFields  []byte                 `protobuf:"bytes,5,opt,name=packed_fields,json=packedFields" json:"packed_fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSosSetLibraryStackFields) Reset() {
	*x = CMsgSosSetLibraryStackFields{}
	mi := &file_gameevents_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSosSetLibraryStackFields) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSosSetLibraryStackFields) ProtoMessage() {}

func (x *CMsgSosSetLibraryStackFields) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSosSetLibraryStackFields.ProtoReflect.Descriptor instead.
func (*CMsgSosSetLibraryStackFields) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{12}
}

func (x *CMsgSosSetLibraryStackFields) GetStackHash() uint32 {
	if x != nil && x.StackHash != nil {
		return *x.StackHash
	}
	return 0
}

func (x *CMsgSosSetLibraryStackFields) GetPackedFields() []byte {
	if x != nil {
		return x.PackedFields
	}
	return nil
}

type CMsgSource1LegacyGameEventListKeyT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *int32                 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSource1LegacyGameEventListKeyT) Reset() {
	*x = CMsgSource1LegacyGameEventListKeyT{}
	mi := &file_gameevents_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource1LegacyGameEventListKeyT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource1LegacyGameEventListKeyT) ProtoMessage() {}

func (x *CMsgSource1LegacyGameEventListKeyT) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource1LegacyGameEventListKeyT.ProtoReflect.Descriptor instead.
func (*CMsgSource1LegacyGameEventListKeyT) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CMsgSource1LegacyGameEventListKeyT) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CMsgSource1LegacyGameEventListKeyT) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CMsgSource1LegacyGameEventListDescriptorT struct {
	state         protoimpl.MessageState                `protogen:"open.v1"`
	Eventid       *int32                                `protobuf:"varint,1,opt,name=eventid" json:"eventid,omitempty"`
	Name          *string                               `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Keys          []*CMsgSource1LegacyGameEventListKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSource1LegacyGameEventListDescriptorT) Reset() {
	*x = CMsgSource1LegacyGameEventListDescriptorT{}
	mi := &file_gameevents_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource1LegacyGameEventListDescriptorT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource1LegacyGameEventListDescriptorT) ProtoMessage() {}

func (x *CMsgSource1LegacyGameEventListDescriptorT) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource1LegacyGameEventListDescriptorT.ProtoReflect.Descriptor instead.
func (*CMsgSource1LegacyGameEventListDescriptorT) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{5, 1}
}

func (x *CMsgSource1LegacyGameEventListDescriptorT) GetEventid() int32 {
	if x != nil && x.Eventid != nil {
		return *x.Eventid
	}
	return 0
}

func (x *CMsgSource1LegacyGameEventListDescriptorT) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgSource1LegacyGameEventListDescriptorT) GetKeys() []*CMsgSource1LegacyGameEventListKeyT {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CMsgSource1LegacyGameEventKeyT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *int32                 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	ValString     *string                `protobuf:"bytes,2,opt,name=val_string,json=valString" json:"val_string,omitempty"`
	ValFloat      *float32               `protobuf:"fixed32,3,opt,name=val_float,json=valFloat" json:"val_float,omitempty"`
	ValLong       *int32                 `protobuf:"varint,4,opt,name=val_long,json=valLong" json:"val_long,omitempty"`
	ValShort      *int32                 `protobuf:"varint,5,opt,name=val_short,json=valShort" json:"val_short,omitempty"`
	ValByte       *int32                 `protobuf:"varint,6,opt,name=val_byte,json=valByte" json:"val_byte,omitempty"`
	ValBool       *bool                  `protobuf:"varint,7,opt,name=val_bool,json=valBool" json:"val_bool,omitempty"`
	ValUint64     *uint64                `protobuf:"varint,8,opt,name=val_uint64,json=valUint64" json:"val_uint64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSource1LegacyGameEventKeyT) Reset() {
	*x = CMsgSource1LegacyGameEventKeyT{}
	mi := &file_gameevents_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource1LegacyGameEventKeyT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource1LegacyGameEventKeyT) ProtoMessage() {}

func (x *CMsgSource1LegacyGameEventKeyT) ProtoReflect() protoreflect.Message {
	mi := &file_gameevents_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource1LegacyGameEventKeyT.ProtoReflect.Descriptor instead.
func (*CMsgSource1LegacyGameEventKeyT) Descriptor() ([]byte, []int) {
	return file_gameevents_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CMsgSource1LegacyGameEventKeyT) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CMsgSource1LegacyGameEventKeyT) GetValString() string {
	if x != nil && x.ValString != nil {
		return *x.ValString
	}
	return ""
}

func (x *CMsgSource1LegacyGameEventKeyT) GetValFloat() float32 {
	if x != nil && x.ValFloat != nil {
		return *x.ValFloat
	}
	return 0
}

func (x *CMsgSource1LegacyGameEventKeyT) GetValLong() int32 {
	if x != nil && x.ValLong != nil {
		return *x.ValLong
	}
	return 0
}

func (x *CMsgSource1LegacyGameEventKeyT) GetValShort() int32 {
	if x != nil && x.ValShort != nil {
		return *x.ValShort
	}
	return 0
}

func (x *CMsgSource1LegacyGameEventKeyT) GetValByte() int32 {
	if x != nil && x.ValByte != nil {
		return *x.ValByte
	}
	return 0
}

func (x *CMsgSource1LegacyGameEventKeyT) GetValBool() bool {
	if x != nil && x.ValBool != nil {
		return *x.ValBool
	}
	return false
}

func (x *CMsgSource1LegacyGameEventKeyT) GetValUint64() uint64 {
	if x != nil && x.ValUint64 != nil {
		return *x.ValUint64
	}
	return 0
}

var File_gameevents_proto protoreflect.FileDescriptor

var file_gameevents_proto_rawDesc = string([]byte{
	0x0a, 0x10, 0x67, 0x61, 0x6d, 0x65, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x16, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x62, 0x61, 0x73, 0x65, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x60, 0x0a, 0x1c, 0x43, 0x4d,
	0x73, 0x67, 0x56, 0x44, 0x65, 0x62, 0x75, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x44, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67,
	0x61, 0x6d, 0x65, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x22, 0xda, 0x03, 0x0a,
	0x13, 0x43, 0x4d, 0x73, 0x67, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x65, 0x63, 0x61, 0x6c, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x6e, 0x6f, 0x72, 0x6d,
	0x61, 0x6c, 0x12, 0x21, 0x0a, 0x05, 0x73, 0x61, 0x78, 0x69, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x05,
	0x73, 0x61, 0x78, 0x69, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x6f, 0x6e, 0x65, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x6f, 0x6e, 0x65, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x69, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x74, 0x72, 0x69, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x07, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x5f,
	0x73, 0x65, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x53, 0x65, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0e, 0x64, 0x65, 0x63, 0x61, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73, 0x69, 0x7a, 0x65, 0x4f, 0x76, 0x65,
	0x72, 0x72, 0x69, 0x64, 0x65, 0x12, 0x2c, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x08, 0x31, 0x36, 0x37,
	0x37, 0x37, 0x32, 0x31, 0x35, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x61, 0x6e,
	0x64, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x19, 0x43, 0x4d, 0x73,
	0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x44, 0x65, 0x63, 0x61, 0x6c,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x74,
	0x6f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x74, 0x6f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x40, 0x0a, 0x1a, 0x43, 0x4d,
	0x73, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x63,
	0x61, 0x6c, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x67,
	0x73, 0x74, 0x6f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c,
	0x66, 0x6c, 0x61, 0x67, 0x73, 0x74, 0x6f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x71, 0x0a, 0x1d,
	0x43, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x63, 0x61, 0x6c, 0x73, 0x46,
	0x6f, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a,
	0x0c, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x74, 0x6f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x74, 0x6f, 0x63, 0x6c, 0x65, 0x61,
	0x72, 0x12, 0x2c, 0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x61, 0x6e, 0x64, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x3a, 0x08, 0x31, 0x36, 0x37, 0x37, 0x37, 0x32, 0x31,
	0x35, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x22,
	0xa2, 0x02, 0x0a, 0x1e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x31, 0x4c,
	0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x4e, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x31, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x5f, 0x74, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x73, 0x1a, 0x2f, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x1a, 0x77, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x5f, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x39, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x31, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x2e, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x3a, 0x06, 0x80, 0xb5,
	0x18, 0x80, 0xc0, 0x01, 0x22, 0x67, 0x0a, 0x1d, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x31, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x61, 0x72,
	0x72, 0x61, 0x79, 0x62, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x61, 0x72, 0x72, 0x61, 0x79, 0x62, 0x69, 0x74, 0x73, 0x22, 0xb6, 0x03,
	0x0a, 0x1a, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x31, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x31, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x2e, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x73, 0x73, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x61, 0x73, 0x73, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x1a,
	0xe4, 0x01, 0x0a, 0x05, 0x6b, 0x65, 0x79, 0x5f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09,
	0x76, 0x61, 0x6c, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x76, 0x61, 0x6c, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x6c,
	0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x61, 0x6c,
	0x4c, 0x6f, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x5f, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x76, 0x61, 0x6c, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x61, 0x6c, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x76, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x76, 0x61, 0x6c, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x5f, 0x75,
	0x69, 0x6e, 0x74, 0x36, 0x34, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x55, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x22, 0xf6, 0x01, 0x0a, 0x16, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x6f, 0x73, 0x53, 0x74, 0x61, 0x72, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x6e,
	0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f,
	0x75, 0x6e, 0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x07, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x02, 0x2d, 0x31, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x40, 0x0a, 0x15, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6f,
	0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x6e,
	0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x75, 0x69,
	0x64, 0x22, 0x78, 0x0a, 0x19, 0x43, 0x4d, 0x73, 0x67, 0x53, 0x6f, 0x73, 0x53, 0x74, 0x6f, 0x70,
	0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x13, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x6a, 0x0a, 0x1a, 0x43,
	0x4d, 0x73, 0x67, 0x53, 0x6f, 0x73, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x6e, 0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x47, 0x75,
	0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x62, 0x0a, 0x1c, 0x43, 0x4d, 0x73, 0x67, 0x53,
	0x6f, 0x73, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x63,
	0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x63, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x07, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x64,
	0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x2a, 0xad, 0x03, 0x0a, 0x0f,
	0x45, 0x42, 0x61, 0x73, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12,
	0x20, 0x0a, 0x1b, 0x47, 0x45, 0x5f, 0x56, 0x44, 0x65, 0x62, 0x75, 0x67, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0xc8,
	0x01, 0x12, 0x17, 0x0a, 0x12, 0x47, 0x45, 0x5f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x44, 0x65, 0x63,
	0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0xc9, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x47, 0x45,
	0x5f, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x44, 0x65, 0x63, 0x61, 0x6c,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0xca, 0x01, 0x12, 0x1e, 0x0a, 0x19, 0x47, 0x45, 0x5f,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x63, 0x61, 0x6c,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0xcb, 0x01, 0x12, 0x21, 0x0a, 0x1c, 0x47, 0x45, 0x5f,
	0x43, 0x6c, 0x65, 0x61, 0x72, 0x44, 0x65, 0x63, 0x61, 0x6c, 0x73, 0x46, 0x6f, 0x72, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0xcc, 0x01, 0x12, 0x22, 0x0a, 0x1d,
	0x47, 0x45, 0x5f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x31, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79,
	0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x10, 0xcd, 0x01,
	0x12, 0x21, 0x0a, 0x1c, 0x47, 0x45, 0x5f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x31, 0x4c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x10, 0xce, 0x01, 0x12, 0x1e, 0x0a, 0x19, 0x47, 0x45, 0x5f, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x31, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x10, 0xcf, 0x01, 0x12, 0x1a, 0x0a, 0x15, 0x47, 0x45, 0x5f, 0x53, 0x6f, 0x73, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0xd0, 0x01, 0x12,
	0x19, 0x0a, 0x14, 0x47, 0x45, 0x5f, 0x53, 0x6f, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6f, 0x75,
	0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x10, 0xd1, 0x01, 0x12, 0x1e, 0x0a, 0x19, 0x47, 0x45,
	0x5f, 0x53, 0x6f, 0x73, 0x53, 0x65, 0x74, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x10, 0xd2, 0x01, 0x12, 0x20, 0x0a, 0x1b, 0x47, 0x45,
	0x5f, 0x53, 0x6f, 0x73, 0x53, 0x65, 0x74, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x63, 0x6b, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x10, 0xd3, 0x01, 0x12, 0x1d, 0x0a, 0x18,
	0x47, 0x45, 0x5f, 0x53, 0x6f, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x10, 0xd4, 0x01,
})

var (
	file_gameevents_proto_rawDescOnce sync.Once
	file_gameevents_proto_rawDescData []byte
)

func file_gameevents_proto_rawDescGZIP() []byte {
	file_gameevents_proto_rawDescOnce.Do(func() {
		file_gameevents_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gameevents_proto_rawDesc), len(file_gameevents_proto_rawDesc)))
	})
	return file_gameevents_proto_rawDescData
}

var file_gameevents_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gameevents_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_gameevents_proto_goTypes = []any{
	(EBaseGameEvents)(0),                              // 0: EBaseGameEvents
	(*CMsgVDebugGameSessionIDEvent)(nil),              // 1: CMsgVDebugGameSessionIDEvent
	(*CMsgPlaceDecalEvent)(nil),                       // 2: CMsgPlaceDecalEvent
	(*CMsgClearWorldDecalsEvent)(nil),                 // 3: CMsgClearWorldDecalsEvent
	(*CMsgClearEntityDecalsEvent)(nil),                // 4: CMsgClearEntityDecalsEvent
	(*CMsgClearDecalsForEntityEvent)(nil),             // 5: CMsgClearDecalsForEntityEvent
	(*CMsgSource1LegacyGameEventList)(nil),            // 6: CMsgSource1LegacyGameEventList
	(*CMsgSource1LegacyListenEvents)(nil),             // 7: CMsgSource1LegacyListenEvents
	(*CMsgSource1LegacyGameEvent)(nil),                // 8: CMsgSource1LegacyGameEvent
	(*CMsgSosStartSoundEvent)(nil),                    // 9: CMsgSosStartSoundEvent
	(*CMsgSosStopSoundEvent)(nil),                     // 10: CMsgSosStopSoundEvent
	(*CMsgSosStopSoundEventHash)(nil),                 // 11: CMsgSosStopSoundEventHash
	(*CMsgSosSetSoundEventParams)(nil),                // 12: CMsgSosSetSoundEventParams
	(*CMsgSosSetLibraryStackFields)(nil),              // 13: CMsgSosSetLibraryStackFields
	(*CMsgSource1LegacyGameEventListKeyT)(nil),        // 14: CMsgSource1LegacyGameEventList.key_t
	(*CMsgSource1LegacyGameEventListDescriptorT)(nil), // 15: CMsgSource1LegacyGameEventList.descriptor_t
	(*CMsgSource1LegacyGameEventKeyT)(nil),            // 16: CMsgSource1LegacyGameEvent.key_t
	(*CMsgVector)(nil),                                // 17: CMsgVector
}
var file_gameevents_proto_depIdxs = []int32{
	17, // 0: CMsgPlaceDecalEvent.position:type_name -> CMsgVector
	17, // 1: CMsgPlaceDecalEvent.normal:type_name -> CMsgVector
	17, // 2: CMsgPlaceDecalEvent.saxis:type_name -> CMsgVector
	15, // 3: CMsgSource1LegacyGameEventList.descriptors:type_name -> CMsgSource1LegacyGameEventList.descriptor_t
	16, // 4: CMsgSource1LegacyGameEvent.keys:type_name -> CMsgSource1LegacyGameEvent.key_t
	14, // 5: CMsgSource1LegacyGameEventList.descriptor_t.keys:type_name -> CMsgSource1LegacyGameEventList.key_t
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_gameevents_proto_init() }
func file_gameevents_proto_init() {
	if File_gameevents_proto != nil {
		return
	}
	file_networkbasetypes_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gameevents_proto_rawDesc), len(file_gameevents_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gameevents_proto_goTypes,
		DependencyIndexes: file_gameevents_proto_depIdxs,
		EnumInfos:         file_gameevents_proto_enumTypes,
		MessageInfos:      file_gameevents_proto_msgTypes,
	}.Build()
	File_gameevents_proto = out.File
	file_gameevents_proto_goTypes = nil
	file_gameevents_proto_depIdxs = nil
}
