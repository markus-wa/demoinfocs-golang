// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: s2/netmessages.proto

package msgs2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CLC_Messages int32

const (
	CLC_Messages_clc_ClientInfo            CLC_Messages = 20
	CLC_Messages_clc_Move                  CLC_Messages = 21
	CLC_Messages_clc_VoiceData             CLC_Messages = 22
	CLC_Messages_clc_BaselineAck           CLC_Messages = 23
	CLC_Messages_clc_RespondCvarValue      CLC_Messages = 25
	CLC_Messages_clc_LoadingProgress       CLC_Messages = 27
	CLC_Messages_clc_SplitPlayerConnect    CLC_Messages = 28
	CLC_Messages_clc_SplitPlayerDisconnect CLC_Messages = 30
	CLC_Messages_clc_ServerStatus          CLC_Messages = 31
	CLC_Messages_clc_RequestPause          CLC_Messages = 33
	CLC_Messages_clc_CmdKeyValues          CLC_Messages = 34
	CLC_Messages_clc_RconServerDetails     CLC_Messages = 35
	CLC_Messages_clc_HltvReplay            CLC_Messages = 36
	CLC_Messages_clc_Diagnostic            CLC_Messages = 37
)

// Enum value maps for CLC_Messages.
var (
	CLC_Messages_name = map[int32]string{
		20: "clc_ClientInfo",
		21: "clc_Move",
		22: "clc_VoiceData",
		23: "clc_BaselineAck",
		25: "clc_RespondCvarValue",
		27: "clc_LoadingProgress",
		28: "clc_SplitPlayerConnect",
		30: "clc_SplitPlayerDisconnect",
		31: "clc_ServerStatus",
		33: "clc_RequestPause",
		34: "clc_CmdKeyValues",
		35: "clc_RconServerDetails",
		36: "clc_HltvReplay",
		37: "clc_Diagnostic",
	}
	CLC_Messages_value = map[string]int32{
		"clc_ClientInfo":            20,
		"clc_Move":                  21,
		"clc_VoiceData":             22,
		"clc_BaselineAck":           23,
		"clc_RespondCvarValue":      25,
		"clc_LoadingProgress":       27,
		"clc_SplitPlayerConnect":    28,
		"clc_SplitPlayerDisconnect": 30,
		"clc_ServerStatus":          31,
		"clc_RequestPause":          33,
		"clc_CmdKeyValues":          34,
		"clc_RconServerDetails":     35,
		"clc_HltvReplay":            36,
		"clc_Diagnostic":            37,
	}
)

func (x CLC_Messages) Enum() *CLC_Messages {
	p := new(CLC_Messages)
	*p = x
	return p
}

func (x CLC_Messages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CLC_Messages) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[0].Descriptor()
}

func (CLC_Messages) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[0]
}

func (x CLC_Messages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CLC_Messages) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CLC_Messages(num)
	return nil
}

// Deprecated: Use CLC_Messages.Descriptor instead.
func (CLC_Messages) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{0}
}

type SVC_Messages int32

const (
	SVC_Messages_svc_ServerInfo              SVC_Messages = 40
	SVC_Messages_svc_FlattenedSerializer     SVC_Messages = 41
	SVC_Messages_svc_ClassInfo               SVC_Messages = 42
	SVC_Messages_svc_SetPause                SVC_Messages = 43
	SVC_Messages_svc_CreateStringTable       SVC_Messages = 44
	SVC_Messages_svc_UpdateStringTable       SVC_Messages = 45
	SVC_Messages_svc_VoiceInit               SVC_Messages = 46
	SVC_Messages_svc_VoiceData               SVC_Messages = 47
	SVC_Messages_svc_Print                   SVC_Messages = 48
	SVC_Messages_svc_Sounds                  SVC_Messages = 49
	SVC_Messages_svc_SetView                 SVC_Messages = 50
	SVC_Messages_svc_ClearAllStringTables    SVC_Messages = 51
	SVC_Messages_svc_CmdKeyValues            SVC_Messages = 52
	SVC_Messages_svc_BSPDecal                SVC_Messages = 53
	SVC_Messages_svc_SplitScreen             SVC_Messages = 54
	SVC_Messages_svc_PacketEntities          SVC_Messages = 55
	SVC_Messages_svc_Prefetch                SVC_Messages = 56
	SVC_Messages_svc_Menu                    SVC_Messages = 57
	SVC_Messages_svc_GetCvarValue            SVC_Messages = 58
	SVC_Messages_svc_StopSound               SVC_Messages = 59
	SVC_Messages_svc_PeerList                SVC_Messages = 60
	SVC_Messages_svc_PacketReliable          SVC_Messages = 61
	SVC_Messages_svc_HLTVStatus              SVC_Messages = 62
	SVC_Messages_svc_ServerSteamID           SVC_Messages = 63
	SVC_Messages_svc_FullFrameSplit          SVC_Messages = 70
	SVC_Messages_svc_RconServerDetails       SVC_Messages = 71
	SVC_Messages_svc_UserMessage             SVC_Messages = 72
	SVC_Messages_svc_Broadcast_Command       SVC_Messages = 74
	SVC_Messages_svc_HltvFixupOperatorStatus SVC_Messages = 75
	SVC_Messages_svc_UserCmds                SVC_Messages = 76
)

// Enum value maps for SVC_Messages.
var (
	SVC_Messages_name = map[int32]string{
		40: "svc_ServerInfo",
		41: "svc_FlattenedSerializer",
		42: "svc_ClassInfo",
		43: "svc_SetPause",
		44: "svc_CreateStringTable",
		45: "svc_UpdateStringTable",
		46: "svc_VoiceInit",
		47: "svc_VoiceData",
		48: "svc_Print",
		49: "svc_Sounds",
		50: "svc_SetView",
		51: "svc_ClearAllStringTables",
		52: "svc_CmdKeyValues",
		53: "svc_BSPDecal",
		54: "svc_SplitScreen",
		55: "svc_PacketEntities",
		56: "svc_Prefetch",
		57: "svc_Menu",
		58: "svc_GetCvarValue",
		59: "svc_StopSound",
		60: "svc_PeerList",
		61: "svc_PacketReliable",
		62: "svc_HLTVStatus",
		63: "svc_ServerSteamID",
		70: "svc_FullFrameSplit",
		71: "svc_RconServerDetails",
		72: "svc_UserMessage",
		74: "svc_Broadcast_Command",
		75: "svc_HltvFixupOperatorStatus",
		76: "svc_UserCmds",
	}
	SVC_Messages_value = map[string]int32{
		"svc_ServerInfo":              40,
		"svc_FlattenedSerializer":     41,
		"svc_ClassInfo":               42,
		"svc_SetPause":                43,
		"svc_CreateStringTable":       44,
		"svc_UpdateStringTable":       45,
		"svc_VoiceInit":               46,
		"svc_VoiceData":               47,
		"svc_Print":                   48,
		"svc_Sounds":                  49,
		"svc_SetView":                 50,
		"svc_ClearAllStringTables":    51,
		"svc_CmdKeyValues":            52,
		"svc_BSPDecal":                53,
		"svc_SplitScreen":             54,
		"svc_PacketEntities":          55,
		"svc_Prefetch":                56,
		"svc_Menu":                    57,
		"svc_GetCvarValue":            58,
		"svc_StopSound":               59,
		"svc_PeerList":                60,
		"svc_PacketReliable":          61,
		"svc_HLTVStatus":              62,
		"svc_ServerSteamID":           63,
		"svc_FullFrameSplit":          70,
		"svc_RconServerDetails":       71,
		"svc_UserMessage":             72,
		"svc_Broadcast_Command":       74,
		"svc_HltvFixupOperatorStatus": 75,
		"svc_UserCmds":                76,
	}
)

func (x SVC_Messages) Enum() *SVC_Messages {
	p := new(SVC_Messages)
	*p = x
	return p
}

func (x SVC_Messages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SVC_Messages) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[1].Descriptor()
}

func (SVC_Messages) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[1]
}

func (x SVC_Messages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SVC_Messages) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SVC_Messages(num)
	return nil
}

// Deprecated: Use SVC_Messages.Descriptor instead.
func (SVC_Messages) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{1}
}

type VoiceDataFormatT int32

const (
	VoiceDataFormatT_VOICEDATA_FORMAT_STEAM  VoiceDataFormatT = 0
	VoiceDataFormatT_VOICEDATA_FORMAT_ENGINE VoiceDataFormatT = 1
	VoiceDataFormatT_VOICEDATA_FORMAT_OPUS   VoiceDataFormatT = 2
)

// Enum value maps for VoiceDataFormatT.
var (
	VoiceDataFormatT_name = map[int32]string{
		0: "VOICEDATA_FORMAT_STEAM",
		1: "VOICEDATA_FORMAT_ENGINE",
		2: "VOICEDATA_FORMAT_OPUS",
	}
	VoiceDataFormatT_value = map[string]int32{
		"VOICEDATA_FORMAT_STEAM":  0,
		"VOICEDATA_FORMAT_ENGINE": 1,
		"VOICEDATA_FORMAT_OPUS":   2,
	}
)

func (x VoiceDataFormatT) Enum() *VoiceDataFormatT {
	p := new(VoiceDataFormatT)
	*p = x
	return p
}

func (x VoiceDataFormatT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoiceDataFormatT) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[2].Descriptor()
}

func (VoiceDataFormatT) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[2]
}

func (x VoiceDataFormatT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *VoiceDataFormatT) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = VoiceDataFormatT(num)
	return nil
}

// Deprecated: Use VoiceDataFormatT.Descriptor instead.
func (VoiceDataFormatT) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{2}
}

type RequestPauseT int32

const (
	RequestPauseT_RP_PAUSE       RequestPauseT = 0
	RequestPauseT_RP_UNPAUSE     RequestPauseT = 1
	RequestPauseT_RP_TOGGLEPAUSE RequestPauseT = 2
)

// Enum value maps for RequestPauseT.
var (
	RequestPauseT_name = map[int32]string{
		0: "RP_PAUSE",
		1: "RP_UNPAUSE",
		2: "RP_TOGGLEPAUSE",
	}
	RequestPauseT_value = map[string]int32{
		"RP_PAUSE":       0,
		"RP_UNPAUSE":     1,
		"RP_TOGGLEPAUSE": 2,
	}
)

func (x RequestPauseT) Enum() *RequestPauseT {
	p := new(RequestPauseT)
	*p = x
	return p
}

func (x RequestPauseT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RequestPauseT) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[3].Descriptor()
}

func (RequestPauseT) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[3]
}

func (x RequestPauseT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RequestPauseT) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RequestPauseT(num)
	return nil
}

// Deprecated: Use RequestPauseT.Descriptor instead.
func (RequestPauseT) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{3}
}

type PrefetchType int32

const (
	PrefetchType_PFT_SOUND PrefetchType = 0
)

// Enum value maps for PrefetchType.
var (
	PrefetchType_name = map[int32]string{
		0: "PFT_SOUND",
	}
	PrefetchType_value = map[string]int32{
		"PFT_SOUND": 0,
	}
)

func (x PrefetchType) Enum() *PrefetchType {
	p := new(PrefetchType)
	*p = x
	return p
}

func (x PrefetchType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrefetchType) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[4].Descriptor()
}

func (PrefetchType) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[4]
}

func (x PrefetchType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PrefetchType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PrefetchType(num)
	return nil
}

// Deprecated: Use PrefetchType.Descriptor instead.
func (PrefetchType) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{4}
}

type ESplitScreenMessageType int32

const (
	ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER    ESplitScreenMessageType = 0
	ESplitScreenMessageType_MSG_SPLITSCREEN_REMOVEUSER ESplitScreenMessageType = 1
)

// Enum value maps for ESplitScreenMessageType.
var (
	ESplitScreenMessageType_name = map[int32]string{
		0: "MSG_SPLITSCREEN_ADDUSER",
		1: "MSG_SPLITSCREEN_REMOVEUSER",
	}
	ESplitScreenMessageType_value = map[string]int32{
		"MSG_SPLITSCREEN_ADDUSER":    0,
		"MSG_SPLITSCREEN_REMOVEUSER": 1,
	}
)

func (x ESplitScreenMessageType) Enum() *ESplitScreenMessageType {
	p := new(ESplitScreenMessageType)
	*p = x
	return p
}

func (x ESplitScreenMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ESplitScreenMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[5].Descriptor()
}

func (ESplitScreenMessageType) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[5]
}

func (x ESplitScreenMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ESplitScreenMessageType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ESplitScreenMessageType(num)
	return nil
}

// Deprecated: Use ESplitScreenMessageType.Descriptor instead.
func (ESplitScreenMessageType) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{5}
}

type EQueryCvarValueStatus int32

const (
	EQueryCvarValueStatus_eQueryCvarValueStatus_ValueIntact   EQueryCvarValueStatus = 0
	EQueryCvarValueStatus_eQueryCvarValueStatus_CvarNotFound  EQueryCvarValueStatus = 1
	EQueryCvarValueStatus_eQueryCvarValueStatus_NotACvar      EQueryCvarValueStatus = 2
	EQueryCvarValueStatus_eQueryCvarValueStatus_CvarProtected EQueryCvarValueStatus = 3
)

// Enum value maps for EQueryCvarValueStatus.
var (
	EQueryCvarValueStatus_name = map[int32]string{
		0: "eQueryCvarValueStatus_ValueIntact",
		1: "eQueryCvarValueStatus_CvarNotFound",
		2: "eQueryCvarValueStatus_NotACvar",
		3: "eQueryCvarValueStatus_CvarProtected",
	}
	EQueryCvarValueStatus_value = map[string]int32{
		"eQueryCvarValueStatus_ValueIntact":   0,
		"eQueryCvarValueStatus_CvarNotFound":  1,
		"eQueryCvarValueStatus_NotACvar":      2,
		"eQueryCvarValueStatus_CvarProtected": 3,
	}
)

func (x EQueryCvarValueStatus) Enum() *EQueryCvarValueStatus {
	p := new(EQueryCvarValueStatus)
	*p = x
	return p
}

func (x EQueryCvarValueStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EQueryCvarValueStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[6].Descriptor()
}

func (EQueryCvarValueStatus) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[6]
}

func (x EQueryCvarValueStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *EQueryCvarValueStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = EQueryCvarValueStatus(num)
	return nil
}

// Deprecated: Use EQueryCvarValueStatus.Descriptor instead.
func (EQueryCvarValueStatus) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{6}
}

type DIALOG_TYPE int32

const (
	DIALOG_TYPE_DIALOG_MSG        DIALOG_TYPE = 0
	DIALOG_TYPE_DIALOG_MENU       DIALOG_TYPE = 1
	DIALOG_TYPE_DIALOG_TEXT       DIALOG_TYPE = 2
	DIALOG_TYPE_DIALOG_ENTRY      DIALOG_TYPE = 3
	DIALOG_TYPE_DIALOG_ASKCONNECT DIALOG_TYPE = 4
)

// Enum value maps for DIALOG_TYPE.
var (
	DIALOG_TYPE_name = map[int32]string{
		0: "DIALOG_MSG",
		1: "DIALOG_MENU",
		2: "DIALOG_TEXT",
		3: "DIALOG_ENTRY",
		4: "DIALOG_ASKCONNECT",
	}
	DIALOG_TYPE_value = map[string]int32{
		"DIALOG_MSG":        0,
		"DIALOG_MENU":       1,
		"DIALOG_TEXT":       2,
		"DIALOG_ENTRY":      3,
		"DIALOG_ASKCONNECT": 4,
	}
)

func (x DIALOG_TYPE) Enum() *DIALOG_TYPE {
	p := new(DIALOG_TYPE)
	*p = x
	return p
}

func (x DIALOG_TYPE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DIALOG_TYPE) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[7].Descriptor()
}

func (DIALOG_TYPE) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[7]
}

func (x DIALOG_TYPE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *DIALOG_TYPE) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = DIALOG_TYPE(num)
	return nil
}

// Deprecated: Use DIALOG_TYPE.Descriptor instead.
func (DIALOG_TYPE) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{7}
}

type SVC_Messages_LowFrequency int32

const (
	SVC_Messages_LowFrequency_svc_dummy SVC_Messages_LowFrequency = 600
)

// Enum value maps for SVC_Messages_LowFrequency.
var (
	SVC_Messages_LowFrequency_name = map[int32]string{
		600: "svc_dummy",
	}
	SVC_Messages_LowFrequency_value = map[string]int32{
		"svc_dummy": 600,
	}
)

func (x SVC_Messages_LowFrequency) Enum() *SVC_Messages_LowFrequency {
	p := new(SVC_Messages_LowFrequency)
	*p = x
	return p
}

func (x SVC_Messages_LowFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SVC_Messages_LowFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[8].Descriptor()
}

func (SVC_Messages_LowFrequency) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[8]
}

func (x SVC_Messages_LowFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SVC_Messages_LowFrequency) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SVC_Messages_LowFrequency(num)
	return nil
}

// Deprecated: Use SVC_Messages_LowFrequency.Descriptor instead.
func (SVC_Messages_LowFrequency) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{8}
}

type Bidirectional_Messages int32

const (
	Bidirectional_Messages_bi_RebroadcastGameEvent Bidirectional_Messages = 16
	Bidirectional_Messages_bi_RebroadcastSource    Bidirectional_Messages = 17
	Bidirectional_Messages_bi_GameEvent            Bidirectional_Messages = 18
	Bidirectional_Messages_bi_PredictionEvent      Bidirectional_Messages = 19
)

// Enum value maps for Bidirectional_Messages.
var (
	Bidirectional_Messages_name = map[int32]string{
		16: "bi_RebroadcastGameEvent",
		17: "bi_RebroadcastSource",
		18: "bi_GameEvent",
		19: "bi_PredictionEvent",
	}
	Bidirectional_Messages_value = map[string]int32{
		"bi_RebroadcastGameEvent": 16,
		"bi_RebroadcastSource":    17,
		"bi_GameEvent":            18,
		"bi_PredictionEvent":      19,
	}
)

func (x Bidirectional_Messages) Enum() *Bidirectional_Messages {
	p := new(Bidirectional_Messages)
	*p = x
	return p
}

func (x Bidirectional_Messages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bidirectional_Messages) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[9].Descriptor()
}

func (Bidirectional_Messages) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[9]
}

func (x Bidirectional_Messages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Bidirectional_Messages) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Bidirectional_Messages(num)
	return nil
}

// Deprecated: Use Bidirectional_Messages.Descriptor instead.
func (Bidirectional_Messages) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{9}
}

type Bidirectional_Messages_LowFrequency int32

const (
	Bidirectional_Messages_LowFrequency_bi_RelayInfo   Bidirectional_Messages_LowFrequency = 700
	Bidirectional_Messages_LowFrequency_bi_RelayPacket Bidirectional_Messages_LowFrequency = 701
)

// Enum value maps for Bidirectional_Messages_LowFrequency.
var (
	Bidirectional_Messages_LowFrequency_name = map[int32]string{
		700: "bi_RelayInfo",
		701: "bi_RelayPacket",
	}
	Bidirectional_Messages_LowFrequency_value = map[string]int32{
		"bi_RelayInfo":   700,
		"bi_RelayPacket": 701,
	}
)

func (x Bidirectional_Messages_LowFrequency) Enum() *Bidirectional_Messages_LowFrequency {
	p := new(Bidirectional_Messages_LowFrequency)
	*p = x
	return p
}

func (x Bidirectional_Messages_LowFrequency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Bidirectional_Messages_LowFrequency) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[10].Descriptor()
}

func (Bidirectional_Messages_LowFrequency) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[10]
}

func (x Bidirectional_Messages_LowFrequency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Bidirectional_Messages_LowFrequency) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Bidirectional_Messages_LowFrequency(num)
	return nil
}

// Deprecated: Use Bidirectional_Messages_LowFrequency.Descriptor instead.
func (Bidirectional_Messages_LowFrequency) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{10}
}

type ReplayEventTypeT int32

const (
	ReplayEventTypeT_REPLAY_EVENT_CANCEL                 ReplayEventTypeT = 0
	ReplayEventTypeT_REPLAY_EVENT_DEATH                  ReplayEventTypeT = 1
	ReplayEventTypeT_REPLAY_EVENT_GENERIC                ReplayEventTypeT = 2
	ReplayEventTypeT_REPLAY_EVENT_STUCK_NEED_FULL_UPDATE ReplayEventTypeT = 3
	ReplayEventTypeT_REPLAY_EVENT_VICTORY                ReplayEventTypeT = 4
)

// Enum value maps for ReplayEventTypeT.
var (
	ReplayEventTypeT_name = map[int32]string{
		0: "REPLAY_EVENT_CANCEL",
		1: "REPLAY_EVENT_DEATH",
		2: "REPLAY_EVENT_GENERIC",
		3: "REPLAY_EVENT_STUCK_NEED_FULL_UPDATE",
		4: "REPLAY_EVENT_VICTORY",
	}
	ReplayEventTypeT_value = map[string]int32{
		"REPLAY_EVENT_CANCEL":                 0,
		"REPLAY_EVENT_DEATH":                  1,
		"REPLAY_EVENT_GENERIC":                2,
		"REPLAY_EVENT_STUCK_NEED_FULL_UPDATE": 3,
		"REPLAY_EVENT_VICTORY":                4,
	}
)

func (x ReplayEventTypeT) Enum() *ReplayEventTypeT {
	p := new(ReplayEventTypeT)
	*p = x
	return p
}

func (x ReplayEventTypeT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReplayEventTypeT) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[11].Descriptor()
}

func (ReplayEventTypeT) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[11]
}

func (x ReplayEventTypeT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ReplayEventTypeT) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ReplayEventTypeT(num)
	return nil
}

// Deprecated: Use ReplayEventTypeT.Descriptor instead.
func (ReplayEventTypeT) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{11}
}

type CBidirMsg_PredictionEvent_ESyncType int32

const (
	CBidirMsg_PredictionEvent_ST_Tick       CBidirMsg_PredictionEvent_ESyncType = 0
	CBidirMsg_PredictionEvent_ST_UserCmdNum CBidirMsg_PredictionEvent_ESyncType = 1
)

// Enum value maps for CBidirMsg_PredictionEvent_ESyncType.
var (
	CBidirMsg_PredictionEvent_ESyncType_name = map[int32]string{
		0: "ST_Tick",
		1: "ST_UserCmdNum",
	}
	CBidirMsg_PredictionEvent_ESyncType_value = map[string]int32{
		"ST_Tick":       0,
		"ST_UserCmdNum": 1,
	}
)

func (x CBidirMsg_PredictionEvent_ESyncType) Enum() *CBidirMsg_PredictionEvent_ESyncType {
	p := new(CBidirMsg_PredictionEvent_ESyncType)
	*p = x
	return p
}

func (x CBidirMsg_PredictionEvent_ESyncType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CBidirMsg_PredictionEvent_ESyncType) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_netmessages_proto_enumTypes[12].Descriptor()
}

func (CBidirMsg_PredictionEvent_ESyncType) Type() protoreflect.EnumType {
	return &file_s2_netmessages_proto_enumTypes[12]
}

func (x CBidirMsg_PredictionEvent_ESyncType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CBidirMsg_PredictionEvent_ESyncType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CBidirMsg_PredictionEvent_ESyncType(num)
	return nil
}

// Deprecated: Use CBidirMsg_PredictionEvent_ESyncType.Descriptor instead.
func (CBidirMsg_PredictionEvent_ESyncType) EnumDescriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{59, 0}
}

type CCLCMsg_ClientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SendTableCrc  *uint32                `protobuf:"fixed32,1,opt,name=send_table_crc,json=sendTableCrc" json:"send_table_crc,omitempty"`
	ServerCount   *uint32                `protobuf:"varint,2,opt,name=server_count,json=serverCount" json:"server_count,omitempty"`
	IsHltv        *bool                  `protobuf:"varint,3,opt,name=is_hltv,json=isHltv" json:"is_hltv,omitempty"`
	FriendsId     *uint32                `protobuf:"varint,5,opt,name=friends_id,json=friendsId" json:"friends_id,omitempty"`
	FriendsName   *string                `protobuf:"bytes,6,opt,name=friends_name,json=friendsName" json:"friends_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_ClientInfo) Reset() {
	*x = CCLCMsg_ClientInfo{}
	mi := &file_s2_netmessages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_ClientInfo) ProtoMessage() {}

func (x *CCLCMsg_ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_ClientInfo.ProtoReflect.Descriptor instead.
func (*CCLCMsg_ClientInfo) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{0}
}

func (x *CCLCMsg_ClientInfo) GetSendTableCrc() uint32 {
	if x != nil && x.SendTableCrc != nil {
		return *x.SendTableCrc
	}
	return 0
}

func (x *CCLCMsg_ClientInfo) GetServerCount() uint32 {
	if x != nil && x.ServerCount != nil {
		return *x.ServerCount
	}
	return 0
}

func (x *CCLCMsg_ClientInfo) GetIsHltv() bool {
	if x != nil && x.IsHltv != nil {
		return *x.IsHltv
	}
	return false
}

func (x *CCLCMsg_ClientInfo) GetFriendsId() uint32 {
	if x != nil && x.FriendsId != nil {
		return *x.FriendsId
	}
	return 0
}

func (x *CCLCMsg_ClientInfo) GetFriendsName() string {
	if x != nil && x.FriendsName != nil {
		return *x.FriendsName
	}
	return ""
}

type CCLCMsg_Move struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Data              []byte                 `protobuf:"bytes,3,opt,name=data" json:"data,omitempty"`
	LastCommandNumber *uint32                `protobuf:"varint,4,opt,name=last_command_number,json=lastCommandNumber" json:"last_command_number,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CCLCMsg_Move) Reset() {
	*x = CCLCMsg_Move{}
	mi := &file_s2_netmessages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_Move) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_Move) ProtoMessage() {}

func (x *CCLCMsg_Move) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_Move.ProtoReflect.Descriptor instead.
func (*CCLCMsg_Move) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{1}
}

func (x *CCLCMsg_Move) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CCLCMsg_Move) GetLastCommandNumber() uint32 {
	if x != nil && x.LastCommandNumber != nil {
		return *x.LastCommandNumber
	}
	return 0
}

type CMsgVoiceAudio struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Format                   *VoiceDataFormatT      `protobuf:"varint,1,opt,name=format,enum=com.github.markus_wa.demoinfocs_golang.s2.VoiceDataFormatT,def=0" json:"format,omitempty"`
	VoiceData                []byte                 `protobuf:"bytes,2,opt,name=voice_data,json=voiceData" json:"voice_data,omitempty"`
	SequenceBytes            *int32                 `protobuf:"varint,3,opt,name=sequence_bytes,json=sequenceBytes" json:"sequence_bytes,omitempty"`
	SectionNumber            *uint32                `protobuf:"varint,4,opt,name=section_number,json=sectionNumber" json:"section_number,omitempty"`
	SampleRate               *uint32                `protobuf:"varint,5,opt,name=sample_rate,json=sampleRate" json:"sample_rate,omitempty"`
	UncompressedSampleOffset *uint32                `protobuf:"varint,6,opt,name=uncompressed_sample_offset,json=uncompressedSampleOffset" json:"uncompressed_sample_offset,omitempty"`
	NumPackets               *uint32                `protobuf:"varint,7,opt,name=num_packets,json=numPackets" json:"num_packets,omitempty"`
	PacketOffsets            []uint32               `protobuf:"varint,8,rep,packed,name=packet_offsets,json=packetOffsets" json:"packet_offsets,omitempty"`
	VoiceLevel               *float32               `protobuf:"fixed32,9,opt,name=voice_level,json=voiceLevel" json:"voice_level,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

// Default values for CMsgVoiceAudio fields.
const (
	Default_CMsgVoiceAudio_Format = VoiceDataFormatT_VOICEDATA_FORMAT_STEAM
)

func (x *CMsgVoiceAudio) Reset() {
	*x = CMsgVoiceAudio{}
	mi := &file_s2_netmessages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVoiceAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVoiceAudio) ProtoMessage() {}

func (x *CMsgVoiceAudio) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVoiceAudio.ProtoReflect.Descriptor instead.
func (*CMsgVoiceAudio) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgVoiceAudio) GetFormat() VoiceDataFormatT {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return Default_CMsgVoiceAudio_Format
}

func (x *CMsgVoiceAudio) GetVoiceData() []byte {
	if x != nil {
		return x.VoiceData
	}
	return nil
}

func (x *CMsgVoiceAudio) GetSequenceBytes() int32 {
	if x != nil && x.SequenceBytes != nil {
		return *x.SequenceBytes
	}
	return 0
}

func (x *CMsgVoiceAudio) GetSectionNumber() uint32 {
	if x != nil && x.SectionNumber != nil {
		return *x.SectionNumber
	}
	return 0
}

func (x *CMsgVoiceAudio) GetSampleRate() uint32 {
	if x != nil && x.SampleRate != nil {
		return *x.SampleRate
	}
	return 0
}

func (x *CMsgVoiceAudio) GetUncompressedSampleOffset() uint32 {
	if x != nil && x.UncompressedSampleOffset != nil {
		return *x.UncompressedSampleOffset
	}
	return 0
}

func (x *CMsgVoiceAudio) GetNumPackets() uint32 {
	if x != nil && x.NumPackets != nil {
		return *x.NumPackets
	}
	return 0
}

func (x *CMsgVoiceAudio) GetPacketOffsets() []uint32 {
	if x != nil {
		return x.PacketOffsets
	}
	return nil
}

func (x *CMsgVoiceAudio) GetVoiceLevel() float32 {
	if x != nil && x.VoiceLevel != nil {
		return *x.VoiceLevel
	}
	return 0
}

type CCLCMsg_VoiceData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Audio         *CMsgVoiceAudio        `protobuf:"bytes,1,opt,name=audio" json:"audio,omitempty"`
	Xuid          *uint64                `protobuf:"fixed64,2,opt,name=xuid" json:"xuid,omitempty"`
	Tick          *uint32                `protobuf:"varint,3,opt,name=tick" json:"tick,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_VoiceData) Reset() {
	*x = CCLCMsg_VoiceData{}
	mi := &file_s2_netmessages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_VoiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_VoiceData) ProtoMessage() {}

func (x *CCLCMsg_VoiceData) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_VoiceData.ProtoReflect.Descriptor instead.
func (*CCLCMsg_VoiceData) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{3}
}

func (x *CCLCMsg_VoiceData) GetAudio() *CMsgVoiceAudio {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *CCLCMsg_VoiceData) GetXuid() uint64 {
	if x != nil && x.Xuid != nil {
		return *x.Xuid
	}
	return 0
}

func (x *CCLCMsg_VoiceData) GetTick() uint32 {
	if x != nil && x.Tick != nil {
		return *x.Tick
	}
	return 0
}

type CCLCMsg_BaselineAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BaselineTick  *int32                 `protobuf:"varint,1,opt,name=baseline_tick,json=baselineTick" json:"baseline_tick,omitempty"`
	BaselineNr    *int32                 `protobuf:"varint,2,opt,name=baseline_nr,json=baselineNr" json:"baseline_nr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_BaselineAck) Reset() {
	*x = CCLCMsg_BaselineAck{}
	mi := &file_s2_netmessages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_BaselineAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_BaselineAck) ProtoMessage() {}

func (x *CCLCMsg_BaselineAck) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_BaselineAck.ProtoReflect.Descriptor instead.
func (*CCLCMsg_BaselineAck) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{4}
}

func (x *CCLCMsg_BaselineAck) GetBaselineTick() int32 {
	if x != nil && x.BaselineTick != nil {
		return *x.BaselineTick
	}
	return 0
}

func (x *CCLCMsg_BaselineAck) GetBaselineNr() int32 {
	if x != nil && x.BaselineNr != nil {
		return *x.BaselineNr
	}
	return 0
}

type CCLCMsg_ListenEvents struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventMask     []uint32               `protobuf:"fixed32,1,rep,name=event_mask,json=eventMask" json:"event_mask,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_ListenEvents) Reset() {
	*x = CCLCMsg_ListenEvents{}
	mi := &file_s2_netmessages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_ListenEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_ListenEvents) ProtoMessage() {}

func (x *CCLCMsg_ListenEvents) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_ListenEvents.ProtoReflect.Descriptor instead.
func (*CCLCMsg_ListenEvents) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{5}
}

func (x *CCLCMsg_ListenEvents) GetEventMask() []uint32 {
	if x != nil {
		return x.EventMask
	}
	return nil
}

type CCLCMsg_RespondCvarValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cookie        *int32                 `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	StatusCode    *int32                 `protobuf:"varint,2,opt,name=status_code,json=statusCode" json:"status_code,omitempty"`
	Name          *string                `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Value         *string                `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_RespondCvarValue) Reset() {
	*x = CCLCMsg_RespondCvarValue{}
	mi := &file_s2_netmessages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_RespondCvarValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_RespondCvarValue) ProtoMessage() {}

func (x *CCLCMsg_RespondCvarValue) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_RespondCvarValue.ProtoReflect.Descriptor instead.
func (*CCLCMsg_RespondCvarValue) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{6}
}

func (x *CCLCMsg_RespondCvarValue) GetCookie() int32 {
	if x != nil && x.Cookie != nil {
		return *x.Cookie
	}
	return 0
}

func (x *CCLCMsg_RespondCvarValue) GetStatusCode() int32 {
	if x != nil && x.StatusCode != nil {
		return *x.StatusCode
	}
	return 0
}

func (x *CCLCMsg_RespondCvarValue) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CCLCMsg_RespondCvarValue) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CCLCMsg_LoadingProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Progress      *int32                 `protobuf:"varint,1,opt,name=progress" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_LoadingProgress) Reset() {
	*x = CCLCMsg_LoadingProgress{}
	mi := &file_s2_netmessages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_LoadingProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_LoadingProgress) ProtoMessage() {}

func (x *CCLCMsg_LoadingProgress) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_LoadingProgress.ProtoReflect.Descriptor instead.
func (*CCLCMsg_LoadingProgress) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{7}
}

func (x *CCLCMsg_LoadingProgress) GetProgress() int32 {
	if x != nil && x.Progress != nil {
		return *x.Progress
	}
	return 0
}

type CCLCMsg_SplitPlayerConnect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Playername    *string                `protobuf:"bytes,1,opt,name=playername" json:"playername,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_SplitPlayerConnect) Reset() {
	*x = CCLCMsg_SplitPlayerConnect{}
	mi := &file_s2_netmessages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_SplitPlayerConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_SplitPlayerConnect) ProtoMessage() {}

func (x *CCLCMsg_SplitPlayerConnect) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_SplitPlayerConnect.ProtoReflect.Descriptor instead.
func (*CCLCMsg_SplitPlayerConnect) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{8}
}

func (x *CCLCMsg_SplitPlayerConnect) GetPlayername() string {
	if x != nil && x.Playername != nil {
		return *x.Playername
	}
	return ""
}

type CCLCMsg_SplitPlayerDisconnect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          *int32                 `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_SplitPlayerDisconnect) Reset() {
	*x = CCLCMsg_SplitPlayerDisconnect{}
	mi := &file_s2_netmessages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_SplitPlayerDisconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_SplitPlayerDisconnect) ProtoMessage() {}

func (x *CCLCMsg_SplitPlayerDisconnect) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_SplitPlayerDisconnect.ProtoReflect.Descriptor instead.
func (*CCLCMsg_SplitPlayerDisconnect) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{9}
}

func (x *CCLCMsg_SplitPlayerDisconnect) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

type CCLCMsg_ServerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Simplified    *bool                  `protobuf:"varint,1,opt,name=simplified" json:"simplified,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_ServerStatus) Reset() {
	*x = CCLCMsg_ServerStatus{}
	mi := &file_s2_netmessages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_ServerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_ServerStatus) ProtoMessage() {}

func (x *CCLCMsg_ServerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_ServerStatus.ProtoReflect.Descriptor instead.
func (*CCLCMsg_ServerStatus) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{10}
}

func (x *CCLCMsg_ServerStatus) GetSimplified() bool {
	if x != nil && x.Simplified != nil {
		return *x.Simplified
	}
	return false
}

type CCLCMsg_RequestPause struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PauseType     *RequestPauseT         `protobuf:"varint,1,opt,name=pause_type,json=pauseType,enum=com.github.markus_wa.demoinfocs_golang.s2.RequestPauseT,def=0" json:"pause_type,omitempty"`
	PauseGroup    *int32                 `protobuf:"varint,2,opt,name=pause_group,json=pauseGroup" json:"pause_group,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CCLCMsg_RequestPause fields.
const (
	Default_CCLCMsg_RequestPause_PauseType = RequestPauseT_RP_PAUSE
)

func (x *CCLCMsg_RequestPause) Reset() {
	*x = CCLCMsg_RequestPause{}
	mi := &file_s2_netmessages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_RequestPause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_RequestPause) ProtoMessage() {}

func (x *CCLCMsg_RequestPause) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_RequestPause.ProtoReflect.Descriptor instead.
func (*CCLCMsg_RequestPause) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{11}
}

func (x *CCLCMsg_RequestPause) GetPauseType() RequestPauseT {
	if x != nil && x.PauseType != nil {
		return *x.PauseType
	}
	return Default_CCLCMsg_RequestPause_PauseType
}

func (x *CCLCMsg_RequestPause) GetPauseGroup() int32 {
	if x != nil && x.PauseGroup != nil {
		return *x.PauseGroup
	}
	return 0
}

type CCLCMsg_CmdKeyValues struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_CmdKeyValues) Reset() {
	*x = CCLCMsg_CmdKeyValues{}
	mi := &file_s2_netmessages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_CmdKeyValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_CmdKeyValues) ProtoMessage() {}

func (x *CCLCMsg_CmdKeyValues) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_CmdKeyValues.ProtoReflect.Descriptor instead.
func (*CCLCMsg_CmdKeyValues) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{12}
}

func (x *CCLCMsg_CmdKeyValues) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CCLCMsg_RconServerDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         []byte                 `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CCLCMsg_RconServerDetails) Reset() {
	*x = CCLCMsg_RconServerDetails{}
	mi := &file_s2_netmessages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_RconServerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_RconServerDetails) ProtoMessage() {}

func (x *CCLCMsg_RconServerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_RconServerDetails.ProtoReflect.Descriptor instead.
func (*CCLCMsg_RconServerDetails) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{13}
}

func (x *CCLCMsg_RconServerDetails) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type CMsgSource2SystemSpecs struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	CpuId                  *string                `protobuf:"bytes,1,opt,name=cpu_id,json=cpuId" json:"cpu_id,omitempty"`
	CpuBrand               *string                `protobuf:"bytes,2,opt,name=cpu_brand,json=cpuBrand" json:"cpu_brand,omitempty"`
	CpuModel               *uint32                `protobuf:"varint,3,opt,name=cpu_model,json=cpuModel" json:"cpu_model,omitempty"`
	CpuNumPhysical         *uint32                `protobuf:"varint,4,opt,name=cpu_num_physical,json=cpuNumPhysical" json:"cpu_num_physical,omitempty"`
	RamPhysicalTotalMb     *uint32                `protobuf:"varint,21,opt,name=ram_physical_total_mb,json=ramPhysicalTotalMb" json:"ram_physical_total_mb,omitempty"`
	GpuRendersystemDllName *string                `protobuf:"bytes,41,opt,name=gpu_rendersystem_dll_name,json=gpuRendersystemDllName" json:"gpu_rendersystem_dll_name,omitempty"`
	GpuVendorId            *uint32                `protobuf:"varint,42,opt,name=gpu_vendor_id,json=gpuVendorId" json:"gpu_vendor_id,omitempty"`
	GpuDriverName          *string                `protobuf:"bytes,43,opt,name=gpu_driver_name,json=gpuDriverName" json:"gpu_driver_name,omitempty"`
	GpuDriverVersionHigh   *uint32                `protobuf:"varint,44,opt,name=gpu_driver_version_high,json=gpuDriverVersionHigh" json:"gpu_driver_version_high,omitempty"`
	GpuDriverVersionLow    *uint32                `protobuf:"varint,45,opt,name=gpu_driver_version_low,json=gpuDriverVersionLow" json:"gpu_driver_version_low,omitempty"`
	GpuDxSupportLevel      *uint32                `protobuf:"varint,46,opt,name=gpu_dx_support_level,json=gpuDxSupportLevel" json:"gpu_dx_support_level,omitempty"`
	GpuTextureMemorySizeMb *uint32                `protobuf:"varint,47,opt,name=gpu_texture_memory_size_mb,json=gpuTextureMemorySizeMb" json:"gpu_texture_memory_size_mb,omitempty"`
	BackbufferWidth        *uint32                `protobuf:"varint,51,opt,name=backbuffer_width,json=backbufferWidth" json:"backbuffer_width,omitempty"`
	BackbufferHeight       *uint32                `protobuf:"varint,52,opt,name=backbuffer_height,json=backbufferHeight" json:"backbuffer_height,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CMsgSource2SystemSpecs) Reset() {
	*x = CMsgSource2SystemSpecs{}
	mi := &file_s2_netmessages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource2SystemSpecs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource2SystemSpecs) ProtoMessage() {}

func (x *CMsgSource2SystemSpecs) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource2SystemSpecs.ProtoReflect.Descriptor instead.
func (*CMsgSource2SystemSpecs) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{14}
}

func (x *CMsgSource2SystemSpecs) GetCpuId() string {
	if x != nil && x.CpuId != nil {
		return *x.CpuId
	}
	return ""
}

func (x *CMsgSource2SystemSpecs) GetCpuBrand() string {
	if x != nil && x.CpuBrand != nil {
		return *x.CpuBrand
	}
	return ""
}

func (x *CMsgSource2SystemSpecs) GetCpuModel() uint32 {
	if x != nil && x.CpuModel != nil {
		return *x.CpuModel
	}
	return 0
}

func (x *CMsgSource2SystemSpecs) GetCpuNumPhysical() uint32 {
	if x != nil && x.CpuNumPhysical != nil {
		return *x.CpuNumPhysical
	}
	return 0
}

func (x *CMsgSource2SystemSpecs) GetRamPhysicalTotalMb() uint32 {
	if x != nil && x.RamPhysicalTotalMb != nil {
		return *x.RamPhysicalTotalMb
	}
	return 0
}

func (x *CMsgSource2SystemSpecs) GetGpuRendersystemDllName() string {
	if x != nil && x.GpuRendersystemDllName != nil {
		return *x.GpuRendersystemDllName
	}
	return ""
}

func (x *CMsgSource2SystemSpecs) GetGpuVendorId() uint32 {
	if x != nil && x.GpuVendorId != nil {
		return *x.GpuVendorId
	}
	return 0
}

func (x *CMsgSource2SystemSpecs) GetGpuDriverName() string {
	if x != nil && x.GpuDriverName != nil {
		return *x.GpuDriverName
	}
	return ""
}

func (x *CMsgSource2SystemSpecs) GetGpuDriverVersionHigh() uint32 {
	if x != nil && x.GpuDriverVersionHigh != nil {
		return *x.GpuDriverVersionHigh
	}
	return 0
}

func (x *CMsgSource2SystemSpecs) GetGpuDriverVersionLow() uint32 {
	if x != nil && x.GpuDriverVersionLow != nil {
		return *x.GpuDriverVersionLow
	}
	return 0
}

func (x *CMsgSource2SystemSpecs) GetGpuDxSupportLevel() uint32 {
	if x != nil && x.GpuDxSupportLevel != nil {
		return *x.GpuDxSupportLevel
	}
	return 0
}

func (x *CMsgSource2SystemSpecs) GetGpuTextureMemorySizeMb() uint32 {
	if x != nil && x.GpuTextureMemorySizeMb != nil {
		return *x.GpuTextureMemorySizeMb
	}
	return 0
}

func (x *CMsgSource2SystemSpecs) GetBackbufferWidth() uint32 {
	if x != nil && x.BackbufferWidth != nil {
		return *x.BackbufferWidth
	}
	return 0
}

func (x *CMsgSource2SystemSpecs) GetBackbufferHeight() uint32 {
	if x != nil && x.BackbufferHeight != nil {
		return *x.BackbufferHeight
	}
	return 0
}

type CMsgSource2VProfLiteReportItem struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Name                  *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	ActiveSamples         *uint32                `protobuf:"varint,2,opt,name=active_samples,json=activeSamples" json:"active_samples,omitempty"`
	ActiveSamples_1Secmax *uint32                `protobuf:"varint,4,opt,name=active_samples_1secmax,json=activeSamples1secmax" json:"active_samples_1secmax,omitempty"`
	UsecMax               *uint32                `protobuf:"varint,3,opt,name=usec_max,json=usecMax" json:"usec_max,omitempty"`
	UsecAvgActive         *uint32                `protobuf:"varint,11,opt,name=usec_avg_active,json=usecAvgActive" json:"usec_avg_active,omitempty"`
	UsecP50Active         *uint32                `protobuf:"varint,12,opt,name=usec_p50_active,json=usecP50Active" json:"usec_p50_active,omitempty"`
	UsecP99Active         *uint32                `protobuf:"varint,13,opt,name=usec_p99_active,json=usecP99Active" json:"usec_p99_active,omitempty"`
	UsecAvgAll            *uint32                `protobuf:"varint,21,opt,name=usec_avg_all,json=usecAvgAll" json:"usec_avg_all,omitempty"`
	UsecP50All            *uint32                `protobuf:"varint,22,opt,name=usec_p50_all,json=usecP50All" json:"usec_p50_all,omitempty"`
	UsecP99All            *uint32                `protobuf:"varint,23,opt,name=usec_p99_all,json=usecP99All" json:"usec_p99_all,omitempty"`
	Usec_1SecmaxAvgActive *uint32                `protobuf:"varint,31,opt,name=usec_1secmax_avg_active,json=usec1secmaxAvgActive" json:"usec_1secmax_avg_active,omitempty"`
	Usec_1SecmaxP50Active *uint32                `protobuf:"varint,32,opt,name=usec_1secmax_p50_active,json=usec1secmaxP50Active" json:"usec_1secmax_p50_active,omitempty"`
	Usec_1SecmaxP95Active *uint32                `protobuf:"varint,33,opt,name=usec_1secmax_p95_active,json=usec1secmaxP95Active" json:"usec_1secmax_p95_active,omitempty"`
	Usec_1SecmaxP99Active *uint32                `protobuf:"varint,34,opt,name=usec_1secmax_p99_active,json=usec1secmaxP99Active" json:"usec_1secmax_p99_active,omitempty"`
	Usec_1SecmaxAvgAll    *uint32                `protobuf:"varint,41,opt,name=usec_1secmax_avg_all,json=usec1secmaxAvgAll" json:"usec_1secmax_avg_all,omitempty"`
	Usec_1SecmaxP50All    *uint32                `protobuf:"varint,42,opt,name=usec_1secmax_p50_all,json=usec1secmaxP50All" json:"usec_1secmax_p50_all,omitempty"`
	Usec_1SecmaxP95All    *uint32                `protobuf:"varint,43,opt,name=usec_1secmax_p95_all,json=usec1secmaxP95All" json:"usec_1secmax_p95_all,omitempty"`
	Usec_1SecmaxP99All    *uint32                `protobuf:"varint,44,opt,name=usec_1secmax_p99_all,json=usec1secmaxP99All" json:"usec_1secmax_p99_all,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CMsgSource2VProfLiteReportItem) Reset() {
	*x = CMsgSource2VProfLiteReportItem{}
	mi := &file_s2_netmessages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource2VProfLiteReportItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource2VProfLiteReportItem) ProtoMessage() {}

func (x *CMsgSource2VProfLiteReportItem) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource2VProfLiteReportItem.ProtoReflect.Descriptor instead.
func (*CMsgSource2VProfLiteReportItem) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{15}
}

func (x *CMsgSource2VProfLiteReportItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgSource2VProfLiteReportItem) GetActiveSamples() uint32 {
	if x != nil && x.ActiveSamples != nil {
		return *x.ActiveSamples
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetActiveSamples_1Secmax() uint32 {
	if x != nil && x.ActiveSamples_1Secmax != nil {
		return *x.ActiveSamples_1Secmax
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsecMax() uint32 {
	if x != nil && x.UsecMax != nil {
		return *x.UsecMax
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsecAvgActive() uint32 {
	if x != nil && x.UsecAvgActive != nil {
		return *x.UsecAvgActive
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsecP50Active() uint32 {
	if x != nil && x.UsecP50Active != nil {
		return *x.UsecP50Active
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsecP99Active() uint32 {
	if x != nil && x.UsecP99Active != nil {
		return *x.UsecP99Active
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsecAvgAll() uint32 {
	if x != nil && x.UsecAvgAll != nil {
		return *x.UsecAvgAll
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsecP50All() uint32 {
	if x != nil && x.UsecP50All != nil {
		return *x.UsecP50All
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsecP99All() uint32 {
	if x != nil && x.UsecP99All != nil {
		return *x.UsecP99All
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsec_1SecmaxAvgActive() uint32 {
	if x != nil && x.Usec_1SecmaxAvgActive != nil {
		return *x.Usec_1SecmaxAvgActive
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsec_1SecmaxP50Active() uint32 {
	if x != nil && x.Usec_1SecmaxP50Active != nil {
		return *x.Usec_1SecmaxP50Active
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsec_1SecmaxP95Active() uint32 {
	if x != nil && x.Usec_1SecmaxP95Active != nil {
		return *x.Usec_1SecmaxP95Active
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsec_1SecmaxP99Active() uint32 {
	if x != nil && x.Usec_1SecmaxP99Active != nil {
		return *x.Usec_1SecmaxP99Active
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsec_1SecmaxAvgAll() uint32 {
	if x != nil && x.Usec_1SecmaxAvgAll != nil {
		return *x.Usec_1SecmaxAvgAll
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsec_1SecmaxP50All() uint32 {
	if x != nil && x.Usec_1SecmaxP50All != nil {
		return *x.Usec_1SecmaxP50All
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsec_1SecmaxP95All() uint32 {
	if x != nil && x.Usec_1SecmaxP95All != nil {
		return *x.Usec_1SecmaxP95All
	}
	return 0
}

func (x *CMsgSource2VProfLiteReportItem) GetUsec_1SecmaxP99All() uint32 {
	if x != nil && x.Usec_1SecmaxP99All != nil {
		return *x.Usec_1SecmaxP99All
	}
	return 0
}

type CMsgSource2VProfLiteReport struct {
	state           protoimpl.MessageState            `protogen:"open.v1"`
	Total           *CMsgSource2VProfLiteReportItem   `protobuf:"bytes,1,opt,name=total" json:"total,omitempty"`
	Items           []*CMsgSource2VProfLiteReportItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	DiscardedFrames *uint32                           `protobuf:"varint,3,opt,name=discarded_frames,json=discardedFrames" json:"discarded_frames,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgSource2VProfLiteReport) Reset() {
	*x = CMsgSource2VProfLiteReport{}
	mi := &file_s2_netmessages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource2VProfLiteReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource2VProfLiteReport) ProtoMessage() {}

func (x *CMsgSource2VProfLiteReport) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource2VProfLiteReport.ProtoReflect.Descriptor instead.
func (*CMsgSource2VProfLiteReport) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{16}
}

func (x *CMsgSource2VProfLiteReport) GetTotal() *CMsgSource2VProfLiteReportItem {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *CMsgSource2VProfLiteReport) GetItems() []*CMsgSource2VProfLiteReportItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *CMsgSource2VProfLiteReport) GetDiscardedFrames() uint32 {
	if x != nil && x.DiscardedFrames != nil {
		return *x.DiscardedFrames
	}
	return 0
}

type CMsgSource2NetworkFlowQuality struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	Duration                      *uint32                `protobuf:"varint,1,opt,name=duration" json:"duration,omitempty"`
	BytesTotal                    *uint64                `protobuf:"varint,5,opt,name=bytes_total,json=bytesTotal" json:"bytes_total,omitempty"`
	BytesTotalReliable            *uint64                `protobuf:"varint,6,opt,name=bytes_total_reliable,json=bytesTotalReliable" json:"bytes_total_reliable,omitempty"`
	BytesTotalVoice               *uint64                `protobuf:"varint,7,opt,name=bytes_total_voice,json=bytesTotalVoice" json:"bytes_total_voice,omitempty"`
	BytesSecP95                   *uint32                `protobuf:"varint,10,opt,name=bytes_sec_p95,json=bytesSecP95" json:"bytes_sec_p95,omitempty"`
	BytesSecP99                   *uint32                `protobuf:"varint,11,opt,name=bytes_sec_p99,json=bytesSecP99" json:"bytes_sec_p99,omitempty"`
	EnginemsgsTotal               *uint32                `protobuf:"varint,20,opt,name=enginemsgs_total,json=enginemsgsTotal" json:"enginemsgs_total,omitempty"`
	EnginemsgsSecP95              *uint32                `protobuf:"varint,21,opt,name=enginemsgs_sec_p95,json=enginemsgsSecP95" json:"enginemsgs_sec_p95,omitempty"`
	EnginemsgsSecP99              *uint32                `protobuf:"varint,22,opt,name=enginemsgs_sec_p99,json=enginemsgsSecP99" json:"enginemsgs_sec_p99,omitempty"`
	NetframesTotal                *uint32                `protobuf:"varint,30,opt,name=netframes_total,json=netframesTotal" json:"netframes_total,omitempty"`
	NetframesDropped              *uint32                `protobuf:"varint,31,opt,name=netframes_dropped,json=netframesDropped" json:"netframes_dropped,omitempty"`
	NetframesOutoforder           *uint32                `protobuf:"varint,32,opt,name=netframes_outoforder,json=netframesOutoforder" json:"netframes_outoforder,omitempty"`
	NetframesSizeExceedsMtu       *uint32                `protobuf:"varint,34,opt,name=netframes_size_exceeds_mtu,json=netframesSizeExceedsMtu" json:"netframes_size_exceeds_mtu,omitempty"`
	NetframesSizeP95              *uint32                `protobuf:"varint,35,opt,name=netframes_size_p95,json=netframesSizeP95" json:"netframes_size_p95,omitempty"`
	NetframesSizeP99              *uint32                `protobuf:"varint,36,opt,name=netframes_size_p99,json=netframesSizeP99" json:"netframes_size_p99,omitempty"`
	TicksTotal                    *uint32                `protobuf:"varint,40,opt,name=ticks_total,json=ticksTotal" json:"ticks_total,omitempty"`
	TicksGood                     *uint32                `protobuf:"varint,41,opt,name=ticks_good,json=ticksGood" json:"ticks_good,omitempty"`
	TicksGoodAlmostLate           *uint32                `protobuf:"varint,42,opt,name=ticks_good_almost_late,json=ticksGoodAlmostLate" json:"ticks_good_almost_late,omitempty"`
	TicksFixedDropped             *uint32                `protobuf:"varint,43,opt,name=ticks_fixed_dropped,json=ticksFixedDropped" json:"ticks_fixed_dropped,omitempty"`
	TicksFixedLate                *uint32                `protobuf:"varint,44,opt,name=ticks_fixed_late,json=ticksFixedLate" json:"ticks_fixed_late,omitempty"`
	TicksBadDropped               *uint32                `protobuf:"varint,45,opt,name=ticks_bad_dropped,json=ticksBadDropped" json:"ticks_bad_dropped,omitempty"`
	TicksBadLate                  *uint32                `protobuf:"varint,46,opt,name=ticks_bad_late,json=ticksBadLate" json:"ticks_bad_late,omitempty"`
	TicksBadOther                 *uint32                `protobuf:"varint,47,opt,name=ticks_bad_other,json=ticksBadOther" json:"ticks_bad_other,omitempty"`
	TickMissrateSamplesTotal      *uint32                `protobuf:"varint,50,opt,name=tick_missrate_samples_total,json=tickMissrateSamplesTotal" json:"tick_missrate_samples_total,omitempty"`
	TickMissrateSamplesPerfect    *uint32                `protobuf:"varint,51,opt,name=tick_missrate_samples_perfect,json=tickMissrateSamplesPerfect" json:"tick_missrate_samples_perfect,omitempty"`
	TickMissrateSamplesPerfectnet *uint32                `protobuf:"varint,52,opt,name=tick_missrate_samples_perfectnet,json=tickMissrateSamplesPerfectnet" json:"tick_missrate_samples_perfectnet,omitempty"`
	TickMissratenetP75X10         *uint32                `protobuf:"varint,53,opt,name=tick_missratenet_p75_x10,json=tickMissratenetP75X10" json:"tick_missratenet_p75_x10,omitempty"`
	TickMissratenetP95X10         *uint32                `protobuf:"varint,54,opt,name=tick_missratenet_p95_x10,json=tickMissratenetP95X10" json:"tick_missratenet_p95_x10,omitempty"`
	TickMissratenetP99X10         *uint32                `protobuf:"varint,55,opt,name=tick_missratenet_p99_x10,json=tickMissratenetP99X10" json:"tick_missratenet_p99_x10,omitempty"`
	RecvmarginP1                  *int32                 `protobuf:"zigzag32,61,opt,name=recvmargin_p1,json=recvmarginP1" json:"recvmargin_p1,omitempty"`
	RecvmarginP5                  *int32                 `protobuf:"zigzag32,62,opt,name=recvmargin_p5,json=recvmarginP5" json:"recvmargin_p5,omitempty"`
	RecvmarginP25                 *int32                 `protobuf:"zigzag32,63,opt,name=recvmargin_p25,json=recvmarginP25" json:"recvmargin_p25,omitempty"`
	RecvmarginP50                 *int32                 `protobuf:"zigzag32,64,opt,name=recvmargin_p50,json=recvmarginP50" json:"recvmargin_p50,omitempty"`
	RecvmarginP75                 *int32                 `protobuf:"zigzag32,65,opt,name=recvmargin_p75,json=recvmarginP75" json:"recvmargin_p75,omitempty"`
	RecvmarginP95                 *int32                 `protobuf:"zigzag32,66,opt,name=recvmargin_p95,json=recvmarginP95" json:"recvmargin_p95,omitempty"`
	NetframeJitterP50             *uint32                `protobuf:"varint,70,opt,name=netframe_jitter_p50,json=netframeJitterP50" json:"netframe_jitter_p50,omitempty"`
	NetframeJitterP99             *uint32                `protobuf:"varint,71,opt,name=netframe_jitter_p99,json=netframeJitterP99" json:"netframe_jitter_p99,omitempty"`
	IntervalPeakjitterP50         *uint32                `protobuf:"varint,72,opt,name=interval_peakjitter_p50,json=intervalPeakjitterP50" json:"interval_peakjitter_p50,omitempty"`
	IntervalPeakjitterP95         *uint32                `protobuf:"varint,73,opt,name=interval_peakjitter_p95,json=intervalPeakjitterP95" json:"interval_peakjitter_p95,omitempty"`
	PacketMisdeliveryRateP50X4    *uint32                `protobuf:"varint,74,opt,name=packet_misdelivery_rate_p50_x4,json=packetMisdeliveryRateP50X4" json:"packet_misdelivery_rate_p50_x4,omitempty"`
	PacketMisdeliveryRateP95X4    *uint32                `protobuf:"varint,75,opt,name=packet_misdelivery_rate_p95_x4,json=packetMisdeliveryRateP95X4" json:"packet_misdelivery_rate_p95_x4,omitempty"`
	NetPingP5                     *uint32                `protobuf:"varint,80,opt,name=net_ping_p5,json=netPingP5" json:"net_ping_p5,omitempty"`
	NetPingP50                    *uint32                `protobuf:"varint,81,opt,name=net_ping_p50,json=netPingP50" json:"net_ping_p50,omitempty"`
	NetPingP95                    *uint32                `protobuf:"varint,82,opt,name=net_ping_p95,json=netPingP95" json:"net_ping_p95,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *CMsgSource2NetworkFlowQuality) Reset() {
	*x = CMsgSource2NetworkFlowQuality{}
	mi := &file_s2_netmessages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource2NetworkFlowQuality) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource2NetworkFlowQuality) ProtoMessage() {}

func (x *CMsgSource2NetworkFlowQuality) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource2NetworkFlowQuality.ProtoReflect.Descriptor instead.
func (*CMsgSource2NetworkFlowQuality) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{17}
}

func (x *CMsgSource2NetworkFlowQuality) GetDuration() uint32 {
	if x != nil && x.Duration != nil {
		return *x.Duration
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetBytesTotal() uint64 {
	if x != nil && x.BytesTotal != nil {
		return *x.BytesTotal
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetBytesTotalReliable() uint64 {
	if x != nil && x.BytesTotalReliable != nil {
		return *x.BytesTotalReliable
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetBytesTotalVoice() uint64 {
	if x != nil && x.BytesTotalVoice != nil {
		return *x.BytesTotalVoice
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetBytesSecP95() uint32 {
	if x != nil && x.BytesSecP95 != nil {
		return *x.BytesSecP95
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetBytesSecP99() uint32 {
	if x != nil && x.BytesSecP99 != nil {
		return *x.BytesSecP99
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetEnginemsgsTotal() uint32 {
	if x != nil && x.EnginemsgsTotal != nil {
		return *x.EnginemsgsTotal
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetEnginemsgsSecP95() uint32 {
	if x != nil && x.EnginemsgsSecP95 != nil {
		return *x.EnginemsgsSecP95
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetEnginemsgsSecP99() uint32 {
	if x != nil && x.EnginemsgsSecP99 != nil {
		return *x.EnginemsgsSecP99
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetframesTotal() uint32 {
	if x != nil && x.NetframesTotal != nil {
		return *x.NetframesTotal
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetframesDropped() uint32 {
	if x != nil && x.NetframesDropped != nil {
		return *x.NetframesDropped
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetframesOutoforder() uint32 {
	if x != nil && x.NetframesOutoforder != nil {
		return *x.NetframesOutoforder
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetframesSizeExceedsMtu() uint32 {
	if x != nil && x.NetframesSizeExceedsMtu != nil {
		return *x.NetframesSizeExceedsMtu
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetframesSizeP95() uint32 {
	if x != nil && x.NetframesSizeP95 != nil {
		return *x.NetframesSizeP95
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetframesSizeP99() uint32 {
	if x != nil && x.NetframesSizeP99 != nil {
		return *x.NetframesSizeP99
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTicksTotal() uint32 {
	if x != nil && x.TicksTotal != nil {
		return *x.TicksTotal
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTicksGood() uint32 {
	if x != nil && x.TicksGood != nil {
		return *x.TicksGood
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTicksGoodAlmostLate() uint32 {
	if x != nil && x.TicksGoodAlmostLate != nil {
		return *x.TicksGoodAlmostLate
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTicksFixedDropped() uint32 {
	if x != nil && x.TicksFixedDropped != nil {
		return *x.TicksFixedDropped
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTicksFixedLate() uint32 {
	if x != nil && x.TicksFixedLate != nil {
		return *x.TicksFixedLate
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTicksBadDropped() uint32 {
	if x != nil && x.TicksBadDropped != nil {
		return *x.TicksBadDropped
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTicksBadLate() uint32 {
	if x != nil && x.TicksBadLate != nil {
		return *x.TicksBadLate
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTicksBadOther() uint32 {
	if x != nil && x.TicksBadOther != nil {
		return *x.TicksBadOther
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTickMissrateSamplesTotal() uint32 {
	if x != nil && x.TickMissrateSamplesTotal != nil {
		return *x.TickMissrateSamplesTotal
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTickMissrateSamplesPerfect() uint32 {
	if x != nil && x.TickMissrateSamplesPerfect != nil {
		return *x.TickMissrateSamplesPerfect
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTickMissrateSamplesPerfectnet() uint32 {
	if x != nil && x.TickMissrateSamplesPerfectnet != nil {
		return *x.TickMissrateSamplesPerfectnet
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTickMissratenetP75X10() uint32 {
	if x != nil && x.TickMissratenetP75X10 != nil {
		return *x.TickMissratenetP75X10
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTickMissratenetP95X10() uint32 {
	if x != nil && x.TickMissratenetP95X10 != nil {
		return *x.TickMissratenetP95X10
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetTickMissratenetP99X10() uint32 {
	if x != nil && x.TickMissratenetP99X10 != nil {
		return *x.TickMissratenetP99X10
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetRecvmarginP1() int32 {
	if x != nil && x.RecvmarginP1 != nil {
		return *x.RecvmarginP1
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetRecvmarginP5() int32 {
	if x != nil && x.RecvmarginP5 != nil {
		return *x.RecvmarginP5
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetRecvmarginP25() int32 {
	if x != nil && x.RecvmarginP25 != nil {
		return *x.RecvmarginP25
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetRecvmarginP50() int32 {
	if x != nil && x.RecvmarginP50 != nil {
		return *x.RecvmarginP50
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetRecvmarginP75() int32 {
	if x != nil && x.RecvmarginP75 != nil {
		return *x.RecvmarginP75
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetRecvmarginP95() int32 {
	if x != nil && x.RecvmarginP95 != nil {
		return *x.RecvmarginP95
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetframeJitterP50() uint32 {
	if x != nil && x.NetframeJitterP50 != nil {
		return *x.NetframeJitterP50
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetframeJitterP99() uint32 {
	if x != nil && x.NetframeJitterP99 != nil {
		return *x.NetframeJitterP99
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetIntervalPeakjitterP50() uint32 {
	if x != nil && x.IntervalPeakjitterP50 != nil {
		return *x.IntervalPeakjitterP50
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetIntervalPeakjitterP95() uint32 {
	if x != nil && x.IntervalPeakjitterP95 != nil {
		return *x.IntervalPeakjitterP95
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetPacketMisdeliveryRateP50X4() uint32 {
	if x != nil && x.PacketMisdeliveryRateP50X4 != nil {
		return *x.PacketMisdeliveryRateP50X4
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetPacketMisdeliveryRateP95X4() uint32 {
	if x != nil && x.PacketMisdeliveryRateP95X4 != nil {
		return *x.PacketMisdeliveryRateP95X4
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetPingP5() uint32 {
	if x != nil && x.NetPingP5 != nil {
		return *x.NetPingP5
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetPingP50() uint32 {
	if x != nil && x.NetPingP50 != nil {
		return *x.NetPingP50
	}
	return 0
}

func (x *CMsgSource2NetworkFlowQuality) GetNetPingP95() uint32 {
	if x != nil && x.NetPingP95 != nil {
		return *x.NetPingP95
	}
	return 0
}

type CMsgSource2PerfIntervalSample struct {
	state            protoimpl.MessageState               `protogen:"open.v1"`
	FrameTimeMaxMs   *float32                             `protobuf:"fixed32,1,opt,name=frame_time_max_ms,json=frameTimeMaxMs" json:"frame_time_max_ms,omitempty"`
	FrameTimeAvgMs   *float32                             `protobuf:"fixed32,2,opt,name=frame_time_avg_ms,json=frameTimeAvgMs" json:"frame_time_avg_ms,omitempty"`
	FrameTimeMinMs   *float32                             `protobuf:"fixed32,3,opt,name=frame_time_min_ms,json=frameTimeMinMs" json:"frame_time_min_ms,omitempty"`
	FrameCount       *int32                               `protobuf:"varint,4,opt,name=frame_count,json=frameCount" json:"frame_count,omitempty"`
	FrameTimeTotalMs *float32                             `protobuf:"fixed32,5,opt,name=frame_time_total_ms,json=frameTimeTotalMs" json:"frame_time_total_ms,omitempty"`
	Tags             []*CMsgSource2PerfIntervalSample_Tag `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CMsgSource2PerfIntervalSample) Reset() {
	*x = CMsgSource2PerfIntervalSample{}
	mi := &file_s2_netmessages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource2PerfIntervalSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource2PerfIntervalSample) ProtoMessage() {}

func (x *CMsgSource2PerfIntervalSample) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource2PerfIntervalSample.ProtoReflect.Descriptor instead.
func (*CMsgSource2PerfIntervalSample) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{18}
}

func (x *CMsgSource2PerfIntervalSample) GetFrameTimeMaxMs() float32 {
	if x != nil && x.FrameTimeMaxMs != nil {
		return *x.FrameTimeMaxMs
	}
	return 0
}

func (x *CMsgSource2PerfIntervalSample) GetFrameTimeAvgMs() float32 {
	if x != nil && x.FrameTimeAvgMs != nil {
		return *x.FrameTimeAvgMs
	}
	return 0
}

func (x *CMsgSource2PerfIntervalSample) GetFrameTimeMinMs() float32 {
	if x != nil && x.FrameTimeMinMs != nil {
		return *x.FrameTimeMinMs
	}
	return 0
}

func (x *CMsgSource2PerfIntervalSample) GetFrameCount() int32 {
	if x != nil && x.FrameCount != nil {
		return *x.FrameCount
	}
	return 0
}

func (x *CMsgSource2PerfIntervalSample) GetFrameTimeTotalMs() float32 {
	if x != nil && x.FrameTimeTotalMs != nil {
		return *x.FrameTimeTotalMs
	}
	return 0
}

func (x *CMsgSource2PerfIntervalSample) GetTags() []*CMsgSource2PerfIntervalSample_Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CCLCMsg_Diagnostic struct {
	state          protoimpl.MessageState           `protogen:"open.v1"`
	SystemSpecs    *CMsgSource2SystemSpecs          `protobuf:"bytes,1,opt,name=system_specs,json=systemSpecs" json:"system_specs,omitempty"`
	VprofReport    *CMsgSource2VProfLiteReport      `protobuf:"bytes,2,opt,name=vprof_report,json=vprofReport" json:"vprof_report,omitempty"`
	DownstreamFlow *CMsgSource2NetworkFlowQuality   `protobuf:"bytes,3,opt,name=downstream_flow,json=downstreamFlow" json:"downstream_flow,omitempty"`
	UpstreamFlow   *CMsgSource2NetworkFlowQuality   `protobuf:"bytes,4,opt,name=upstream_flow,json=upstreamFlow" json:"upstream_flow,omitempty"`
	PerfSamples    []*CMsgSource2PerfIntervalSample `protobuf:"bytes,5,rep,name=perf_samples,json=perfSamples" json:"perf_samples,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CCLCMsg_Diagnostic) Reset() {
	*x = CCLCMsg_Diagnostic{}
	mi := &file_s2_netmessages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_Diagnostic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_Diagnostic) ProtoMessage() {}

func (x *CCLCMsg_Diagnostic) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_Diagnostic.ProtoReflect.Descriptor instead.
func (*CCLCMsg_Diagnostic) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{19}
}

func (x *CCLCMsg_Diagnostic) GetSystemSpecs() *CMsgSource2SystemSpecs {
	if x != nil {
		return x.SystemSpecs
	}
	return nil
}

func (x *CCLCMsg_Diagnostic) GetVprofReport() *CMsgSource2VProfLiteReport {
	if x != nil {
		return x.VprofReport
	}
	return nil
}

func (x *CCLCMsg_Diagnostic) GetDownstreamFlow() *CMsgSource2NetworkFlowQuality {
	if x != nil {
		return x.DownstreamFlow
	}
	return nil
}

func (x *CCLCMsg_Diagnostic) GetUpstreamFlow() *CMsgSource2NetworkFlowQuality {
	if x != nil {
		return x.UpstreamFlow
	}
	return nil
}

func (x *CCLCMsg_Diagnostic) GetPerfSamples() []*CMsgSource2PerfIntervalSample {
	if x != nil {
		return x.PerfSamples
	}
	return nil
}

type CSource2Metrics_MatchPerfSummary_Notification struct {
	state         protoimpl.MessageState                                  `protogen:"open.v1"`
	Appid         *uint32                                                 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	GameMode      *string                                                 `protobuf:"bytes,2,opt,name=game_mode,json=gameMode" json:"game_mode,omitempty"`
	ServerBuildId *uint32                                                 `protobuf:"varint,3,opt,name=server_build_id,json=serverBuildId" json:"server_build_id,omitempty"`
	ServerPopid   *uint32                                                 `protobuf:"fixed32,4,opt,name=server_popid,json=serverPopid" json:"server_popid,omitempty"`
	ServerProfile *CMsgSource2VProfLiteReport                             `protobuf:"bytes,10,opt,name=server_profile,json=serverProfile" json:"server_profile,omitempty"`
	Clients       []*CSource2Metrics_MatchPerfSummary_Notification_Client `protobuf:"bytes,11,rep,name=clients" json:"clients,omitempty"`
	Map           *string                                                 `protobuf:"bytes,20,opt,name=map" json:"map,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSource2Metrics_MatchPerfSummary_Notification) Reset() {
	*x = CSource2Metrics_MatchPerfSummary_Notification{}
	mi := &file_s2_netmessages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSource2Metrics_MatchPerfSummary_Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSource2Metrics_MatchPerfSummary_Notification) ProtoMessage() {}

func (x *CSource2Metrics_MatchPerfSummary_Notification) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSource2Metrics_MatchPerfSummary_Notification.ProtoReflect.Descriptor instead.
func (*CSource2Metrics_MatchPerfSummary_Notification) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{20}
}

func (x *CSource2Metrics_MatchPerfSummary_Notification) GetAppid() uint32 {
	if x != nil && x.Appid != nil {
		return *x.Appid
	}
	return 0
}

func (x *CSource2Metrics_MatchPerfSummary_Notification) GetGameMode() string {
	if x != nil && x.GameMode != nil {
		return *x.GameMode
	}
	return ""
}

func (x *CSource2Metrics_MatchPerfSummary_Notification) GetServerBuildId() uint32 {
	if x != nil && x.ServerBuildId != nil {
		return *x.ServerBuildId
	}
	return 0
}

func (x *CSource2Metrics_MatchPerfSummary_Notification) GetServerPopid() uint32 {
	if x != nil && x.ServerPopid != nil {
		return *x.ServerPopid
	}
	return 0
}

func (x *CSource2Metrics_MatchPerfSummary_Notification) GetServerProfile() *CMsgSource2VProfLiteReport {
	if x != nil {
		return x.ServerProfile
	}
	return nil
}

func (x *CSource2Metrics_MatchPerfSummary_Notification) GetClients() []*CSource2Metrics_MatchPerfSummary_Notification_Client {
	if x != nil {
		return x.Clients
	}
	return nil
}

func (x *CSource2Metrics_MatchPerfSummary_Notification) GetMap() string {
	if x != nil && x.Map != nil {
		return *x.Map
	}
	return ""
}

type CSVCMsg_ServerInfo struct {
	state               protoimpl.MessageState            `protogen:"open.v1"`
	Protocol            *int32                            `protobuf:"varint,1,opt,name=protocol" json:"protocol,omitempty"`
	ServerCount         *int32                            `protobuf:"varint,2,opt,name=server_count,json=serverCount" json:"server_count,omitempty"`
	IsDedicated         *bool                             `protobuf:"varint,3,opt,name=is_dedicated,json=isDedicated" json:"is_dedicated,omitempty"`
	IsHltv              *bool                             `protobuf:"varint,4,opt,name=is_hltv,json=isHltv" json:"is_hltv,omitempty"`
	COs                 *int32                            `protobuf:"varint,6,opt,name=c_os,json=cOs" json:"c_os,omitempty"`
	MaxClients          *int32                            `protobuf:"varint,10,opt,name=max_clients,json=maxClients" json:"max_clients,omitempty"`
	MaxClasses          *int32                            `protobuf:"varint,11,opt,name=max_classes,json=maxClasses" json:"max_classes,omitempty"`
	PlayerSlot          *int32                            `protobuf:"varint,12,opt,name=player_slot,json=playerSlot,def=-1" json:"player_slot,omitempty"`
	TickInterval        *float32                          `protobuf:"fixed32,13,opt,name=tick_interval,json=tickInterval" json:"tick_interval,omitempty"`
	GameDir             *string                           `protobuf:"bytes,14,opt,name=game_dir,json=gameDir" json:"game_dir,omitempty"`
	MapName             *string                           `protobuf:"bytes,15,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	SkyName             *string                           `protobuf:"bytes,16,opt,name=sky_name,json=skyName" json:"sky_name,omitempty"`
	HostName            *string                           `protobuf:"bytes,17,opt,name=host_name,json=hostName" json:"host_name,omitempty"`
	AddonName           *string                           `protobuf:"bytes,18,opt,name=addon_name,json=addonName" json:"addon_name,omitempty"`
	GameSessionConfig   *CSVCMsg_GameSessionConfiguration `protobuf:"bytes,19,opt,name=game_session_config,json=gameSessionConfig" json:"game_session_config,omitempty"`
	GameSessionManifest []byte                            `protobuf:"bytes,20,opt,name=game_session_manifest,json=gameSessionManifest" json:"game_session_manifest,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for CSVCMsg_ServerInfo fields.
const (
	Default_CSVCMsg_ServerInfo_PlayerSlot = int32(-1)
)

func (x *CSVCMsg_ServerInfo) Reset() {
	*x = CSVCMsg_ServerInfo{}
	mi := &file_s2_netmessages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_ServerInfo) ProtoMessage() {}

func (x *CSVCMsg_ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_ServerInfo.ProtoReflect.Descriptor instead.
func (*CSVCMsg_ServerInfo) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{21}
}

func (x *CSVCMsg_ServerInfo) GetProtocol() int32 {
	if x != nil && x.Protocol != nil {
		return *x.Protocol
	}
	return 0
}

func (x *CSVCMsg_ServerInfo) GetServerCount() int32 {
	if x != nil && x.ServerCount != nil {
		return *x.ServerCount
	}
	return 0
}

func (x *CSVCMsg_ServerInfo) GetIsDedicated() bool {
	if x != nil && x.IsDedicated != nil {
		return *x.IsDedicated
	}
	return false
}

func (x *CSVCMsg_ServerInfo) GetIsHltv() bool {
	if x != nil && x.IsHltv != nil {
		return *x.IsHltv
	}
	return false
}

func (x *CSVCMsg_ServerInfo) GetCOs() int32 {
	if x != nil && x.COs != nil {
		return *x.COs
	}
	return 0
}

func (x *CSVCMsg_ServerInfo) GetMaxClients() int32 {
	if x != nil && x.MaxClients != nil {
		return *x.MaxClients
	}
	return 0
}

func (x *CSVCMsg_ServerInfo) GetMaxClasses() int32 {
	if x != nil && x.MaxClasses != nil {
		return *x.MaxClasses
	}
	return 0
}

func (x *CSVCMsg_ServerInfo) GetPlayerSlot() int32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return Default_CSVCMsg_ServerInfo_PlayerSlot
}

func (x *CSVCMsg_ServerInfo) GetTickInterval() float32 {
	if x != nil && x.TickInterval != nil {
		return *x.TickInterval
	}
	return 0
}

func (x *CSVCMsg_ServerInfo) GetGameDir() string {
	if x != nil && x.GameDir != nil {
		return *x.GameDir
	}
	return ""
}

func (x *CSVCMsg_ServerInfo) GetMapName() string {
	if x != nil && x.MapName != nil {
		return *x.MapName
	}
	return ""
}

func (x *CSVCMsg_ServerInfo) GetSkyName() string {
	if x != nil && x.SkyName != nil {
		return *x.SkyName
	}
	return ""
}

func (x *CSVCMsg_ServerInfo) GetHostName() string {
	if x != nil && x.HostName != nil {
		return *x.HostName
	}
	return ""
}

func (x *CSVCMsg_ServerInfo) GetAddonName() string {
	if x != nil && x.AddonName != nil {
		return *x.AddonName
	}
	return ""
}

func (x *CSVCMsg_ServerInfo) GetGameSessionConfig() *CSVCMsg_GameSessionConfiguration {
	if x != nil {
		return x.GameSessionConfig
	}
	return nil
}

func (x *CSVCMsg_ServerInfo) GetGameSessionManifest() []byte {
	if x != nil {
		return x.GameSessionManifest
	}
	return nil
}

type CSVCMsg_ClassInfo struct {
	state          protoimpl.MessageState     `protogen:"open.v1"`
	CreateOnClient *bool                      `protobuf:"varint,1,opt,name=create_on_client,json=createOnClient" json:"create_on_client,omitempty"`
	Classes        []*CSVCMsg_ClassInfoClassT `protobuf:"bytes,2,rep,name=classes" json:"classes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CSVCMsg_ClassInfo) Reset() {
	*x = CSVCMsg_ClassInfo{}
	mi := &file_s2_netmessages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_ClassInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_ClassInfo) ProtoMessage() {}

func (x *CSVCMsg_ClassInfo) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_ClassInfo.ProtoReflect.Descriptor instead.
func (*CSVCMsg_ClassInfo) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{22}
}

func (x *CSVCMsg_ClassInfo) GetCreateOnClient() bool {
	if x != nil && x.CreateOnClient != nil {
		return *x.CreateOnClient
	}
	return false
}

func (x *CSVCMsg_ClassInfo) GetClasses() []*CSVCMsg_ClassInfoClassT {
	if x != nil {
		return x.Classes
	}
	return nil
}

type CSVCMsg_SetPause struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paused        *bool                  `protobuf:"varint,1,opt,name=paused" json:"paused,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_SetPause) Reset() {
	*x = CSVCMsg_SetPause{}
	mi := &file_s2_netmessages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_SetPause) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_SetPause) ProtoMessage() {}

func (x *CSVCMsg_SetPause) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_SetPause.ProtoReflect.Descriptor instead.
func (*CSVCMsg_SetPause) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{23}
}

func (x *CSVCMsg_SetPause) GetPaused() bool {
	if x != nil && x.Paused != nil {
		return *x.Paused
	}
	return false
}

type CSVCMsg_VoiceInit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quality       *int32                 `protobuf:"varint,1,opt,name=quality" json:"quality,omitempty"`
	Codec         *string                `protobuf:"bytes,2,opt,name=codec" json:"codec,omitempty"`
	Version       *int32                 `protobuf:"varint,3,opt,name=version,def=0" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CSVCMsg_VoiceInit fields.
const (
	Default_CSVCMsg_VoiceInit_Version = int32(0)
)

func (x *CSVCMsg_VoiceInit) Reset() {
	*x = CSVCMsg_VoiceInit{}
	mi := &file_s2_netmessages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_VoiceInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_VoiceInit) ProtoMessage() {}

func (x *CSVCMsg_VoiceInit) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_VoiceInit.ProtoReflect.Descriptor instead.
func (*CSVCMsg_VoiceInit) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{24}
}

func (x *CSVCMsg_VoiceInit) GetQuality() int32 {
	if x != nil && x.Quality != nil {
		return *x.Quality
	}
	return 0
}

func (x *CSVCMsg_VoiceInit) GetCodec() string {
	if x != nil && x.Codec != nil {
		return *x.Codec
	}
	return ""
}

func (x *CSVCMsg_VoiceInit) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return Default_CSVCMsg_VoiceInit_Version
}

type CSVCMsg_Print struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          *string                `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_Print) Reset() {
	*x = CSVCMsg_Print{}
	mi := &file_s2_netmessages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_Print) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_Print) ProtoMessage() {}

func (x *CSVCMsg_Print) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_Print.ProtoReflect.Descriptor instead.
func (*CSVCMsg_Print) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{25}
}

func (x *CSVCMsg_Print) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

type CSVCMsg_Sounds struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ReliableSound *bool                       `protobuf:"varint,1,opt,name=reliable_sound,json=reliableSound" json:"reliable_sound,omitempty"`
	Sounds        []*CSVCMsg_SoundsSounddataT `protobuf:"bytes,2,rep,name=sounds" json:"sounds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_Sounds) Reset() {
	*x = CSVCMsg_Sounds{}
	mi := &file_s2_netmessages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_Sounds) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_Sounds) ProtoMessage() {}

func (x *CSVCMsg_Sounds) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_Sounds.ProtoReflect.Descriptor instead.
func (*CSVCMsg_Sounds) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{26}
}

func (x *CSVCMsg_Sounds) GetReliableSound() bool {
	if x != nil && x.ReliableSound != nil {
		return *x.ReliableSound
	}
	return false
}

func (x *CSVCMsg_Sounds) GetSounds() []*CSVCMsg_SoundsSounddataT {
	if x != nil {
		return x.Sounds
	}
	return nil
}

type CSVCMsg_Prefetch struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SoundIndex    *int32                 `protobuf:"varint,1,opt,name=sound_index,json=soundIndex" json:"sound_index,omitempty"`
	ResourceType  *PrefetchType          `protobuf:"varint,2,opt,name=resource_type,json=resourceType,enum=com.github.markus_wa.demoinfocs_golang.s2.PrefetchType,def=0" json:"resource_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CSVCMsg_Prefetch fields.
const (
	Default_CSVCMsg_Prefetch_ResourceType = PrefetchType_PFT_SOUND
)

func (x *CSVCMsg_Prefetch) Reset() {
	*x = CSVCMsg_Prefetch{}
	mi := &file_s2_netmessages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_Prefetch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_Prefetch) ProtoMessage() {}

func (x *CSVCMsg_Prefetch) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_Prefetch.ProtoReflect.Descriptor instead.
func (*CSVCMsg_Prefetch) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{27}
}

func (x *CSVCMsg_Prefetch) GetSoundIndex() int32 {
	if x != nil && x.SoundIndex != nil {
		return *x.SoundIndex
	}
	return 0
}

func (x *CSVCMsg_Prefetch) GetResourceType() PrefetchType {
	if x != nil && x.ResourceType != nil {
		return *x.ResourceType
	}
	return Default_CSVCMsg_Prefetch_ResourceType
}

type CSVCMsg_SetView struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityIndex   *int32                 `protobuf:"varint,1,opt,name=entity_index,json=entityIndex,def=-1" json:"entity_index,omitempty"`
	Slot          *int32                 `protobuf:"varint,2,opt,name=slot,def=-1" json:"slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CSVCMsg_SetView fields.
const (
	Default_CSVCMsg_SetView_EntityIndex = int32(-1)
	Default_CSVCMsg_SetView_Slot        = int32(-1)
)

func (x *CSVCMsg_SetView) Reset() {
	*x = CSVCMsg_SetView{}
	mi := &file_s2_netmessages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_SetView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_SetView) ProtoMessage() {}

func (x *CSVCMsg_SetView) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_SetView.ProtoReflect.Descriptor instead.
func (*CSVCMsg_SetView) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{28}
}

func (x *CSVCMsg_SetView) GetEntityIndex() int32 {
	if x != nil && x.EntityIndex != nil {
		return *x.EntityIndex
	}
	return Default_CSVCMsg_SetView_EntityIndex
}

func (x *CSVCMsg_SetView) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return Default_CSVCMsg_SetView_Slot
}

type CSVCMsg_FixAngle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Relative      *bool                  `protobuf:"varint,1,opt,name=relative" json:"relative,omitempty"`
	Angle         *CMsgQAngle            `protobuf:"bytes,2,opt,name=angle" json:"angle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_FixAngle) Reset() {
	*x = CSVCMsg_FixAngle{}
	mi := &file_s2_netmessages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_FixAngle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_FixAngle) ProtoMessage() {}

func (x *CSVCMsg_FixAngle) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_FixAngle.ProtoReflect.Descriptor instead.
func (*CSVCMsg_FixAngle) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{29}
}

func (x *CSVCMsg_FixAngle) GetRelative() bool {
	if x != nil && x.Relative != nil {
		return *x.Relative
	}
	return false
}

func (x *CSVCMsg_FixAngle) GetAngle() *CMsgQAngle {
	if x != nil {
		return x.Angle
	}
	return nil
}

type CSVCMsg_CrosshairAngle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Angle         *CMsgQAngle            `protobuf:"bytes,1,opt,name=angle" json:"angle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_CrosshairAngle) Reset() {
	*x = CSVCMsg_CrosshairAngle{}
	mi := &file_s2_netmessages_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_CrosshairAngle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_CrosshairAngle) ProtoMessage() {}

func (x *CSVCMsg_CrosshairAngle) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_CrosshairAngle.ProtoReflect.Descriptor instead.
func (*CSVCMsg_CrosshairAngle) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{30}
}

func (x *CSVCMsg_CrosshairAngle) GetAngle() *CMsgQAngle {
	if x != nil {
		return x.Angle
	}
	return nil
}

type CSVCMsg_BSPDecal struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Pos               *CMsgVector            `protobuf:"bytes,1,opt,name=pos" json:"pos,omitempty"`
	DecalTextureIndex *int32                 `protobuf:"varint,2,opt,name=decal_texture_index,json=decalTextureIndex" json:"decal_texture_index,omitempty"`
	EntityIndex       *int32                 `protobuf:"varint,3,opt,name=entity_index,json=entityIndex,def=-1" json:"entity_index,omitempty"`
	ModelIndex        *int32                 `protobuf:"varint,4,opt,name=model_index,json=modelIndex" json:"model_index,omitempty"`
	LowPriority       *bool                  `protobuf:"varint,5,opt,name=low_priority,json=lowPriority" json:"low_priority,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for CSVCMsg_BSPDecal fields.
const (
	Default_CSVCMsg_BSPDecal_EntityIndex = int32(-1)
)

func (x *CSVCMsg_BSPDecal) Reset() {
	*x = CSVCMsg_BSPDecal{}
	mi := &file_s2_netmessages_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_BSPDecal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_BSPDecal) ProtoMessage() {}

func (x *CSVCMsg_BSPDecal) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_BSPDecal.ProtoReflect.Descriptor instead.
func (*CSVCMsg_BSPDecal) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{31}
}

func (x *CSVCMsg_BSPDecal) GetPos() *CMsgVector {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *CSVCMsg_BSPDecal) GetDecalTextureIndex() int32 {
	if x != nil && x.DecalTextureIndex != nil {
		return *x.DecalTextureIndex
	}
	return 0
}

func (x *CSVCMsg_BSPDecal) GetEntityIndex() int32 {
	if x != nil && x.EntityIndex != nil {
		return *x.EntityIndex
	}
	return Default_CSVCMsg_BSPDecal_EntityIndex
}

func (x *CSVCMsg_BSPDecal) GetModelIndex() int32 {
	if x != nil && x.ModelIndex != nil {
		return *x.ModelIndex
	}
	return 0
}

func (x *CSVCMsg_BSPDecal) GetLowPriority() bool {
	if x != nil && x.LowPriority != nil {
		return *x.LowPriority
	}
	return false
}

type CSVCMsg_SplitScreen struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Type          *ESplitScreenMessageType `protobuf:"varint,1,opt,name=type,enum=com.github.markus_wa.demoinfocs_golang.s2.ESplitScreenMessageType,def=0" json:"type,omitempty"`
	Slot          *int32                   `protobuf:"varint,2,opt,name=slot" json:"slot,omitempty"`
	PlayerIndex   *int32                   `protobuf:"varint,3,opt,name=player_index,json=playerIndex,def=-1" json:"player_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CSVCMsg_SplitScreen fields.
const (
	Default_CSVCMsg_SplitScreen_Type        = ESplitScreenMessageType_MSG_SPLITSCREEN_ADDUSER
	Default_CSVCMsg_SplitScreen_PlayerIndex = int32(-1)
)

func (x *CSVCMsg_SplitScreen) Reset() {
	*x = CSVCMsg_SplitScreen{}
	mi := &file_s2_netmessages_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_SplitScreen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_SplitScreen) ProtoMessage() {}

func (x *CSVCMsg_SplitScreen) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_SplitScreen.ProtoReflect.Descriptor instead.
func (*CSVCMsg_SplitScreen) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{32}
}

func (x *CSVCMsg_SplitScreen) GetType() ESplitScreenMessageType {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_CSVCMsg_SplitScreen_Type
}

func (x *CSVCMsg_SplitScreen) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

func (x *CSVCMsg_SplitScreen) GetPlayerIndex() int32 {
	if x != nil && x.PlayerIndex != nil {
		return *x.PlayerIndex
	}
	return Default_CSVCMsg_SplitScreen_PlayerIndex
}

type CSVCMsg_GetCvarValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cookie        *int32                 `protobuf:"varint,1,opt,name=cookie" json:"cookie,omitempty"`
	CvarName      *string                `protobuf:"bytes,2,opt,name=cvar_name,json=cvarName" json:"cvar_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_GetCvarValue) Reset() {
	*x = CSVCMsg_GetCvarValue{}
	mi := &file_s2_netmessages_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_GetCvarValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_GetCvarValue) ProtoMessage() {}

func (x *CSVCMsg_GetCvarValue) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_GetCvarValue.ProtoReflect.Descriptor instead.
func (*CSVCMsg_GetCvarValue) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{33}
}

func (x *CSVCMsg_GetCvarValue) GetCookie() int32 {
	if x != nil && x.Cookie != nil {
		return *x.Cookie
	}
	return 0
}

func (x *CSVCMsg_GetCvarValue) GetCvarName() string {
	if x != nil && x.CvarName != nil {
		return *x.CvarName
	}
	return ""
}

type CSVCMsg_Menu struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DialogType    *int32                 `protobuf:"varint,1,opt,name=dialog_type,json=dialogType" json:"dialog_type,omitempty"`
	MenuKeyValues []byte                 `protobuf:"bytes,2,opt,name=menu_key_values,json=menuKeyValues" json:"menu_key_values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_Menu) Reset() {
	*x = CSVCMsg_Menu{}
	mi := &file_s2_netmessages_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_Menu) ProtoMessage() {}

func (x *CSVCMsg_Menu) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_Menu.ProtoReflect.Descriptor instead.
func (*CSVCMsg_Menu) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{34}
}

func (x *CSVCMsg_Menu) GetDialogType() int32 {
	if x != nil && x.DialogType != nil {
		return *x.DialogType
	}
	return 0
}

func (x *CSVCMsg_Menu) GetMenuKeyValues() []byte {
	if x != nil {
		return x.MenuKeyValues
	}
	return nil
}

type CSVCMsg_UserMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MsgType       *int32                 `protobuf:"varint,1,opt,name=msg_type,json=msgType" json:"msg_type,omitempty"`
	MsgData       []byte                 `protobuf:"bytes,2,opt,name=msg_data,json=msgData" json:"msg_data,omitempty"`
	Passthrough   *int32                 `protobuf:"varint,3,opt,name=passthrough" json:"passthrough,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_UserMessage) Reset() {
	*x = CSVCMsg_UserMessage{}
	mi := &file_s2_netmessages_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_UserMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_UserMessage) ProtoMessage() {}

func (x *CSVCMsg_UserMessage) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_UserMessage.ProtoReflect.Descriptor instead.
func (*CSVCMsg_UserMessage) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{35}
}

func (x *CSVCMsg_UserMessage) GetMsgType() int32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *CSVCMsg_UserMessage) GetMsgData() []byte {
	if x != nil {
		return x.MsgData
	}
	return nil
}

func (x *CSVCMsg_UserMessage) GetPassthrough() int32 {
	if x != nil && x.Passthrough != nil {
		return *x.Passthrough
	}
	return 0
}

type CSVCMsg_SendTable struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	IsEnd         *bool                         `protobuf:"varint,1,opt,name=is_end,json=isEnd" json:"is_end,omitempty"`
	NetTableName  *string                       `protobuf:"bytes,2,opt,name=net_table_name,json=netTableName" json:"net_table_name,omitempty"`
	NeedsDecoder  *bool                         `protobuf:"varint,3,opt,name=needs_decoder,json=needsDecoder" json:"needs_decoder,omitempty"`
	Props         []*CSVCMsg_SendTableSendpropT `protobuf:"bytes,4,rep,name=props" json:"props,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_SendTable) Reset() {
	*x = CSVCMsg_SendTable{}
	mi := &file_s2_netmessages_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_SendTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_SendTable) ProtoMessage() {}

func (x *CSVCMsg_SendTable) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_SendTable.ProtoReflect.Descriptor instead.
func (*CSVCMsg_SendTable) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{36}
}

func (x *CSVCMsg_SendTable) GetIsEnd() bool {
	if x != nil && x.IsEnd != nil {
		return *x.IsEnd
	}
	return false
}

func (x *CSVCMsg_SendTable) GetNetTableName() string {
	if x != nil && x.NetTableName != nil {
		return *x.NetTableName
	}
	return ""
}

func (x *CSVCMsg_SendTable) GetNeedsDecoder() bool {
	if x != nil && x.NeedsDecoder != nil {
		return *x.NeedsDecoder
	}
	return false
}

func (x *CSVCMsg_SendTable) GetProps() []*CSVCMsg_SendTableSendpropT {
	if x != nil {
		return x.Props
	}
	return nil
}

type CSVCMsg_GameEventList struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Descriptors   []*CSVCMsg_GameEventListDescriptorT `protobuf:"bytes,1,rep,name=descriptors" json:"descriptors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_GameEventList) Reset() {
	*x = CSVCMsg_GameEventList{}
	mi := &file_s2_netmessages_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_GameEventList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_GameEventList) ProtoMessage() {}

func (x *CSVCMsg_GameEventList) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_GameEventList.ProtoReflect.Descriptor instead.
func (*CSVCMsg_GameEventList) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{37}
}

func (x *CSVCMsg_GameEventList) GetDescriptors() []*CSVCMsg_GameEventListDescriptorT {
	if x != nil {
		return x.Descriptors
	}
	return nil
}

type CSVCMsg_PacketEntities struct {
	state                         protoimpl.MessageState                         `protogen:"open.v1"`
	MaxEntries                    *int32                                         `protobuf:"varint,1,opt,name=max_entries,json=maxEntries" json:"max_entries,omitempty"`
	UpdatedEntries                *int32                                         `protobuf:"varint,2,opt,name=updated_entries,json=updatedEntries" json:"updated_entries,omitempty"`
	LegacyIsDelta                 *bool                                          `protobuf:"varint,3,opt,name=legacy_is_delta,json=legacyIsDelta" json:"legacy_is_delta,omitempty"`
	UpdateBaseline                *bool                                          `protobuf:"varint,4,opt,name=update_baseline,json=updateBaseline" json:"update_baseline,omitempty"`
	Baseline                      *int32                                         `protobuf:"varint,5,opt,name=baseline" json:"baseline,omitempty"`
	DeltaFrom                     *int32                                         `protobuf:"varint,6,opt,name=delta_from,json=deltaFrom" json:"delta_from,omitempty"`
	EntityData                    []byte                                         `protobuf:"bytes,7,opt,name=entity_data,json=entityData" json:"entity_data,omitempty"`
	PendingFullFrame              *bool                                          `protobuf:"varint,8,opt,name=pending_full_frame,json=pendingFullFrame" json:"pending_full_frame,omitempty"`
	ActiveSpawngroupHandle        *uint32                                        `protobuf:"varint,9,opt,name=active_spawngroup_handle,json=activeSpawngroupHandle" json:"active_spawngroup_handle,omitempty"`
	MaxSpawngroupCreationsequence *uint32                                        `protobuf:"varint,10,opt,name=max_spawngroup_creationsequence,json=maxSpawngroupCreationsequence" json:"max_spawngroup_creationsequence,omitempty"`
	LastCmdNumberExecuted         *uint32                                        `protobuf:"varint,11,opt,name=last_cmd_number_executed,json=lastCmdNumberExecuted" json:"last_cmd_number_executed,omitempty"`
	LastCmdNumberRecvDelta        *int32                                         `protobuf:"zigzag32,17,opt,name=last_cmd_number_recv_delta,json=lastCmdNumberRecvDelta" json:"last_cmd_number_recv_delta,omitempty"`
	ServerTick                    *uint32                                        `protobuf:"varint,12,opt,name=server_tick,json=serverTick" json:"server_tick,omitempty"`
	SerializedEntities            []byte                                         `protobuf:"bytes,13,opt,name=serialized_entities,json=serializedEntities" json:"serialized_entities,omitempty"`
	AlternateBaselines            []*CSVCMsg_PacketEntitiesAlternateBaselineT    `protobuf:"bytes,15,rep,name=alternate_baselines,json=alternateBaselines" json:"alternate_baselines,omitempty"`
	HasPvsVisBitsDeprecated       *uint32                                        `protobuf:"varint,16,opt,name=has_pvs_vis_bits_deprecated,json=hasPvsVisBitsDeprecated" json:"has_pvs_vis_bits_deprecated,omitempty"`
	CmdRecvStatus                 []int32                                        `protobuf:"zigzag32,22,rep,packed,name=cmd_recv_status,json=cmdRecvStatus" json:"cmd_recv_status,omitempty"`
	NonTransmittedEntities        *CSVCMsg_PacketEntitiesNonTransmittedEntitiesT `protobuf:"bytes,19,opt,name=non_transmitted_entities,json=nonTransmittedEntities" json:"non_transmitted_entities,omitempty"`
	CqStarvedCommandTicks         *uint32                                        `protobuf:"varint,20,opt,name=cq_starved_command_ticks,json=cqStarvedCommandTicks" json:"cq_starved_command_ticks,omitempty"`
	CqDiscardedCommandTicks       *uint32                                        `protobuf:"varint,21,opt,name=cq_discarded_command_ticks,json=cqDiscardedCommandTicks" json:"cq_discarded_command_ticks,omitempty"`
	OutofpvsEntityUpdates         *CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT  `protobuf:"bytes,23,opt,name=outofpvs_entity_updates,json=outofpvsEntityUpdates" json:"outofpvs_entity_updates,omitempty"`
	DevPadding                    []byte                                         `protobuf:"bytes,999,opt,name=dev_padding,json=devPadding" json:"dev_padding,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *CSVCMsg_PacketEntities) Reset() {
	*x = CSVCMsg_PacketEntities{}
	mi := &file_s2_netmessages_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_PacketEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_PacketEntities) ProtoMessage() {}

func (x *CSVCMsg_PacketEntities) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_PacketEntities.ProtoReflect.Descriptor instead.
func (*CSVCMsg_PacketEntities) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{38}
}

func (x *CSVCMsg_PacketEntities) GetMaxEntries() int32 {
	if x != nil && x.MaxEntries != nil {
		return *x.MaxEntries
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetUpdatedEntries() int32 {
	if x != nil && x.UpdatedEntries != nil {
		return *x.UpdatedEntries
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetLegacyIsDelta() bool {
	if x != nil && x.LegacyIsDelta != nil {
		return *x.LegacyIsDelta
	}
	return false
}

func (x *CSVCMsg_PacketEntities) GetUpdateBaseline() bool {
	if x != nil && x.UpdateBaseline != nil {
		return *x.UpdateBaseline
	}
	return false
}

func (x *CSVCMsg_PacketEntities) GetBaseline() int32 {
	if x != nil && x.Baseline != nil {
		return *x.Baseline
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetDeltaFrom() int32 {
	if x != nil && x.DeltaFrom != nil {
		return *x.DeltaFrom
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetEntityData() []byte {
	if x != nil {
		return x.EntityData
	}
	return nil
}

func (x *CSVCMsg_PacketEntities) GetPendingFullFrame() bool {
	if x != nil && x.PendingFullFrame != nil {
		return *x.PendingFullFrame
	}
	return false
}

func (x *CSVCMsg_PacketEntities) GetActiveSpawngroupHandle() uint32 {
	if x != nil && x.ActiveSpawngroupHandle != nil {
		return *x.ActiveSpawngroupHandle
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetMaxSpawngroupCreationsequence() uint32 {
	if x != nil && x.MaxSpawngroupCreationsequence != nil {
		return *x.MaxSpawngroupCreationsequence
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetLastCmdNumberExecuted() uint32 {
	if x != nil && x.LastCmdNumberExecuted != nil {
		return *x.LastCmdNumberExecuted
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetLastCmdNumberRecvDelta() int32 {
	if x != nil && x.LastCmdNumberRecvDelta != nil {
		return *x.LastCmdNumberRecvDelta
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetServerTick() uint32 {
	if x != nil && x.ServerTick != nil {
		return *x.ServerTick
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetSerializedEntities() []byte {
	if x != nil {
		return x.SerializedEntities
	}
	return nil
}

func (x *CSVCMsg_PacketEntities) GetAlternateBaselines() []*CSVCMsg_PacketEntitiesAlternateBaselineT {
	if x != nil {
		return x.AlternateBaselines
	}
	return nil
}

func (x *CSVCMsg_PacketEntities) GetHasPvsVisBitsDeprecated() uint32 {
	if x != nil && x.HasPvsVisBitsDeprecated != nil {
		return *x.HasPvsVisBitsDeprecated
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetCmdRecvStatus() []int32 {
	if x != nil {
		return x.CmdRecvStatus
	}
	return nil
}

func (x *CSVCMsg_PacketEntities) GetNonTransmittedEntities() *CSVCMsg_PacketEntitiesNonTransmittedEntitiesT {
	if x != nil {
		return x.NonTransmittedEntities
	}
	return nil
}

func (x *CSVCMsg_PacketEntities) GetCqStarvedCommandTicks() uint32 {
	if x != nil && x.CqStarvedCommandTicks != nil {
		return *x.CqStarvedCommandTicks
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetCqDiscardedCommandTicks() uint32 {
	if x != nil && x.CqDiscardedCommandTicks != nil {
		return *x.CqDiscardedCommandTicks
	}
	return 0
}

func (x *CSVCMsg_PacketEntities) GetOutofpvsEntityUpdates() *CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT {
	if x != nil {
		return x.OutofpvsEntityUpdates
	}
	return nil
}

func (x *CSVCMsg_PacketEntities) GetDevPadding() []byte {
	if x != nil {
		return x.DevPadding
	}
	return nil
}

type CSVCMsg_TempEntities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reliable      *bool                  `protobuf:"varint,1,opt,name=reliable" json:"reliable,omitempty"`
	NumEntries    *int32                 `protobuf:"varint,2,opt,name=num_entries,json=numEntries" json:"num_entries,omitempty"`
	EntityData    []byte                 `protobuf:"bytes,3,opt,name=entity_data,json=entityData" json:"entity_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_TempEntities) Reset() {
	*x = CSVCMsg_TempEntities{}
	mi := &file_s2_netmessages_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_TempEntities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_TempEntities) ProtoMessage() {}

func (x *CSVCMsg_TempEntities) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_TempEntities.ProtoReflect.Descriptor instead.
func (*CSVCMsg_TempEntities) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{39}
}

func (x *CSVCMsg_TempEntities) GetReliable() bool {
	if x != nil && x.Reliable != nil {
		return *x.Reliable
	}
	return false
}

func (x *CSVCMsg_TempEntities) GetNumEntries() int32 {
	if x != nil && x.NumEntries != nil {
		return *x.NumEntries
	}
	return 0
}

func (x *CSVCMsg_TempEntities) GetEntityData() []byte {
	if x != nil {
		return x.EntityData
	}
	return nil
}

type CSVCMsg_CreateStringTable struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Name                 *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	NumEntries           *int32                 `protobuf:"varint,2,opt,name=num_entries,json=numEntries" json:"num_entries,omitempty"`
	UserDataFixedSize    *bool                  `protobuf:"varint,3,opt,name=user_data_fixed_size,json=userDataFixedSize" json:"user_data_fixed_size,omitempty"`
	UserDataSize         *int32                 `protobuf:"varint,4,opt,name=user_data_size,json=userDataSize" json:"user_data_size,omitempty"`
	UserDataSizeBits     *int32                 `protobuf:"varint,5,opt,name=user_data_size_bits,json=userDataSizeBits" json:"user_data_size_bits,omitempty"`
	Flags                *int32                 `protobuf:"varint,6,opt,name=flags" json:"flags,omitempty"`
	StringData           []byte                 `protobuf:"bytes,7,opt,name=string_data,json=stringData" json:"string_data,omitempty"`
	UncompressedSize     *int32                 `protobuf:"varint,8,opt,name=uncompressed_size,json=uncompressedSize" json:"uncompressed_size,omitempty"`
	DataCompressed       *bool                  `protobuf:"varint,9,opt,name=data_compressed,json=dataCompressed" json:"data_compressed,omitempty"`
	UsingVarintBitcounts *bool                  `protobuf:"varint,10,opt,name=using_varint_bitcounts,json=usingVarintBitcounts" json:"using_varint_bitcounts,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CSVCMsg_CreateStringTable) Reset() {
	*x = CSVCMsg_CreateStringTable{}
	mi := &file_s2_netmessages_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_CreateStringTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_CreateStringTable) ProtoMessage() {}

func (x *CSVCMsg_CreateStringTable) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_CreateStringTable.ProtoReflect.Descriptor instead.
func (*CSVCMsg_CreateStringTable) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{40}
}

func (x *CSVCMsg_CreateStringTable) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CSVCMsg_CreateStringTable) GetNumEntries() int32 {
	if x != nil && x.NumEntries != nil {
		return *x.NumEntries
	}
	return 0
}

func (x *CSVCMsg_CreateStringTable) GetUserDataFixedSize() bool {
	if x != nil && x.UserDataFixedSize != nil {
		return *x.UserDataFixedSize
	}
	return false
}

func (x *CSVCMsg_CreateStringTable) GetUserDataSize() int32 {
	if x != nil && x.UserDataSize != nil {
		return *x.UserDataSize
	}
	return 0
}

func (x *CSVCMsg_CreateStringTable) GetUserDataSizeBits() int32 {
	if x != nil && x.UserDataSizeBits != nil {
		return *x.UserDataSizeBits
	}
	return 0
}

func (x *CSVCMsg_CreateStringTable) GetFlags() int32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CSVCMsg_CreateStringTable) GetStringData() []byte {
	if x != nil {
		return x.StringData
	}
	return nil
}

func (x *CSVCMsg_CreateStringTable) GetUncompressedSize() int32 {
	if x != nil && x.UncompressedSize != nil {
		return *x.UncompressedSize
	}
	return 0
}

func (x *CSVCMsg_CreateStringTable) GetDataCompressed() bool {
	if x != nil && x.DataCompressed != nil {
		return *x.DataCompressed
	}
	return false
}

func (x *CSVCMsg_CreateStringTable) GetUsingVarintBitcounts() bool {
	if x != nil && x.UsingVarintBitcounts != nil {
		return *x.UsingVarintBitcounts
	}
	return false
}

type CSVCMsg_UpdateStringTable struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TableId           *int32                 `protobuf:"varint,1,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	NumChangedEntries *int32                 `protobuf:"varint,2,opt,name=num_changed_entries,json=numChangedEntries" json:"num_changed_entries,omitempty"`
	StringData        []byte                 `protobuf:"bytes,3,opt,name=string_data,json=stringData" json:"string_data,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CSVCMsg_UpdateStringTable) Reset() {
	*x = CSVCMsg_UpdateStringTable{}
	mi := &file_s2_netmessages_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_UpdateStringTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_UpdateStringTable) ProtoMessage() {}

func (x *CSVCMsg_UpdateStringTable) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_UpdateStringTable.ProtoReflect.Descriptor instead.
func (*CSVCMsg_UpdateStringTable) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{41}
}

func (x *CSVCMsg_UpdateStringTable) GetTableId() int32 {
	if x != nil && x.TableId != nil {
		return *x.TableId
	}
	return 0
}

func (x *CSVCMsg_UpdateStringTable) GetNumChangedEntries() int32 {
	if x != nil && x.NumChangedEntries != nil {
		return *x.NumChangedEntries
	}
	return 0
}

func (x *CSVCMsg_UpdateStringTable) GetStringData() []byte {
	if x != nil {
		return x.StringData
	}
	return nil
}

type CSVCMsg_VoiceData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Audio         *CMsgVoiceAudio        `protobuf:"bytes,1,opt,name=audio" json:"audio,omitempty"`
	Client        *int32                 `protobuf:"varint,2,opt,name=client,def=-1" json:"client,omitempty"`
	Proximity     *bool                  `protobuf:"varint,3,opt,name=proximity" json:"proximity,omitempty"`
	Xuid          *uint64                `protobuf:"fixed64,4,opt,name=xuid" json:"xuid,omitempty"`
	AudibleMask   *int32                 `protobuf:"varint,5,opt,name=audible_mask,json=audibleMask" json:"audible_mask,omitempty"`
	Tick          *uint32                `protobuf:"varint,6,opt,name=tick" json:"tick,omitempty"`
	Passthrough   *int32                 `protobuf:"varint,7,opt,name=passthrough" json:"passthrough,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CSVCMsg_VoiceData fields.
const (
	Default_CSVCMsg_VoiceData_Client = int32(-1)
)

func (x *CSVCMsg_VoiceData) Reset() {
	*x = CSVCMsg_VoiceData{}
	mi := &file_s2_netmessages_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_VoiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_VoiceData) ProtoMessage() {}

func (x *CSVCMsg_VoiceData) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_VoiceData.ProtoReflect.Descriptor instead.
func (*CSVCMsg_VoiceData) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{42}
}

func (x *CSVCMsg_VoiceData) GetAudio() *CMsgVoiceAudio {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *CSVCMsg_VoiceData) GetClient() int32 {
	if x != nil && x.Client != nil {
		return *x.Client
	}
	return Default_CSVCMsg_VoiceData_Client
}

func (x *CSVCMsg_VoiceData) GetProximity() bool {
	if x != nil && x.Proximity != nil {
		return *x.Proximity
	}
	return false
}

func (x *CSVCMsg_VoiceData) GetXuid() uint64 {
	if x != nil && x.Xuid != nil {
		return *x.Xuid
	}
	return 0
}

func (x *CSVCMsg_VoiceData) GetAudibleMask() int32 {
	if x != nil && x.AudibleMask != nil {
		return *x.AudibleMask
	}
	return 0
}

func (x *CSVCMsg_VoiceData) GetTick() uint32 {
	if x != nil && x.Tick != nil {
		return *x.Tick
	}
	return 0
}

func (x *CSVCMsg_VoiceData) GetPassthrough() int32 {
	if x != nil && x.Passthrough != nil {
		return *x.Passthrough
	}
	return 0
}

type CSVCMsg_PacketReliable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tick          *int32                 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	Messagessize  *int32                 `protobuf:"varint,2,opt,name=messagessize" json:"messagessize,omitempty"`
	State         *bool                  `protobuf:"varint,3,opt,name=state" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_PacketReliable) Reset() {
	*x = CSVCMsg_PacketReliable{}
	mi := &file_s2_netmessages_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_PacketReliable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_PacketReliable) ProtoMessage() {}

func (x *CSVCMsg_PacketReliable) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_PacketReliable.ProtoReflect.Descriptor instead.
func (*CSVCMsg_PacketReliable) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{43}
}

func (x *CSVCMsg_PacketReliable) GetTick() int32 {
	if x != nil && x.Tick != nil {
		return *x.Tick
	}
	return 0
}

func (x *CSVCMsg_PacketReliable) GetMessagessize() int32 {
	if x != nil && x.Messagessize != nil {
		return *x.Messagessize
	}
	return 0
}

func (x *CSVCMsg_PacketReliable) GetState() bool {
	if x != nil && x.State != nil {
		return *x.State
	}
	return false
}

type CSVCMsg_FullFrameSplit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tick          *int32                 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	Section       *int32                 `protobuf:"varint,2,opt,name=section" json:"section,omitempty"`
	Total         *int32                 `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_FullFrameSplit) Reset() {
	*x = CSVCMsg_FullFrameSplit{}
	mi := &file_s2_netmessages_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_FullFrameSplit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_FullFrameSplit) ProtoMessage() {}

func (x *CSVCMsg_FullFrameSplit) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_FullFrameSplit.ProtoReflect.Descriptor instead.
func (*CSVCMsg_FullFrameSplit) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{44}
}

func (x *CSVCMsg_FullFrameSplit) GetTick() int32 {
	if x != nil && x.Tick != nil {
		return *x.Tick
	}
	return 0
}

func (x *CSVCMsg_FullFrameSplit) GetSection() int32 {
	if x != nil && x.Section != nil {
		return *x.Section
	}
	return 0
}

func (x *CSVCMsg_FullFrameSplit) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

func (x *CSVCMsg_FullFrameSplit) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CSVCMsg_HLTVStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Master        *string                `protobuf:"bytes,1,opt,name=master" json:"master,omitempty"`
	Clients       *int32                 `protobuf:"varint,2,opt,name=clients" json:"clients,omitempty"`
	Slots         *int32                 `protobuf:"varint,3,opt,name=slots" json:"slots,omitempty"`
	Proxies       *int32                 `protobuf:"varint,4,opt,name=proxies" json:"proxies,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_HLTVStatus) Reset() {
	*x = CSVCMsg_HLTVStatus{}
	mi := &file_s2_netmessages_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_HLTVStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_HLTVStatus) ProtoMessage() {}

func (x *CSVCMsg_HLTVStatus) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_HLTVStatus.ProtoReflect.Descriptor instead.
func (*CSVCMsg_HLTVStatus) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{45}
}

func (x *CSVCMsg_HLTVStatus) GetMaster() string {
	if x != nil && x.Master != nil {
		return *x.Master
	}
	return ""
}

func (x *CSVCMsg_HLTVStatus) GetClients() int32 {
	if x != nil && x.Clients != nil {
		return *x.Clients
	}
	return 0
}

func (x *CSVCMsg_HLTVStatus) GetSlots() int32 {
	if x != nil && x.Slots != nil {
		return *x.Slots
	}
	return 0
}

func (x *CSVCMsg_HLTVStatus) GetProxies() int32 {
	if x != nil && x.Proxies != nil {
		return *x.Proxies
	}
	return 0
}

type CSVCMsg_ServerSteamID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SteamId       *uint64                `protobuf:"varint,1,opt,name=steam_id,json=steamId" json:"steam_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_ServerSteamID) Reset() {
	*x = CSVCMsg_ServerSteamID{}
	mi := &file_s2_netmessages_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_ServerSteamID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_ServerSteamID) ProtoMessage() {}

func (x *CSVCMsg_ServerSteamID) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_ServerSteamID.ProtoReflect.Descriptor instead.
func (*CSVCMsg_ServerSteamID) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{46}
}

func (x *CSVCMsg_ServerSteamID) GetSteamId() uint64 {
	if x != nil && x.SteamId != nil {
		return *x.SteamId
	}
	return 0
}

type CSVCMsg_CmdKeyValues struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_CmdKeyValues) Reset() {
	*x = CSVCMsg_CmdKeyValues{}
	mi := &file_s2_netmessages_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_CmdKeyValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_CmdKeyValues) ProtoMessage() {}

func (x *CSVCMsg_CmdKeyValues) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_CmdKeyValues.ProtoReflect.Descriptor instead.
func (*CSVCMsg_CmdKeyValues) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{47}
}

func (x *CSVCMsg_CmdKeyValues) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CSVCMsg_RconServerDetails struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         []byte                 `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Details       *string                `protobuf:"bytes,2,opt,name=details" json:"details,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_RconServerDetails) Reset() {
	*x = CSVCMsg_RconServerDetails{}
	mi := &file_s2_netmessages_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_RconServerDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_RconServerDetails) ProtoMessage() {}

func (x *CSVCMsg_RconServerDetails) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_RconServerDetails.ProtoReflect.Descriptor instead.
func (*CSVCMsg_RconServerDetails) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{48}
}

func (x *CSVCMsg_RconServerDetails) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *CSVCMsg_RconServerDetails) GetDetails() string {
	if x != nil && x.Details != nil {
		return *x.Details
	}
	return ""
}

type CMsgIPCAddress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ComputerGuid  *uint64                `protobuf:"fixed64,1,opt,name=computer_guid,json=computerGuid" json:"computer_guid,omitempty"`
	ProcessId     *uint32                `protobuf:"varint,2,opt,name=process_id,json=processId" json:"process_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgIPCAddress) Reset() {
	*x = CMsgIPCAddress{}
	mi := &file_s2_netmessages_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgIPCAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgIPCAddress) ProtoMessage() {}

func (x *CMsgIPCAddress) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgIPCAddress.ProtoReflect.Descriptor instead.
func (*CMsgIPCAddress) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{49}
}

func (x *CMsgIPCAddress) GetComputerGuid() uint64 {
	if x != nil && x.ComputerGuid != nil {
		return *x.ComputerGuid
	}
	return 0
}

func (x *CMsgIPCAddress) GetProcessId() uint32 {
	if x != nil && x.ProcessId != nil {
		return *x.ProcessId
	}
	return 0
}

type CMsgServerPeer struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	PlayerSlot         *int32                 `protobuf:"varint,1,opt,name=player_slot,json=playerSlot,def=-1" json:"player_slot,omitempty"`
	Steamid            *uint64                `protobuf:"fixed64,2,opt,name=steamid" json:"steamid,omitempty"`
	Ipc                *CMsgIPCAddress        `protobuf:"bytes,3,opt,name=ipc" json:"ipc,omitempty"`
	TheyHearYou        *bool                  `protobuf:"varint,4,opt,name=they_hear_you,json=theyHearYou" json:"they_hear_you,omitempty"`
	YouHearThem        *bool                  `protobuf:"varint,5,opt,name=you_hear_them,json=youHearThem" json:"you_hear_them,omitempty"`
	IsListenserverHost *bool                  `protobuf:"varint,6,opt,name=is_listenserver_host,json=isListenserverHost" json:"is_listenserver_host,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

// Default values for CMsgServerPeer fields.
const (
	Default_CMsgServerPeer_PlayerSlot = int32(-1)
)

func (x *CMsgServerPeer) Reset() {
	*x = CMsgServerPeer{}
	mi := &file_s2_netmessages_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgServerPeer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgServerPeer) ProtoMessage() {}

func (x *CMsgServerPeer) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgServerPeer.ProtoReflect.Descriptor instead.
func (*CMsgServerPeer) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{50}
}

func (x *CMsgServerPeer) GetPlayerSlot() int32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return Default_CMsgServerPeer_PlayerSlot
}

func (x *CMsgServerPeer) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgServerPeer) GetIpc() *CMsgIPCAddress {
	if x != nil {
		return x.Ipc
	}
	return nil
}

func (x *CMsgServerPeer) GetTheyHearYou() bool {
	if x != nil && x.TheyHearYou != nil {
		return *x.TheyHearYou
	}
	return false
}

func (x *CMsgServerPeer) GetYouHearThem() bool {
	if x != nil && x.YouHearThem != nil {
		return *x.YouHearThem
	}
	return false
}

func (x *CMsgServerPeer) GetIsListenserverHost() bool {
	if x != nil && x.IsListenserverHost != nil {
		return *x.IsListenserverHost
	}
	return false
}

type CSVCMsg_PeerList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Peer          []*CMsgServerPeer      `protobuf:"bytes,1,rep,name=peer" json:"peer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_PeerList) Reset() {
	*x = CSVCMsg_PeerList{}
	mi := &file_s2_netmessages_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_PeerList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_PeerList) ProtoMessage() {}

func (x *CSVCMsg_PeerList) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_PeerList.ProtoReflect.Descriptor instead.
func (*CSVCMsg_PeerList) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{51}
}

func (x *CSVCMsg_PeerList) GetPeer() []*CMsgServerPeer {
	if x != nil {
		return x.Peer
	}
	return nil
}

type CSVCMsg_ClearAllStringTables struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Mapname             *string                `protobuf:"bytes,1,opt,name=mapname" json:"mapname,omitempty"`
	CreateTablesSkipped *bool                  `protobuf:"varint,3,opt,name=create_tables_skipped,json=createTablesSkipped" json:"create_tables_skipped,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CSVCMsg_ClearAllStringTables) Reset() {
	*x = CSVCMsg_ClearAllStringTables{}
	mi := &file_s2_netmessages_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_ClearAllStringTables) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_ClearAllStringTables) ProtoMessage() {}

func (x *CSVCMsg_ClearAllStringTables) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_ClearAllStringTables.ProtoReflect.Descriptor instead.
func (*CSVCMsg_ClearAllStringTables) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{52}
}

func (x *CSVCMsg_ClearAllStringTables) GetMapname() string {
	if x != nil && x.Mapname != nil {
		return *x.Mapname
	}
	return ""
}

func (x *CSVCMsg_ClearAllStringTables) GetCreateTablesSkipped() bool {
	if x != nil && x.CreateTablesSkipped != nil {
		return *x.CreateTablesSkipped
	}
	return false
}

type ProtoFlattenedSerializerFieldT struct {
	state                  protoimpl.MessageState                             `protogen:"open.v1"`
	VarTypeSym             *int32                                             `protobuf:"varint,1,opt,name=var_type_sym,json=varTypeSym" json:"var_type_sym,omitempty"`
	VarNameSym             *int32                                             `protobuf:"varint,2,opt,name=var_name_sym,json=varNameSym" json:"var_name_sym,omitempty"`
	BitCount               *int32                                             `protobuf:"varint,3,opt,name=bit_count,json=bitCount" json:"bit_count,omitempty"`
	LowValue               *float32                                           `protobuf:"fixed32,4,opt,name=low_value,json=lowValue" json:"low_value,omitempty"`
	HighValue              *float32                                           `protobuf:"fixed32,5,opt,name=high_value,json=highValue" json:"high_value,omitempty"`
	EncodeFlags            *int32                                             `protobuf:"varint,6,opt,name=encode_flags,json=encodeFlags" json:"encode_flags,omitempty"`
	FieldSerializerNameSym *int32                                             `protobuf:"varint,7,opt,name=field_serializer_name_sym,json=fieldSerializerNameSym" json:"field_serializer_name_sym,omitempty"`
	FieldSerializerVersion *int32                                             `protobuf:"varint,8,opt,name=field_serializer_version,json=fieldSerializerVersion" json:"field_serializer_version,omitempty"`
	SendNodeSym            *int32                                             `protobuf:"varint,9,opt,name=send_node_sym,json=sendNodeSym" json:"send_node_sym,omitempty"`
	VarEncoderSym          *int32                                             `protobuf:"varint,10,opt,name=var_encoder_sym,json=varEncoderSym" json:"var_encoder_sym,omitempty"`
	PolymorphicTypes       []*ProtoFlattenedSerializerFieldTPolymorphicFieldT `protobuf:"bytes,11,rep,name=polymorphic_types,json=polymorphicTypes" json:"polymorphic_types,omitempty"`
	VarSerializerSym       *int32                                             `protobuf:"varint,12,opt,name=var_serializer_sym,json=varSerializerSym" json:"var_serializer_sym,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ProtoFlattenedSerializerFieldT) Reset() {
	*x = ProtoFlattenedSerializerFieldT{}
	mi := &file_s2_netmessages_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoFlattenedSerializerFieldT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFlattenedSerializerFieldT) ProtoMessage() {}

func (x *ProtoFlattenedSerializerFieldT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFlattenedSerializerFieldT.ProtoReflect.Descriptor instead.
func (*ProtoFlattenedSerializerFieldT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{53}
}

func (x *ProtoFlattenedSerializerFieldT) GetVarTypeSym() int32 {
	if x != nil && x.VarTypeSym != nil {
		return *x.VarTypeSym
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetVarNameSym() int32 {
	if x != nil && x.VarNameSym != nil {
		return *x.VarNameSym
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetBitCount() int32 {
	if x != nil && x.BitCount != nil {
		return *x.BitCount
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetLowValue() float32 {
	if x != nil && x.LowValue != nil {
		return *x.LowValue
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetHighValue() float32 {
	if x != nil && x.HighValue != nil {
		return *x.HighValue
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetEncodeFlags() int32 {
	if x != nil && x.EncodeFlags != nil {
		return *x.EncodeFlags
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetFieldSerializerNameSym() int32 {
	if x != nil && x.FieldSerializerNameSym != nil {
		return *x.FieldSerializerNameSym
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetFieldSerializerVersion() int32 {
	if x != nil && x.FieldSerializerVersion != nil {
		return *x.FieldSerializerVersion
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetSendNodeSym() int32 {
	if x != nil && x.SendNodeSym != nil {
		return *x.SendNodeSym
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetVarEncoderSym() int32 {
	if x != nil && x.VarEncoderSym != nil {
		return *x.VarEncoderSym
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldT) GetPolymorphicTypes() []*ProtoFlattenedSerializerFieldTPolymorphicFieldT {
	if x != nil {
		return x.PolymorphicTypes
	}
	return nil
}

func (x *ProtoFlattenedSerializerFieldT) GetVarSerializerSym() int32 {
	if x != nil && x.VarSerializerSym != nil {
		return *x.VarSerializerSym
	}
	return 0
}

type ProtoFlattenedSerializerT struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SerializerNameSym *int32                 `protobuf:"varint,1,opt,name=serializer_name_sym,json=serializerNameSym" json:"serializer_name_sym,omitempty"`
	SerializerVersion *int32                 `protobuf:"varint,2,opt,name=serializer_version,json=serializerVersion" json:"serializer_version,omitempty"`
	FieldsIndex       []int32                `protobuf:"varint,3,rep,name=fields_index,json=fieldsIndex" json:"fields_index,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ProtoFlattenedSerializerT) Reset() {
	*x = ProtoFlattenedSerializerT{}
	mi := &file_s2_netmessages_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoFlattenedSerializerT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFlattenedSerializerT) ProtoMessage() {}

func (x *ProtoFlattenedSerializerT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFlattenedSerializerT.ProtoReflect.Descriptor instead.
func (*ProtoFlattenedSerializerT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{54}
}

func (x *ProtoFlattenedSerializerT) GetSerializerNameSym() int32 {
	if x != nil && x.SerializerNameSym != nil {
		return *x.SerializerNameSym
	}
	return 0
}

func (x *ProtoFlattenedSerializerT) GetSerializerVersion() int32 {
	if x != nil && x.SerializerVersion != nil {
		return *x.SerializerVersion
	}
	return 0
}

func (x *ProtoFlattenedSerializerT) GetFieldsIndex() []int32 {
	if x != nil {
		return x.FieldsIndex
	}
	return nil
}

type CSVCMsg_FlattenedSerializer struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Serializers   []*ProtoFlattenedSerializerT      `protobuf:"bytes,1,rep,name=serializers" json:"serializers,omitempty"`
	Symbols       []string                          `protobuf:"bytes,2,rep,name=symbols" json:"symbols,omitempty"`
	Fields        []*ProtoFlattenedSerializerFieldT `protobuf:"bytes,3,rep,name=fields" json:"fields,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_FlattenedSerializer) Reset() {
	*x = CSVCMsg_FlattenedSerializer{}
	mi := &file_s2_netmessages_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_FlattenedSerializer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_FlattenedSerializer) ProtoMessage() {}

func (x *CSVCMsg_FlattenedSerializer) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_FlattenedSerializer.ProtoReflect.Descriptor instead.
func (*CSVCMsg_FlattenedSerializer) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{55}
}

func (x *CSVCMsg_FlattenedSerializer) GetSerializers() []*ProtoFlattenedSerializerT {
	if x != nil {
		return x.Serializers
	}
	return nil
}

func (x *CSVCMsg_FlattenedSerializer) GetSymbols() []string {
	if x != nil {
		return x.Symbols
	}
	return nil
}

func (x *CSVCMsg_FlattenedSerializer) GetFields() []*ProtoFlattenedSerializerFieldT {
	if x != nil {
		return x.Fields
	}
	return nil
}

type CSVCMsg_StopSound struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Guid          *uint32                `protobuf:"fixed32,1,opt,name=guid" json:"guid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_StopSound) Reset() {
	*x = CSVCMsg_StopSound{}
	mi := &file_s2_netmessages_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_StopSound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_StopSound) ProtoMessage() {}

func (x *CSVCMsg_StopSound) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_StopSound.ProtoReflect.Descriptor instead.
func (*CSVCMsg_StopSound) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{56}
}

func (x *CSVCMsg_StopSound) GetGuid() uint32 {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return 0
}

type CBidirMsg_RebroadcastGameEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Posttoserver     *bool                  `protobuf:"varint,1,opt,name=posttoserver" json:"posttoserver,omitempty"`
	Buftype          *int32                 `protobuf:"varint,2,opt,name=buftype" json:"buftype,omitempty"`
	Clientbitcount   *uint32                `protobuf:"varint,3,opt,name=clientbitcount" json:"clientbitcount,omitempty"`
	Receivingclients *uint64                `protobuf:"varint,4,opt,name=receivingclients" json:"receivingclients,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CBidirMsg_RebroadcastGameEvent) Reset() {
	*x = CBidirMsg_RebroadcastGameEvent{}
	mi := &file_s2_netmessages_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CBidirMsg_RebroadcastGameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBidirMsg_RebroadcastGameEvent) ProtoMessage() {}

func (x *CBidirMsg_RebroadcastGameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBidirMsg_RebroadcastGameEvent.ProtoReflect.Descriptor instead.
func (*CBidirMsg_RebroadcastGameEvent) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{57}
}

func (x *CBidirMsg_RebroadcastGameEvent) GetPosttoserver() bool {
	if x != nil && x.Posttoserver != nil {
		return *x.Posttoserver
	}
	return false
}

func (x *CBidirMsg_RebroadcastGameEvent) GetBuftype() int32 {
	if x != nil && x.Buftype != nil {
		return *x.Buftype
	}
	return 0
}

func (x *CBidirMsg_RebroadcastGameEvent) GetClientbitcount() uint32 {
	if x != nil && x.Clientbitcount != nil {
		return *x.Clientbitcount
	}
	return 0
}

func (x *CBidirMsg_RebroadcastGameEvent) GetReceivingclients() uint64 {
	if x != nil && x.Receivingclients != nil {
		return *x.Receivingclients
	}
	return 0
}

type CBidirMsg_RebroadcastSource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Eventsource   *int32                 `protobuf:"varint,1,opt,name=eventsource" json:"eventsource,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CBidirMsg_RebroadcastSource) Reset() {
	*x = CBidirMsg_RebroadcastSource{}
	mi := &file_s2_netmessages_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CBidirMsg_RebroadcastSource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBidirMsg_RebroadcastSource) ProtoMessage() {}

func (x *CBidirMsg_RebroadcastSource) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBidirMsg_RebroadcastSource.ProtoReflect.Descriptor instead.
func (*CBidirMsg_RebroadcastSource) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{58}
}

func (x *CBidirMsg_RebroadcastSource) GetEventsource() int32 {
	if x != nil && x.Eventsource != nil {
		return *x.Eventsource
	}
	return 0
}

type CBidirMsg_PredictionEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       *uint32                `protobuf:"varint,1,req,name=event_id,json=eventId" json:"event_id,omitempty"`
	EventData     []byte                 `protobuf:"bytes,2,req,name=event_data,json=eventData" json:"event_data,omitempty"`
	SyncType      *uint32                `protobuf:"varint,3,opt,name=sync_type,json=syncType" json:"sync_type,omitempty"`
	SyncValUint32 *uint32                `protobuf:"varint,4,opt,name=sync_val_uint32,json=syncValUint32" json:"sync_val_uint32,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CBidirMsg_PredictionEvent) Reset() {
	*x = CBidirMsg_PredictionEvent{}
	mi := &file_s2_netmessages_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CBidirMsg_PredictionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CBidirMsg_PredictionEvent) ProtoMessage() {}

func (x *CBidirMsg_PredictionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CBidirMsg_PredictionEvent.ProtoReflect.Descriptor instead.
func (*CBidirMsg_PredictionEvent) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{59}
}

func (x *CBidirMsg_PredictionEvent) GetEventId() uint32 {
	if x != nil && x.EventId != nil {
		return *x.EventId
	}
	return 0
}

func (x *CBidirMsg_PredictionEvent) GetEventData() []byte {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *CBidirMsg_PredictionEvent) GetSyncType() uint32 {
	if x != nil && x.SyncType != nil {
		return *x.SyncType
	}
	return 0
}

func (x *CBidirMsg_PredictionEvent) GetSyncValUint32() uint32 {
	if x != nil && x.SyncValUint32 != nil {
		return *x.SyncValUint32
	}
	return 0
}

type CMsgServerNetworkStats struct {
	state               protoimpl.MessageState           `protogen:"open.v1"`
	Dedicated           *bool                            `protobuf:"varint,1,opt,name=dedicated" json:"dedicated,omitempty"`
	CpuUsage            *int32                           `protobuf:"varint,2,opt,name=cpu_usage,json=cpuUsage" json:"cpu_usage,omitempty"`
	MemoryUsedMb        *int32                           `protobuf:"varint,3,opt,name=memory_used_mb,json=memoryUsedMb" json:"memory_used_mb,omitempty"`
	MemoryFreeMb        *int32                           `protobuf:"varint,4,opt,name=memory_free_mb,json=memoryFreeMb" json:"memory_free_mb,omitempty"`
	Uptime              *int32                           `protobuf:"varint,5,opt,name=uptime" json:"uptime,omitempty"`
	SpawnCount          *int32                           `protobuf:"varint,6,opt,name=spawn_count,json=spawnCount" json:"spawn_count,omitempty"`
	NumClients          *int32                           `protobuf:"varint,8,opt,name=num_clients,json=numClients" json:"num_clients,omitempty"`
	NumBots             *int32                           `protobuf:"varint,9,opt,name=num_bots,json=numBots" json:"num_bots,omitempty"`
	NumSpectators       *int32                           `protobuf:"varint,10,opt,name=num_spectators,json=numSpectators" json:"num_spectators,omitempty"`
	NumTvRelays         *int32                           `protobuf:"varint,11,opt,name=num_tv_relays,json=numTvRelays" json:"num_tv_relays,omitempty"`
	Fps                 *float32                         `protobuf:"fixed32,12,opt,name=fps" json:"fps,omitempty"`
	Ports               []*CMsgServerNetworkStats_Port   `protobuf:"bytes,17,rep,name=ports" json:"ports,omitempty"`
	AvgPingMs           *float32                         `protobuf:"fixed32,18,opt,name=avg_ping_ms,json=avgPingMs" json:"avg_ping_ms,omitempty"`
	AvgEngineLatencyOut *float32                         `protobuf:"fixed32,19,opt,name=avg_engine_latency_out,json=avgEngineLatencyOut" json:"avg_engine_latency_out,omitempty"`
	AvgPacketsOut       *float32                         `protobuf:"fixed32,20,opt,name=avg_packets_out,json=avgPacketsOut" json:"avg_packets_out,omitempty"`
	AvgPacketsIn        *float32                         `protobuf:"fixed32,21,opt,name=avg_packets_in,json=avgPacketsIn" json:"avg_packets_in,omitempty"`
	AvgLossOut          *float32                         `protobuf:"fixed32,22,opt,name=avg_loss_out,json=avgLossOut" json:"avg_loss_out,omitempty"`
	AvgLossIn           *float32                         `protobuf:"fixed32,23,opt,name=avg_loss_in,json=avgLossIn" json:"avg_loss_in,omitempty"`
	AvgDataOut          *float32                         `protobuf:"fixed32,24,opt,name=avg_data_out,json=avgDataOut" json:"avg_data_out,omitempty"`
	AvgDataIn           *float32                         `protobuf:"fixed32,25,opt,name=avg_data_in,json=avgDataIn" json:"avg_data_in,omitempty"`
	TotalDataIn         *uint64                          `protobuf:"varint,26,opt,name=total_data_in,json=totalDataIn" json:"total_data_in,omitempty"`
	TotalPacketsIn      *uint64                          `protobuf:"varint,27,opt,name=total_packets_in,json=totalPacketsIn" json:"total_packets_in,omitempty"`
	TotalDataOut        *uint64                          `protobuf:"varint,28,opt,name=total_data_out,json=totalDataOut" json:"total_data_out,omitempty"`
	TotalPacketsOut     *uint64                          `protobuf:"varint,29,opt,name=total_packets_out,json=totalPacketsOut" json:"total_packets_out,omitempty"`
	Players             []*CMsgServerNetworkStats_Player `protobuf:"bytes,30,rep,name=players" json:"players,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CMsgServerNetworkStats) Reset() {
	*x = CMsgServerNetworkStats{}
	mi := &file_s2_netmessages_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgServerNetworkStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgServerNetworkStats) ProtoMessage() {}

func (x *CMsgServerNetworkStats) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgServerNetworkStats.ProtoReflect.Descriptor instead.
func (*CMsgServerNetworkStats) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{60}
}

func (x *CMsgServerNetworkStats) GetDedicated() bool {
	if x != nil && x.Dedicated != nil {
		return *x.Dedicated
	}
	return false
}

func (x *CMsgServerNetworkStats) GetCpuUsage() int32 {
	if x != nil && x.CpuUsage != nil {
		return *x.CpuUsage
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetMemoryUsedMb() int32 {
	if x != nil && x.MemoryUsedMb != nil {
		return *x.MemoryUsedMb
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetMemoryFreeMb() int32 {
	if x != nil && x.MemoryFreeMb != nil {
		return *x.MemoryFreeMb
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetUptime() int32 {
	if x != nil && x.Uptime != nil {
		return *x.Uptime
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetSpawnCount() int32 {
	if x != nil && x.SpawnCount != nil {
		return *x.SpawnCount
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetNumClients() int32 {
	if x != nil && x.NumClients != nil {
		return *x.NumClients
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetNumBots() int32 {
	if x != nil && x.NumBots != nil {
		return *x.NumBots
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetNumSpectators() int32 {
	if x != nil && x.NumSpectators != nil {
		return *x.NumSpectators
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetNumTvRelays() int32 {
	if x != nil && x.NumTvRelays != nil {
		return *x.NumTvRelays
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetFps() float32 {
	if x != nil && x.Fps != nil {
		return *x.Fps
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetPorts() []*CMsgServerNetworkStats_Port {
	if x != nil {
		return x.Ports
	}
	return nil
}

func (x *CMsgServerNetworkStats) GetAvgPingMs() float32 {
	if x != nil && x.AvgPingMs != nil {
		return *x.AvgPingMs
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetAvgEngineLatencyOut() float32 {
	if x != nil && x.AvgEngineLatencyOut != nil {
		return *x.AvgEngineLatencyOut
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetAvgPacketsOut() float32 {
	if x != nil && x.AvgPacketsOut != nil {
		return *x.AvgPacketsOut
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetAvgPacketsIn() float32 {
	if x != nil && x.AvgPacketsIn != nil {
		return *x.AvgPacketsIn
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetAvgLossOut() float32 {
	if x != nil && x.AvgLossOut != nil {
		return *x.AvgLossOut
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetAvgLossIn() float32 {
	if x != nil && x.AvgLossIn != nil {
		return *x.AvgLossIn
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetAvgDataOut() float32 {
	if x != nil && x.AvgDataOut != nil {
		return *x.AvgDataOut
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetAvgDataIn() float32 {
	if x != nil && x.AvgDataIn != nil {
		return *x.AvgDataIn
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetTotalDataIn() uint64 {
	if x != nil && x.TotalDataIn != nil {
		return *x.TotalDataIn
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetTotalPacketsIn() uint64 {
	if x != nil && x.TotalPacketsIn != nil {
		return *x.TotalPacketsIn
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetTotalDataOut() uint64 {
	if x != nil && x.TotalDataOut != nil {
		return *x.TotalDataOut
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetTotalPacketsOut() uint64 {
	if x != nil && x.TotalPacketsOut != nil {
		return *x.TotalPacketsOut
	}
	return 0
}

func (x *CMsgServerNetworkStats) GetPlayers() []*CMsgServerNetworkStats_Player {
	if x != nil {
		return x.Players
	}
	return nil
}

type CSVCMsg_HltvReplay struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Delay               *int32                 `protobuf:"varint,1,opt,name=delay" json:"delay,omitempty"`
	PrimaryTarget       *int32                 `protobuf:"varint,2,opt,name=primary_target,json=primaryTarget,def=-1" json:"primary_target,omitempty"`
	ReplayStopAt        *int32                 `protobuf:"varint,3,opt,name=replay_stop_at,json=replayStopAt" json:"replay_stop_at,omitempty"`
	ReplayStartAt       *int32                 `protobuf:"varint,4,opt,name=replay_start_at,json=replayStartAt" json:"replay_start_at,omitempty"`
	ReplaySlowdownBegin *int32                 `protobuf:"varint,5,opt,name=replay_slowdown_begin,json=replaySlowdownBegin" json:"replay_slowdown_begin,omitempty"`
	ReplaySlowdownEnd   *int32                 `protobuf:"varint,6,opt,name=replay_slowdown_end,json=replaySlowdownEnd" json:"replay_slowdown_end,omitempty"`
	ReplaySlowdownRate  *float32               `protobuf:"fixed32,7,opt,name=replay_slowdown_rate,json=replaySlowdownRate" json:"replay_slowdown_rate,omitempty"`
	Reason              *int32                 `protobuf:"varint,8,opt,name=reason" json:"reason,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

// Default values for CSVCMsg_HltvReplay fields.
const (
	Default_CSVCMsg_HltvReplay_PrimaryTarget = int32(-1)
)

func (x *CSVCMsg_HltvReplay) Reset() {
	*x = CSVCMsg_HltvReplay{}
	mi := &file_s2_netmessages_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_HltvReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_HltvReplay) ProtoMessage() {}

func (x *CSVCMsg_HltvReplay) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_HltvReplay.ProtoReflect.Descriptor instead.
func (*CSVCMsg_HltvReplay) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{61}
}

func (x *CSVCMsg_HltvReplay) GetDelay() int32 {
	if x != nil && x.Delay != nil {
		return *x.Delay
	}
	return 0
}

func (x *CSVCMsg_HltvReplay) GetPrimaryTarget() int32 {
	if x != nil && x.PrimaryTarget != nil {
		return *x.PrimaryTarget
	}
	return Default_CSVCMsg_HltvReplay_PrimaryTarget
}

func (x *CSVCMsg_HltvReplay) GetReplayStopAt() int32 {
	if x != nil && x.ReplayStopAt != nil {
		return *x.ReplayStopAt
	}
	return 0
}

func (x *CSVCMsg_HltvReplay) GetReplayStartAt() int32 {
	if x != nil && x.ReplayStartAt != nil {
		return *x.ReplayStartAt
	}
	return 0
}

func (x *CSVCMsg_HltvReplay) GetReplaySlowdownBegin() int32 {
	if x != nil && x.ReplaySlowdownBegin != nil {
		return *x.ReplaySlowdownBegin
	}
	return 0
}

func (x *CSVCMsg_HltvReplay) GetReplaySlowdownEnd() int32 {
	if x != nil && x.ReplaySlowdownEnd != nil {
		return *x.ReplaySlowdownEnd
	}
	return 0
}

func (x *CSVCMsg_HltvReplay) GetReplaySlowdownRate() float32 {
	if x != nil && x.ReplaySlowdownRate != nil {
		return *x.ReplaySlowdownRate
	}
	return 0
}

func (x *CSVCMsg_HltvReplay) GetReason() int32 {
	if x != nil && x.Reason != nil {
		return *x.Reason
	}
	return 0
}

type CCLCMsg_HltvReplay struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Request        *int32                 `protobuf:"varint,1,opt,name=request" json:"request,omitempty"`
	SlowdownLength *float32               `protobuf:"fixed32,2,opt,name=slowdown_length,json=slowdownLength" json:"slowdown_length,omitempty"`
	SlowdownRate   *float32               `protobuf:"fixed32,3,opt,name=slowdown_rate,json=slowdownRate" json:"slowdown_rate,omitempty"`
	PrimaryTarget  *int32                 `protobuf:"varint,4,opt,name=primary_target,json=primaryTarget,def=-1" json:"primary_target,omitempty"`
	EventTime      *float32               `protobuf:"fixed32,5,opt,name=event_time,json=eventTime" json:"event_time,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

// Default values for CCLCMsg_HltvReplay fields.
const (
	Default_CCLCMsg_HltvReplay_PrimaryTarget = int32(-1)
)

func (x *CCLCMsg_HltvReplay) Reset() {
	*x = CCLCMsg_HltvReplay{}
	mi := &file_s2_netmessages_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_HltvReplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_HltvReplay) ProtoMessage() {}

func (x *CCLCMsg_HltvReplay) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_HltvReplay.ProtoReflect.Descriptor instead.
func (*CCLCMsg_HltvReplay) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{62}
}

func (x *CCLCMsg_HltvReplay) GetRequest() int32 {
	if x != nil && x.Request != nil {
		return *x.Request
	}
	return 0
}

func (x *CCLCMsg_HltvReplay) GetSlowdownLength() float32 {
	if x != nil && x.SlowdownLength != nil {
		return *x.SlowdownLength
	}
	return 0
}

func (x *CCLCMsg_HltvReplay) GetSlowdownRate() float32 {
	if x != nil && x.SlowdownRate != nil {
		return *x.SlowdownRate
	}
	return 0
}

func (x *CCLCMsg_HltvReplay) GetPrimaryTarget() int32 {
	if x != nil && x.PrimaryTarget != nil {
		return *x.PrimaryTarget
	}
	return Default_CCLCMsg_HltvReplay_PrimaryTarget
}

func (x *CCLCMsg_HltvReplay) GetEventTime() float32 {
	if x != nil && x.EventTime != nil {
		return *x.EventTime
	}
	return 0
}

type CSVCMsg_Broadcast_Command struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cmd           *string                `protobuf:"bytes,1,opt,name=cmd" json:"cmd,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_Broadcast_Command) Reset() {
	*x = CSVCMsg_Broadcast_Command{}
	mi := &file_s2_netmessages_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_Broadcast_Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_Broadcast_Command) ProtoMessage() {}

func (x *CSVCMsg_Broadcast_Command) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_Broadcast_Command.ProtoReflect.Descriptor instead.
func (*CSVCMsg_Broadcast_Command) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{63}
}

func (x *CSVCMsg_Broadcast_Command) GetCmd() string {
	if x != nil && x.Cmd != nil {
		return *x.Cmd
	}
	return ""
}

type CCLCMsg_HltvFixupOperatorTick struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Tick                *int32                 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	PropsData           []byte                 `protobuf:"bytes,2,opt,name=props_data,json=propsData" json:"props_data,omitempty"`
	Origin              *CMsgVector            `protobuf:"bytes,3,opt,name=origin" json:"origin,omitempty"`
	EyeAngles           *CMsgQAngle            `protobuf:"bytes,4,opt,name=eye_angles,json=eyeAngles" json:"eye_angles,omitempty"`
	ObserverMode        *int32                 `protobuf:"varint,5,opt,name=observer_mode,json=observerMode" json:"observer_mode,omitempty"`
	CameramanScoreboard *bool                  `protobuf:"varint,6,opt,name=cameraman_scoreboard,json=cameramanScoreboard" json:"cameraman_scoreboard,omitempty"`
	ObserverTarget      *int32                 `protobuf:"varint,7,opt,name=observer_target,json=observerTarget" json:"observer_target,omitempty"`
	ViewOffset          *CMsgVector            `protobuf:"bytes,8,opt,name=view_offset,json=viewOffset" json:"view_offset,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CCLCMsg_HltvFixupOperatorTick) Reset() {
	*x = CCLCMsg_HltvFixupOperatorTick{}
	mi := &file_s2_netmessages_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CCLCMsg_HltvFixupOperatorTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CCLCMsg_HltvFixupOperatorTick) ProtoMessage() {}

func (x *CCLCMsg_HltvFixupOperatorTick) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CCLCMsg_HltvFixupOperatorTick.ProtoReflect.Descriptor instead.
func (*CCLCMsg_HltvFixupOperatorTick) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{64}
}

func (x *CCLCMsg_HltvFixupOperatorTick) GetTick() int32 {
	if x != nil && x.Tick != nil {
		return *x.Tick
	}
	return 0
}

func (x *CCLCMsg_HltvFixupOperatorTick) GetPropsData() []byte {
	if x != nil {
		return x.PropsData
	}
	return nil
}

func (x *CCLCMsg_HltvFixupOperatorTick) GetOrigin() *CMsgVector {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *CCLCMsg_HltvFixupOperatorTick) GetEyeAngles() *CMsgQAngle {
	if x != nil {
		return x.EyeAngles
	}
	return nil
}

func (x *CCLCMsg_HltvFixupOperatorTick) GetObserverMode() int32 {
	if x != nil && x.ObserverMode != nil {
		return *x.ObserverMode
	}
	return 0
}

func (x *CCLCMsg_HltvFixupOperatorTick) GetCameramanScoreboard() bool {
	if x != nil && x.CameramanScoreboard != nil {
		return *x.CameramanScoreboard
	}
	return false
}

func (x *CCLCMsg_HltvFixupOperatorTick) GetObserverTarget() int32 {
	if x != nil && x.ObserverTarget != nil {
		return *x.ObserverTarget
	}
	return 0
}

func (x *CCLCMsg_HltvFixupOperatorTick) GetViewOffset() *CMsgVector {
	if x != nil {
		return x.ViewOffset
	}
	return nil
}

type CSVCMsg_HltvFixupOperatorStatus struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Mode                 *uint32                `protobuf:"varint,1,opt,name=mode" json:"mode,omitempty"`
	OverrideOperatorName *string                `protobuf:"bytes,2,opt,name=override_operator_name,json=overrideOperatorName" json:"override_operator_name,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CSVCMsg_HltvFixupOperatorStatus) Reset() {
	*x = CSVCMsg_HltvFixupOperatorStatus{}
	mi := &file_s2_netmessages_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_HltvFixupOperatorStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_HltvFixupOperatorStatus) ProtoMessage() {}

func (x *CSVCMsg_HltvFixupOperatorStatus) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_HltvFixupOperatorStatus.ProtoReflect.Descriptor instead.
func (*CSVCMsg_HltvFixupOperatorStatus) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{65}
}

func (x *CSVCMsg_HltvFixupOperatorStatus) GetMode() uint32 {
	if x != nil && x.Mode != nil {
		return *x.Mode
	}
	return 0
}

func (x *CSVCMsg_HltvFixupOperatorStatus) GetOverrideOperatorName() string {
	if x != nil && x.OverrideOperatorName != nil {
		return *x.OverrideOperatorName
	}
	return ""
}

type CMsgServerUserCmd struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Data               []byte                 `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	CmdNumber          *int32                 `protobuf:"varint,2,opt,name=cmd_number,json=cmdNumber" json:"cmd_number,omitempty"`
	PlayerSlot         *int32                 `protobuf:"varint,3,opt,name=player_slot,json=playerSlot,def=-1" json:"player_slot,omitempty"`
	ServerTickExecuted *int32                 `protobuf:"varint,4,opt,name=server_tick_executed,json=serverTickExecuted" json:"server_tick_executed,omitempty"`
	ClientTick         *int32                 `protobuf:"varint,5,opt,name=client_tick,json=clientTick" json:"client_tick,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

// Default values for CMsgServerUserCmd fields.
const (
	Default_CMsgServerUserCmd_PlayerSlot = int32(-1)
)

func (x *CMsgServerUserCmd) Reset() {
	*x = CMsgServerUserCmd{}
	mi := &file_s2_netmessages_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgServerUserCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgServerUserCmd) ProtoMessage() {}

func (x *CMsgServerUserCmd) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgServerUserCmd.ProtoReflect.Descriptor instead.
func (*CMsgServerUserCmd) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{66}
}

func (x *CMsgServerUserCmd) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CMsgServerUserCmd) GetCmdNumber() int32 {
	if x != nil && x.CmdNumber != nil {
		return *x.CmdNumber
	}
	return 0
}

func (x *CMsgServerUserCmd) GetPlayerSlot() int32 {
	if x != nil && x.PlayerSlot != nil {
		return *x.PlayerSlot
	}
	return Default_CMsgServerUserCmd_PlayerSlot
}

func (x *CMsgServerUserCmd) GetServerTickExecuted() int32 {
	if x != nil && x.ServerTickExecuted != nil {
		return *x.ServerTickExecuted
	}
	return 0
}

func (x *CMsgServerUserCmd) GetClientTick() int32 {
	if x != nil && x.ClientTick != nil {
		return *x.ClientTick
	}
	return 0
}

type CSVCMsg_UserCommands struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commands      []*CMsgServerUserCmd   `protobuf:"bytes,1,rep,name=commands" json:"commands,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_UserCommands) Reset() {
	*x = CSVCMsg_UserCommands{}
	mi := &file_s2_netmessages_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_UserCommands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_UserCommands) ProtoMessage() {}

func (x *CSVCMsg_UserCommands) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_UserCommands.ProtoReflect.Descriptor instead.
func (*CSVCMsg_UserCommands) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{67}
}

func (x *CSVCMsg_UserCommands) GetCommands() []*CMsgServerUserCmd {
	if x != nil {
		return x.Commands
	}
	return nil
}

type CMsgSource2PerfIntervalSample_Tag struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tag           *string                `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	MaxValue      *uint32                `protobuf:"varint,2,opt,name=max_value,json=maxValue" json:"max_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgSource2PerfIntervalSample_Tag) Reset() {
	*x = CMsgSource2PerfIntervalSample_Tag{}
	mi := &file_s2_netmessages_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgSource2PerfIntervalSample_Tag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgSource2PerfIntervalSample_Tag) ProtoMessage() {}

func (x *CMsgSource2PerfIntervalSample_Tag) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgSource2PerfIntervalSample_Tag.ProtoReflect.Descriptor instead.
func (*CMsgSource2PerfIntervalSample_Tag) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{18, 0}
}

func (x *CMsgSource2PerfIntervalSample_Tag) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *CMsgSource2PerfIntervalSample_Tag) GetMaxValue() uint32 {
	if x != nil && x.MaxValue != nil {
		return *x.MaxValue
	}
	return 0
}

type CSource2Metrics_MatchPerfSummary_Notification_Client struct {
	state          protoimpl.MessageState           `protogen:"open.v1"`
	SystemSpecs    *CMsgSource2SystemSpecs          `protobuf:"bytes,1,opt,name=system_specs,json=systemSpecs" json:"system_specs,omitempty"`
	Profile        *CMsgSource2VProfLiteReport      `protobuf:"bytes,2,opt,name=profile" json:"profile,omitempty"`
	BuildId        *uint32                          `protobuf:"varint,3,opt,name=build_id,json=buildId" json:"build_id,omitempty"`
	DownstreamFlow *CMsgSource2NetworkFlowQuality   `protobuf:"bytes,4,opt,name=downstream_flow,json=downstreamFlow" json:"downstream_flow,omitempty"`
	UpstreamFlow   *CMsgSource2NetworkFlowQuality   `protobuf:"bytes,5,opt,name=upstream_flow,json=upstreamFlow" json:"upstream_flow,omitempty"`
	Steamid        *uint64                          `protobuf:"fixed64,10,opt,name=steamid" json:"steamid,omitempty"`
	PerfSamples    []*CMsgSource2PerfIntervalSample `protobuf:"bytes,11,rep,name=perf_samples,json=perfSamples" json:"perf_samples,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) Reset() {
	*x = CSource2Metrics_MatchPerfSummary_Notification_Client{}
	mi := &file_s2_netmessages_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSource2Metrics_MatchPerfSummary_Notification_Client) ProtoMessage() {}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSource2Metrics_MatchPerfSummary_Notification_Client.ProtoReflect.Descriptor instead.
func (*CSource2Metrics_MatchPerfSummary_Notification_Client) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{20, 0}
}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) GetSystemSpecs() *CMsgSource2SystemSpecs {
	if x != nil {
		return x.SystemSpecs
	}
	return nil
}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) GetProfile() *CMsgSource2VProfLiteReport {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) GetBuildId() uint32 {
	if x != nil && x.BuildId != nil {
		return *x.BuildId
	}
	return 0
}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) GetDownstreamFlow() *CMsgSource2NetworkFlowQuality {
	if x != nil {
		return x.DownstreamFlow
	}
	return nil
}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) GetUpstreamFlow() *CMsgSource2NetworkFlowQuality {
	if x != nil {
		return x.UpstreamFlow
	}
	return nil
}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CSource2Metrics_MatchPerfSummary_Notification_Client) GetPerfSamples() []*CMsgSource2PerfIntervalSample {
	if x != nil {
		return x.PerfSamples
	}
	return nil
}

type CSVCMsg_ClassInfoClassT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClassId       *int32                 `protobuf:"varint,1,opt,name=class_id,json=classId" json:"class_id,omitempty"`
	ClassName     *string                `protobuf:"bytes,3,opt,name=class_name,json=className" json:"class_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_ClassInfoClassT) Reset() {
	*x = CSVCMsg_ClassInfoClassT{}
	mi := &file_s2_netmessages_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_ClassInfoClassT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_ClassInfoClassT) ProtoMessage() {}

func (x *CSVCMsg_ClassInfoClassT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_ClassInfoClassT.ProtoReflect.Descriptor instead.
func (*CSVCMsg_ClassInfoClassT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{22, 0}
}

func (x *CSVCMsg_ClassInfoClassT) GetClassId() int32 {
	if x != nil && x.ClassId != nil {
		return *x.ClassId
	}
	return 0
}

func (x *CSVCMsg_ClassInfoClassT) GetClassName() string {
	if x != nil && x.ClassName != nil {
		return *x.ClassName
	}
	return ""
}

type CSVCMsg_SoundsSounddataT struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OriginX         *int32                 `protobuf:"zigzag32,1,opt,name=origin_x,json=originX" json:"origin_x,omitempty"`
	OriginY         *int32                 `protobuf:"zigzag32,2,opt,name=origin_y,json=originY" json:"origin_y,omitempty"`
	OriginZ         *int32                 `protobuf:"zigzag32,3,opt,name=origin_z,json=originZ" json:"origin_z,omitempty"`
	Volume          *uint32                `protobuf:"varint,4,opt,name=volume" json:"volume,omitempty"`
	DelayValue      *float32               `protobuf:"fixed32,5,opt,name=delay_value,json=delayValue" json:"delay_value,omitempty"`
	SequenceNumber  *int32                 `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber" json:"sequence_number,omitempty"`
	EntityIndex     *int32                 `protobuf:"varint,7,opt,name=entity_index,json=entityIndex,def=-1" json:"entity_index,omitempty"`
	Channel         *int32                 `protobuf:"varint,8,opt,name=channel" json:"channel,omitempty"`
	Pitch           *int32                 `protobuf:"varint,9,opt,name=pitch" json:"pitch,omitempty"`
	Flags           *int32                 `protobuf:"varint,10,opt,name=flags" json:"flags,omitempty"`
	SoundNum        *uint32                `protobuf:"varint,11,opt,name=sound_num,json=soundNum" json:"sound_num,omitempty"`
	SoundNumHandle  *uint32                `protobuf:"fixed32,12,opt,name=sound_num_handle,json=soundNumHandle" json:"sound_num_handle,omitempty"`
	SpeakerEntity   *int32                 `protobuf:"varint,13,opt,name=speaker_entity,json=speakerEntity" json:"speaker_entity,omitempty"`
	RandomSeed      *int32                 `protobuf:"varint,14,opt,name=random_seed,json=randomSeed" json:"random_seed,omitempty"`
	SoundLevel      *int32                 `protobuf:"varint,15,opt,name=sound_level,json=soundLevel" json:"sound_level,omitempty"`
	IsSentence      *bool                  `protobuf:"varint,16,opt,name=is_sentence,json=isSentence" json:"is_sentence,omitempty"`
	IsAmbient       *bool                  `protobuf:"varint,17,opt,name=is_ambient,json=isAmbient" json:"is_ambient,omitempty"`
	Guid            *uint32                `protobuf:"varint,18,opt,name=guid" json:"guid,omitempty"`
	SoundResourceId *uint64                `protobuf:"fixed64,19,opt,name=sound_resource_id,json=soundResourceId" json:"sound_resource_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

// Default values for CSVCMsg_SoundsSounddataT fields.
const (
	Default_CSVCMsg_SoundsSounddataT_EntityIndex = int32(-1)
)

func (x *CSVCMsg_SoundsSounddataT) Reset() {
	*x = CSVCMsg_SoundsSounddataT{}
	mi := &file_s2_netmessages_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_SoundsSounddataT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_SoundsSounddataT) ProtoMessage() {}

func (x *CSVCMsg_SoundsSounddataT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_SoundsSounddataT.ProtoReflect.Descriptor instead.
func (*CSVCMsg_SoundsSounddataT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{26, 0}
}

func (x *CSVCMsg_SoundsSounddataT) GetOriginX() int32 {
	if x != nil && x.OriginX != nil {
		return *x.OriginX
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetOriginY() int32 {
	if x != nil && x.OriginY != nil {
		return *x.OriginY
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetOriginZ() int32 {
	if x != nil && x.OriginZ != nil {
		return *x.OriginZ
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetVolume() uint32 {
	if x != nil && x.Volume != nil {
		return *x.Volume
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetDelayValue() float32 {
	if x != nil && x.DelayValue != nil {
		return *x.DelayValue
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetSequenceNumber() int32 {
	if x != nil && x.SequenceNumber != nil {
		return *x.SequenceNumber
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetEntityIndex() int32 {
	if x != nil && x.EntityIndex != nil {
		return *x.EntityIndex
	}
	return Default_CSVCMsg_SoundsSounddataT_EntityIndex
}

func (x *CSVCMsg_SoundsSounddataT) GetChannel() int32 {
	if x != nil && x.Channel != nil {
		return *x.Channel
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetPitch() int32 {
	if x != nil && x.Pitch != nil {
		return *x.Pitch
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetFlags() int32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetSoundNum() uint32 {
	if x != nil && x.SoundNum != nil {
		return *x.SoundNum
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetSoundNumHandle() uint32 {
	if x != nil && x.SoundNumHandle != nil {
		return *x.SoundNumHandle
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetSpeakerEntity() int32 {
	if x != nil && x.SpeakerEntity != nil {
		return *x.SpeakerEntity
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetRandomSeed() int32 {
	if x != nil && x.RandomSeed != nil {
		return *x.RandomSeed
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetSoundLevel() int32 {
	if x != nil && x.SoundLevel != nil {
		return *x.SoundLevel
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetIsSentence() bool {
	if x != nil && x.IsSentence != nil {
		return *x.IsSentence
	}
	return false
}

func (x *CSVCMsg_SoundsSounddataT) GetIsAmbient() bool {
	if x != nil && x.IsAmbient != nil {
		return *x.IsAmbient
	}
	return false
}

func (x *CSVCMsg_SoundsSounddataT) GetGuid() uint32 {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return 0
}

func (x *CSVCMsg_SoundsSounddataT) GetSoundResourceId() uint64 {
	if x != nil && x.SoundResourceId != nil {
		return *x.SoundResourceId
	}
	return 0
}

type CSVCMsg_SendTableSendpropT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *int32                 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	VarName       *string                `protobuf:"bytes,2,opt,name=var_name,json=varName" json:"var_name,omitempty"`
	Flags         *int32                 `protobuf:"varint,3,opt,name=flags" json:"flags,omitempty"`
	Priority      *int32                 `protobuf:"varint,4,opt,name=priority" json:"priority,omitempty"`
	DtName        *string                `protobuf:"bytes,5,opt,name=dt_name,json=dtName" json:"dt_name,omitempty"`
	NumElements   *int32                 `protobuf:"varint,6,opt,name=num_elements,json=numElements" json:"num_elements,omitempty"`
	LowValue      *float32               `protobuf:"fixed32,7,opt,name=low_value,json=lowValue" json:"low_value,omitempty"`
	HighValue     *float32               `protobuf:"fixed32,8,opt,name=high_value,json=highValue" json:"high_value,omitempty"`
	NumBits       *int32                 `protobuf:"varint,9,opt,name=num_bits,json=numBits" json:"num_bits,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_SendTableSendpropT) Reset() {
	*x = CSVCMsg_SendTableSendpropT{}
	mi := &file_s2_netmessages_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_SendTableSendpropT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_SendTableSendpropT) ProtoMessage() {}

func (x *CSVCMsg_SendTableSendpropT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_SendTableSendpropT.ProtoReflect.Descriptor instead.
func (*CSVCMsg_SendTableSendpropT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{36, 0}
}

func (x *CSVCMsg_SendTableSendpropT) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CSVCMsg_SendTableSendpropT) GetVarName() string {
	if x != nil && x.VarName != nil {
		return *x.VarName
	}
	return ""
}

func (x *CSVCMsg_SendTableSendpropT) GetFlags() int32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CSVCMsg_SendTableSendpropT) GetPriority() int32 {
	if x != nil && x.Priority != nil {
		return *x.Priority
	}
	return 0
}

func (x *CSVCMsg_SendTableSendpropT) GetDtName() string {
	if x != nil && x.DtName != nil {
		return *x.DtName
	}
	return ""
}

func (x *CSVCMsg_SendTableSendpropT) GetNumElements() int32 {
	if x != nil && x.NumElements != nil {
		return *x.NumElements
	}
	return 0
}

func (x *CSVCMsg_SendTableSendpropT) GetLowValue() float32 {
	if x != nil && x.LowValue != nil {
		return *x.LowValue
	}
	return 0
}

func (x *CSVCMsg_SendTableSendpropT) GetHighValue() float32 {
	if x != nil && x.HighValue != nil {
		return *x.HighValue
	}
	return 0
}

func (x *CSVCMsg_SendTableSendpropT) GetNumBits() int32 {
	if x != nil && x.NumBits != nil {
		return *x.NumBits
	}
	return 0
}

type CSVCMsg_GameEventListKeyT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *int32                 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_GameEventListKeyT) Reset() {
	*x = CSVCMsg_GameEventListKeyT{}
	mi := &file_s2_netmessages_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_GameEventListKeyT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_GameEventListKeyT) ProtoMessage() {}

func (x *CSVCMsg_GameEventListKeyT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_GameEventListKeyT.ProtoReflect.Descriptor instead.
func (*CSVCMsg_GameEventListKeyT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{37, 0}
}

func (x *CSVCMsg_GameEventListKeyT) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CSVCMsg_GameEventListKeyT) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CSVCMsg_GameEventListDescriptorT struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Eventid       *int32                       `protobuf:"varint,1,opt,name=eventid" json:"eventid,omitempty"`
	Name          *string                      `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Keys          []*CSVCMsg_GameEventListKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_GameEventListDescriptorT) Reset() {
	*x = CSVCMsg_GameEventListDescriptorT{}
	mi := &file_s2_netmessages_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_GameEventListDescriptorT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_GameEventListDescriptorT) ProtoMessage() {}

func (x *CSVCMsg_GameEventListDescriptorT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_GameEventListDescriptorT.ProtoReflect.Descriptor instead.
func (*CSVCMsg_GameEventListDescriptorT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{37, 1}
}

func (x *CSVCMsg_GameEventListDescriptorT) GetEventid() int32 {
	if x != nil && x.Eventid != nil {
		return *x.Eventid
	}
	return 0
}

func (x *CSVCMsg_GameEventListDescriptorT) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CSVCMsg_GameEventListDescriptorT) GetKeys() []*CSVCMsg_GameEventListKeyT {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CSVCMsg_PacketEntitiesAlternateBaselineT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EntityIndex   *int32                 `protobuf:"varint,1,opt,name=entity_index,json=entityIndex" json:"entity_index,omitempty"`
	BaselineIndex *int32                 `protobuf:"varint,2,opt,name=baseline_index,json=baselineIndex" json:"baseline_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_PacketEntitiesAlternateBaselineT) Reset() {
	*x = CSVCMsg_PacketEntitiesAlternateBaselineT{}
	mi := &file_s2_netmessages_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_PacketEntitiesAlternateBaselineT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_PacketEntitiesAlternateBaselineT) ProtoMessage() {}

func (x *CSVCMsg_PacketEntitiesAlternateBaselineT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_PacketEntitiesAlternateBaselineT.ProtoReflect.Descriptor instead.
func (*CSVCMsg_PacketEntitiesAlternateBaselineT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{38, 0}
}

func (x *CSVCMsg_PacketEntitiesAlternateBaselineT) GetEntityIndex() int32 {
	if x != nil && x.EntityIndex != nil {
		return *x.EntityIndex
	}
	return 0
}

func (x *CSVCMsg_PacketEntitiesAlternateBaselineT) GetBaselineIndex() int32 {
	if x != nil && x.BaselineIndex != nil {
		return *x.BaselineIndex
	}
	return 0
}

type CSVCMsg_PacketEntitiesNonTransmittedEntitiesT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HeaderCount   *int32                 `protobuf:"varint,1,opt,name=header_count,json=headerCount" json:"header_count,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_PacketEntitiesNonTransmittedEntitiesT) Reset() {
	*x = CSVCMsg_PacketEntitiesNonTransmittedEntitiesT{}
	mi := &file_s2_netmessages_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_PacketEntitiesNonTransmittedEntitiesT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_PacketEntitiesNonTransmittedEntitiesT) ProtoMessage() {}

func (x *CSVCMsg_PacketEntitiesNonTransmittedEntitiesT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_PacketEntitiesNonTransmittedEntitiesT.ProtoReflect.Descriptor instead.
func (*CSVCMsg_PacketEntitiesNonTransmittedEntitiesT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{38, 1}
}

func (x *CSVCMsg_PacketEntitiesNonTransmittedEntitiesT) GetHeaderCount() int32 {
	if x != nil && x.HeaderCount != nil {
		return *x.HeaderCount
	}
	return 0
}

func (x *CSVCMsg_PacketEntitiesNonTransmittedEntitiesT) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         *int32                 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT) Reset() {
	*x = CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT{}
	mi := &file_s2_netmessages_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT) ProtoMessage() {}

func (x *CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT.ProtoReflect.Descriptor instead.
func (*CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{38, 2}
}

func (x *CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type ProtoFlattenedSerializerFieldTPolymorphicFieldT struct {
	state                             protoimpl.MessageState `protogen:"open.v1"`
	PolymorphicFieldSerializerNameSym *int32                 `protobuf:"varint,1,opt,name=polymorphic_field_serializer_name_sym,json=polymorphicFieldSerializerNameSym" json:"polymorphic_field_serializer_name_sym,omitempty"`
	PolymorphicFieldSerializerVersion *int32                 `protobuf:"varint,2,opt,name=polymorphic_field_serializer_version,json=polymorphicFieldSerializerVersion" json:"polymorphic_field_serializer_version,omitempty"`
	unknownFields                     protoimpl.UnknownFields
	sizeCache                         protoimpl.SizeCache
}

func (x *ProtoFlattenedSerializerFieldTPolymorphicFieldT) Reset() {
	*x = ProtoFlattenedSerializerFieldTPolymorphicFieldT{}
	mi := &file_s2_netmessages_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProtoFlattenedSerializerFieldTPolymorphicFieldT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFlattenedSerializerFieldTPolymorphicFieldT) ProtoMessage() {}

func (x *ProtoFlattenedSerializerFieldTPolymorphicFieldT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFlattenedSerializerFieldTPolymorphicFieldT.ProtoReflect.Descriptor instead.
func (*ProtoFlattenedSerializerFieldTPolymorphicFieldT) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{53, 0}
}

func (x *ProtoFlattenedSerializerFieldTPolymorphicFieldT) GetPolymorphicFieldSerializerNameSym() int32 {
	if x != nil && x.PolymorphicFieldSerializerNameSym != nil {
		return *x.PolymorphicFieldSerializerNameSym
	}
	return 0
}

func (x *ProtoFlattenedSerializerFieldTPolymorphicFieldT) GetPolymorphicFieldSerializerVersion() int32 {
	if x != nil && x.PolymorphicFieldSerializerVersion != nil {
		return *x.PolymorphicFieldSerializerVersion
	}
	return 0
}

type CMsgServerNetworkStats_Port struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Port          *int32                 `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
	Name          *string                `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgServerNetworkStats_Port) Reset() {
	*x = CMsgServerNetworkStats_Port{}
	mi := &file_s2_netmessages_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgServerNetworkStats_Port) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgServerNetworkStats_Port) ProtoMessage() {}

func (x *CMsgServerNetworkStats_Port) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgServerNetworkStats_Port.ProtoReflect.Descriptor instead.
func (*CMsgServerNetworkStats_Port) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{60, 0}
}

func (x *CMsgServerNetworkStats_Port) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

func (x *CMsgServerNetworkStats_Port) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type CMsgServerNetworkStats_Player struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Steamid         *uint64                `protobuf:"varint,1,opt,name=steamid" json:"steamid,omitempty"`
	RemoteAddr      *string                `protobuf:"bytes,2,opt,name=remote_addr,json=remoteAddr" json:"remote_addr,omitempty"`
	PingAvgMs       *int32                 `protobuf:"varint,4,opt,name=ping_avg_ms,json=pingAvgMs" json:"ping_avg_ms,omitempty"`
	PacketLossPct   *float32               `protobuf:"fixed32,5,opt,name=packet_loss_pct,json=packetLossPct" json:"packet_loss_pct,omitempty"`
	IsBot           *bool                  `protobuf:"varint,6,opt,name=is_bot,json=isBot" json:"is_bot,omitempty"`
	LossIn          *float32               `protobuf:"fixed32,7,opt,name=loss_in,json=lossIn" json:"loss_in,omitempty"`
	LossOut         *float32               `protobuf:"fixed32,8,opt,name=loss_out,json=lossOut" json:"loss_out,omitempty"`
	EngineLatencyMs *int32                 `protobuf:"varint,9,opt,name=engine_latency_ms,json=engineLatencyMs" json:"engine_latency_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CMsgServerNetworkStats_Player) Reset() {
	*x = CMsgServerNetworkStats_Player{}
	mi := &file_s2_netmessages_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgServerNetworkStats_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgServerNetworkStats_Player) ProtoMessage() {}

func (x *CMsgServerNetworkStats_Player) ProtoReflect() protoreflect.Message {
	mi := &file_s2_netmessages_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgServerNetworkStats_Player.ProtoReflect.Descriptor instead.
func (*CMsgServerNetworkStats_Player) Descriptor() ([]byte, []int) {
	return file_s2_netmessages_proto_rawDescGZIP(), []int{60, 1}
}

func (x *CMsgServerNetworkStats_Player) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgServerNetworkStats_Player) GetRemoteAddr() string {
	if x != nil && x.RemoteAddr != nil {
		return *x.RemoteAddr
	}
	return ""
}

func (x *CMsgServerNetworkStats_Player) GetPingAvgMs() int32 {
	if x != nil && x.PingAvgMs != nil {
		return *x.PingAvgMs
	}
	return 0
}

func (x *CMsgServerNetworkStats_Player) GetPacketLossPct() float32 {
	if x != nil && x.PacketLossPct != nil {
		return *x.PacketLossPct
	}
	return 0
}

func (x *CMsgServerNetworkStats_Player) GetIsBot() bool {
	if x != nil && x.IsBot != nil {
		return *x.IsBot
	}
	return false
}

func (x *CMsgServerNetworkStats_Player) GetLossIn() float32 {
	if x != nil && x.LossIn != nil {
		return *x.LossIn
	}
	return 0
}

func (x *CMsgServerNetworkStats_Player) GetLossOut() float32 {
	if x != nil && x.LossOut != nil {
		return *x.LossOut
	}
	return 0
}

func (x *CMsgServerNetworkStats_Player) GetEngineLatencyMs() int32 {
	if x != nil && x.EngineLatencyMs != nil {
		return *x.EngineLatencyMs
	}
	return 0
}

var File_s2_netmessages_proto protoreflect.FileDescriptor

const file_s2_netmessages_proto_rawDesc = "" +
	"\n" +
	"\x14s2/netmessages.proto\x12)com.github.markus_wa.demoinfocs_golang.s2\x1a\x19s2/networkbasetypes.proto\"\xb8\x01\n" +
	"\x12CCLCMsg_ClientInfo\x12$\n" +
	"\x0esend_table_crc\x18\x01 \x01(\aR\fsendTableCrc\x12!\n" +
	"\fserver_count\x18\x02 \x01(\rR\vserverCount\x12\x17\n" +
	"\ais_hltv\x18\x03 \x01(\bR\x06isHltv\x12\x1d\n" +
	"\n" +
	"friends_id\x18\x05 \x01(\rR\tfriendsId\x12!\n" +
	"\ffriends_name\x18\x06 \x01(\tR\vfriendsName\"R\n" +
	"\fCCLCMsg_Move\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12.\n" +
	"\x13last_command_number\x18\x04 \x01(\rR\x11lastCommandNumber\"\xb7\x03\n" +
	"\x0eCMsgVoiceAudio\x12l\n" +
	"\x06format\x18\x01 \x01(\x0e2<.com.github.markus_wa.demoinfocs_golang.s2.VoiceDataFormat_t:\x16VOICEDATA_FORMAT_STEAMR\x06format\x12\x1d\n" +
	"\n" +
	"voice_data\x18\x02 \x01(\fR\tvoiceData\x12%\n" +
	"\x0esequence_bytes\x18\x03 \x01(\x05R\rsequenceBytes\x12%\n" +
	"\x0esection_number\x18\x04 \x01(\rR\rsectionNumber\x12\x1f\n" +
	"\vsample_rate\x18\x05 \x01(\rR\n" +
	"sampleRate\x12<\n" +
	"\x1auncompressed_sample_offset\x18\x06 \x01(\rR\x18uncompressedSampleOffset\x12\x1f\n" +
	"\vnum_packets\x18\a \x01(\rR\n" +
	"numPackets\x12)\n" +
	"\x0epacket_offsets\x18\b \x03(\rB\x02\x10\x01R\rpacketOffsets\x12\x1f\n" +
	"\vvoice_level\x18\t \x01(\x02R\n" +
	"voiceLevel\"\x8c\x01\n" +
	"\x11CCLCMsg_VoiceData\x12O\n" +
	"\x05audio\x18\x01 \x01(\v29.com.github.markus_wa.demoinfocs_golang.s2.CMsgVoiceAudioR\x05audio\x12\x12\n" +
	"\x04xuid\x18\x02 \x01(\x06R\x04xuid\x12\x12\n" +
	"\x04tick\x18\x03 \x01(\rR\x04tick\"[\n" +
	"\x13CCLCMsg_BaselineAck\x12#\n" +
	"\rbaseline_tick\x18\x01 \x01(\x05R\fbaselineTick\x12\x1f\n" +
	"\vbaseline_nr\x18\x02 \x01(\x05R\n" +
	"baselineNr\"5\n" +
	"\x14CCLCMsg_ListenEvents\x12\x1d\n" +
	"\n" +
	"event_mask\x18\x01 \x03(\aR\teventMask\"}\n" +
	"\x18CCLCMsg_RespondCvarValue\x12\x16\n" +
	"\x06cookie\x18\x01 \x01(\x05R\x06cookie\x12\x1f\n" +
	"\vstatus_code\x18\x02 \x01(\x05R\n" +
	"statusCode\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x04 \x01(\tR\x05value\"5\n" +
	"\x17CCLCMsg_LoadingProgress\x12\x1a\n" +
	"\bprogress\x18\x01 \x01(\x05R\bprogress\"<\n" +
	"\x1aCCLCMsg_SplitPlayerConnect\x12\x1e\n" +
	"\n" +
	"playername\x18\x01 \x01(\tR\n" +
	"playername\"3\n" +
	"\x1dCCLCMsg_SplitPlayerDisconnect\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\"6\n" +
	"\x14CCLCMsg_ServerStatus\x12\x1e\n" +
	"\n" +
	"simplified\x18\x01 \x01(\bR\n" +
	"simplified\"\x9b\x01\n" +
	"\x14CCLCMsg_RequestPause\x12b\n" +
	"\n" +
	"pause_type\x18\x01 \x01(\x0e29.com.github.markus_wa.demoinfocs_golang.s2.RequestPause_t:\bRP_PAUSER\tpauseType\x12\x1f\n" +
	"\vpause_group\x18\x02 \x01(\x05R\n" +
	"pauseGroup\"1\n" +
	"\x14CCLCMsg_CmdKeyValues\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data:\x05\x80\xb5\x18\xdc\v\"1\n" +
	"\x19CCLCMsg_RconServerDetails\x12\x14\n" +
	"\x05token\x18\x01 \x01(\fR\x05token\"\xfe\x04\n" +
	"\x16CMsgSource2SystemSpecs\x12\x15\n" +
	"\x06cpu_id\x18\x01 \x01(\tR\x05cpuId\x12\x1b\n" +
	"\tcpu_brand\x18\x02 \x01(\tR\bcpuBrand\x12\x1b\n" +
	"\tcpu_model\x18\x03 \x01(\rR\bcpuModel\x12(\n" +
	"\x10cpu_num_physical\x18\x04 \x01(\rR\x0ecpuNumPhysical\x121\n" +
	"\x15ram_physical_total_mb\x18\x15 \x01(\rR\x12ramPhysicalTotalMb\x129\n" +
	"\x19gpu_rendersystem_dll_name\x18) \x01(\tR\x16gpuRendersystemDllName\x12\"\n" +
	"\rgpu_vendor_id\x18* \x01(\rR\vgpuVendorId\x12&\n" +
	"\x0fgpu_driver_name\x18+ \x01(\tR\rgpuDriverName\x125\n" +
	"\x17gpu_driver_version_high\x18, \x01(\rR\x14gpuDriverVersionHigh\x123\n" +
	"\x16gpu_driver_version_low\x18- \x01(\rR\x13gpuDriverVersionLow\x12/\n" +
	"\x14gpu_dx_support_level\x18. \x01(\rR\x11gpuDxSupportLevel\x12:\n" +
	"\x1agpu_texture_memory_size_mb\x18/ \x01(\rR\x16gpuTextureMemorySizeMb\x12)\n" +
	"\x10backbuffer_width\x183 \x01(\rR\x0fbackbufferWidth\x12+\n" +
	"\x11backbuffer_height\x184 \x01(\rR\x10backbufferHeight\"\xaa\x06\n" +
	"\x1eCMsgSource2VProfLiteReportItem\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12%\n" +
	"\x0eactive_samples\x18\x02 \x01(\rR\ractiveSamples\x124\n" +
	"\x16active_samples_1secmax\x18\x04 \x01(\rR\x14activeSamples1secmax\x12\x19\n" +
	"\busec_max\x18\x03 \x01(\rR\ausecMax\x12&\n" +
	"\x0fusec_avg_active\x18\v \x01(\rR\rusecAvgActive\x12&\n" +
	"\x0fusec_p50_active\x18\f \x01(\rR\rusecP50Active\x12&\n" +
	"\x0fusec_p99_active\x18\r \x01(\rR\rusecP99Active\x12 \n" +
	"\fusec_avg_all\x18\x15 \x01(\rR\n" +
	"usecAvgAll\x12 \n" +
	"\fusec_p50_all\x18\x16 \x01(\rR\n" +
	"usecP50All\x12 \n" +
	"\fusec_p99_all\x18\x17 \x01(\rR\n" +
	"usecP99All\x125\n" +
	"\x17usec_1secmax_avg_active\x18\x1f \x01(\rR\x14usec1secmaxAvgActive\x125\n" +
	"\x17usec_1secmax_p50_active\x18  \x01(\rR\x14usec1secmaxP50Active\x125\n" +
	"\x17usec_1secmax_p95_active\x18! \x01(\rR\x14usec1secmaxP95Active\x125\n" +
	"\x17usec_1secmax_p99_active\x18\" \x01(\rR\x14usec1secmaxP99Active\x12/\n" +
	"\x14usec_1secmax_avg_all\x18) \x01(\rR\x11usec1secmaxAvgAll\x12/\n" +
	"\x14usec_1secmax_p50_all\x18* \x01(\rR\x11usec1secmaxP50All\x12/\n" +
	"\x14usec_1secmax_p95_all\x18+ \x01(\rR\x11usec1secmaxP95All\x12/\n" +
	"\x14usec_1secmax_p99_all\x18, \x01(\rR\x11usec1secmaxP99All\"\x89\x02\n" +
	"\x1aCMsgSource2VProfLiteReport\x12_\n" +
	"\x05total\x18\x01 \x01(\v2I.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReportItemR\x05total\x12_\n" +
	"\x05items\x18\x02 \x03(\v2I.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReportItemR\x05items\x12)\n" +
	"\x10discarded_frames\x18\x03 \x01(\rR\x0fdiscardedFrames\"\x8c\x10\n" +
	"\x1dCMsgSource2NetworkFlowQuality\x12\x1a\n" +
	"\bduration\x18\x01 \x01(\rR\bduration\x12\x1f\n" +
	"\vbytes_total\x18\x05 \x01(\x04R\n" +
	"bytesTotal\x120\n" +
	"\x14bytes_total_reliable\x18\x06 \x01(\x04R\x12bytesTotalReliable\x12*\n" +
	"\x11bytes_total_voice\x18\a \x01(\x04R\x0fbytesTotalVoice\x12\"\n" +
	"\rbytes_sec_p95\x18\n" +
	" \x01(\rR\vbytesSecP95\x12\"\n" +
	"\rbytes_sec_p99\x18\v \x01(\rR\vbytesSecP99\x12)\n" +
	"\x10enginemsgs_total\x18\x14 \x01(\rR\x0fenginemsgsTotal\x12,\n" +
	"\x12enginemsgs_sec_p95\x18\x15 \x01(\rR\x10enginemsgsSecP95\x12,\n" +
	"\x12enginemsgs_sec_p99\x18\x16 \x01(\rR\x10enginemsgsSecP99\x12'\n" +
	"\x0fnetframes_total\x18\x1e \x01(\rR\x0enetframesTotal\x12+\n" +
	"\x11netframes_dropped\x18\x1f \x01(\rR\x10netframesDropped\x121\n" +
	"\x14netframes_outoforder\x18  \x01(\rR\x13netframesOutoforder\x12;\n" +
	"\x1anetframes_size_exceeds_mtu\x18\" \x01(\rR\x17netframesSizeExceedsMtu\x12,\n" +
	"\x12netframes_size_p95\x18# \x01(\rR\x10netframesSizeP95\x12,\n" +
	"\x12netframes_size_p99\x18$ \x01(\rR\x10netframesSizeP99\x12\x1f\n" +
	"\vticks_total\x18( \x01(\rR\n" +
	"ticksTotal\x12\x1d\n" +
	"\n" +
	"ticks_good\x18) \x01(\rR\tticksGood\x123\n" +
	"\x16ticks_good_almost_late\x18* \x01(\rR\x13ticksGoodAlmostLate\x12.\n" +
	"\x13ticks_fixed_dropped\x18+ \x01(\rR\x11ticksFixedDropped\x12(\n" +
	"\x10ticks_fixed_late\x18, \x01(\rR\x0eticksFixedLate\x12*\n" +
	"\x11ticks_bad_dropped\x18- \x01(\rR\x0fticksBadDropped\x12$\n" +
	"\x0eticks_bad_late\x18. \x01(\rR\fticksBadLate\x12&\n" +
	"\x0fticks_bad_other\x18/ \x01(\rR\rticksBadOther\x12=\n" +
	"\x1btick_missrate_samples_total\x182 \x01(\rR\x18tickMissrateSamplesTotal\x12A\n" +
	"\x1dtick_missrate_samples_perfect\x183 \x01(\rR\x1atickMissrateSamplesPerfect\x12G\n" +
	" tick_missrate_samples_perfectnet\x184 \x01(\rR\x1dtickMissrateSamplesPerfectnet\x127\n" +
	"\x18tick_missratenet_p75_x10\x185 \x01(\rR\x15tickMissratenetP75X10\x127\n" +
	"\x18tick_missratenet_p95_x10\x186 \x01(\rR\x15tickMissratenetP95X10\x127\n" +
	"\x18tick_missratenet_p99_x10\x187 \x01(\rR\x15tickMissratenetP99X10\x12#\n" +
	"\rrecvmargin_p1\x18= \x01(\x11R\frecvmarginP1\x12#\n" +
	"\rrecvmargin_p5\x18> \x01(\x11R\frecvmarginP5\x12%\n" +
	"\x0erecvmargin_p25\x18? \x01(\x11R\rrecvmarginP25\x12%\n" +
	"\x0erecvmargin_p50\x18@ \x01(\x11R\rrecvmarginP50\x12%\n" +
	"\x0erecvmargin_p75\x18A \x01(\x11R\rrecvmarginP75\x12%\n" +
	"\x0erecvmargin_p95\x18B \x01(\x11R\rrecvmarginP95\x12.\n" +
	"\x13netframe_jitter_p50\x18F \x01(\rR\x11netframeJitterP50\x12.\n" +
	"\x13netframe_jitter_p99\x18G \x01(\rR\x11netframeJitterP99\x126\n" +
	"\x17interval_peakjitter_p50\x18H \x01(\rR\x15intervalPeakjitterP50\x126\n" +
	"\x17interval_peakjitter_p95\x18I \x01(\rR\x15intervalPeakjitterP95\x12B\n" +
	"\x1epacket_misdelivery_rate_p50_x4\x18J \x01(\rR\x1apacketMisdeliveryRateP50X4\x12B\n" +
	"\x1epacket_misdelivery_rate_p95_x4\x18K \x01(\rR\x1apacketMisdeliveryRateP95X4\x12\x1e\n" +
	"\vnet_ping_p5\x18P \x01(\rR\tnetPingP5\x12 \n" +
	"\fnet_ping_p50\x18Q \x01(\rR\n" +
	"netPingP50\x12 \n" +
	"\fnet_ping_p95\x18R \x01(\rR\n" +
	"netPingP95\"\x88\x03\n" +
	"\x1dCMsgSource2PerfIntervalSample\x12)\n" +
	"\x11frame_time_max_ms\x18\x01 \x01(\x02R\x0eframeTimeMaxMs\x12)\n" +
	"\x11frame_time_avg_ms\x18\x02 \x01(\x02R\x0eframeTimeAvgMs\x12)\n" +
	"\x11frame_time_min_ms\x18\x03 \x01(\x02R\x0eframeTimeMinMs\x12\x1f\n" +
	"\vframe_count\x18\x04 \x01(\x05R\n" +
	"frameCount\x12-\n" +
	"\x13frame_time_total_ms\x18\x05 \x01(\x02R\x10frameTimeTotalMs\x12`\n" +
	"\x04tags\x18\x06 \x03(\v2L.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2PerfIntervalSample.TagR\x04tags\x1a4\n" +
	"\x03Tag\x12\x10\n" +
	"\x03tag\x18\x01 \x01(\tR\x03tag\x12\x1b\n" +
	"\tmax_value\x18\x02 \x01(\rR\bmaxValue\"\xbb\x04\n" +
	"\x12CCLCMsg_Diagnostic\x12d\n" +
	"\fsystem_specs\x18\x01 \x01(\v2A.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2SystemSpecsR\vsystemSpecs\x12h\n" +
	"\fvprof_report\x18\x02 \x01(\v2E.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReportR\vvprofReport\x12q\n" +
	"\x0fdownstream_flow\x18\x03 \x01(\v2H.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2NetworkFlowQualityR\x0edownstreamFlow\x12m\n" +
	"\rupstream_flow\x18\x04 \x01(\v2H.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2NetworkFlowQualityR\fupstreamFlow\x12k\n" +
	"\fperf_samples\x18\x05 \x03(\v2H.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2PerfIntervalSampleR\vperfSamples:\x06\x80\xb5\x18\x80\x80\x01\"\xfe\a\n" +
	"-CSource2Metrics_MatchPerfSummary_Notification\x12\x14\n" +
	"\x05appid\x18\x01 \x01(\rR\x05appid\x12\x1b\n" +
	"\tgame_mode\x18\x02 \x01(\tR\bgameMode\x12&\n" +
	"\x0fserver_build_id\x18\x03 \x01(\rR\rserverBuildId\x12!\n" +
	"\fserver_popid\x18\x04 \x01(\aR\vserverPopid\x12l\n" +
	"\x0eserver_profile\x18\n" +
	" \x01(\v2E.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReportR\rserverProfile\x12y\n" +
	"\aclients\x18\v \x03(\v2_.com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.ClientR\aclients\x12\x10\n" +
	"\x03map\x18\x14 \x01(\tR\x03map\x1a\xd3\x04\n" +
	"\x06Client\x12d\n" +
	"\fsystem_specs\x18\x01 \x01(\v2A.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2SystemSpecsR\vsystemSpecs\x12_\n" +
	"\aprofile\x18\x02 \x01(\v2E.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReportR\aprofile\x12\x19\n" +
	"\bbuild_id\x18\x03 \x01(\rR\abuildId\x12q\n" +
	"\x0fdownstream_flow\x18\x04 \x01(\v2H.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2NetworkFlowQualityR\x0edownstreamFlow\x12m\n" +
	"\rupstream_flow\x18\x05 \x01(\v2H.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2NetworkFlowQualityR\fupstreamFlow\x12\x18\n" +
	"\asteamid\x18\n" +
	" \x01(\x06R\asteamid\x12k\n" +
	"\fperf_samples\x18\v \x03(\v2H.com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2PerfIntervalSampleR\vperfSamples\"\xf4\x04\n" +
	"\x12CSVCMsg_ServerInfo\x12\x1a\n" +
	"\bprotocol\x18\x01 \x01(\x05R\bprotocol\x12!\n" +
	"\fserver_count\x18\x02 \x01(\x05R\vserverCount\x12!\n" +
	"\fis_dedicated\x18\x03 \x01(\bR\visDedicated\x12\x17\n" +
	"\ais_hltv\x18\x04 \x01(\bR\x06isHltv\x12\x11\n" +
	"\x04c_os\x18\x06 \x01(\x05R\x03cOs\x12\x1f\n" +
	"\vmax_clients\x18\n" +
	" \x01(\x05R\n" +
	"maxClients\x12\x1f\n" +
	"\vmax_classes\x18\v \x01(\x05R\n" +
	"maxClasses\x12#\n" +
	"\vplayer_slot\x18\f \x01(\x05:\x02-1R\n" +
	"playerSlot\x12#\n" +
	"\rtick_interval\x18\r \x01(\x02R\ftickInterval\x12\x19\n" +
	"\bgame_dir\x18\x0e \x01(\tR\agameDir\x12\x19\n" +
	"\bmap_name\x18\x0f \x01(\tR\amapName\x12\x19\n" +
	"\bsky_name\x18\x10 \x01(\tR\askyName\x12\x1b\n" +
	"\thost_name\x18\x11 \x01(\tR\bhostName\x12\x1d\n" +
	"\n" +
	"addon_name\x18\x12 \x01(\tR\taddonName\x12{\n" +
	"\x13game_session_config\x18\x13 \x01(\v2K.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameSessionConfigurationR\x11gameSessionConfig\x122\n" +
	"\x15game_session_manifest\x18\x14 \x01(\fR\x13gameSessionManifest:\x06\x80\xb5\x18\x80\xa0\x06\"\xe2\x01\n" +
	"\x11CSVCMsg_ClassInfo\x12(\n" +
	"\x10create_on_client\x18\x01 \x01(\bR\x0ecreateOnClient\x12^\n" +
	"\aclasses\x18\x02 \x03(\v2D.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_ClassInfo.class_tR\aclasses\x1aC\n" +
	"\aclass_t\x12\x19\n" +
	"\bclass_id\x18\x01 \x01(\x05R\aclassId\x12\x1d\n" +
	"\n" +
	"class_name\x18\x03 \x01(\tR\tclassName\"*\n" +
	"\x10CSVCMsg_SetPause\x12\x16\n" +
	"\x06paused\x18\x01 \x01(\bR\x06paused\"`\n" +
	"\x11CSVCMsg_VoiceInit\x12\x18\n" +
	"\aquality\x18\x01 \x01(\x05R\aquality\x12\x14\n" +
	"\x05codec\x18\x02 \x01(\tR\x05codec\x12\x1b\n" +
	"\aversion\x18\x03 \x01(\x05:\x010R\aversion\"#\n" +
	"\rCSVCMsg_Print\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\"\xf6\x05\n" +
	"\x0eCSVCMsg_Sounds\x12%\n" +
	"\x0ereliable_sound\x18\x01 \x01(\bR\rreliableSound\x12]\n" +
	"\x06sounds\x18\x02 \x03(\v2E.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Sounds.sounddata_tR\x06sounds\x1a\xdd\x04\n" +
	"\vsounddata_t\x12\x19\n" +
	"\borigin_x\x18\x01 \x01(\x11R\aoriginX\x12\x19\n" +
	"\borigin_y\x18\x02 \x01(\x11R\aoriginY\x12\x19\n" +
	"\borigin_z\x18\x03 \x01(\x11R\aoriginZ\x12\x16\n" +
	"\x06volume\x18\x04 \x01(\rR\x06volume\x12\x1f\n" +
	"\vdelay_value\x18\x05 \x01(\x02R\n" +
	"delayValue\x12'\n" +
	"\x0fsequence_number\x18\x06 \x01(\x05R\x0esequenceNumber\x12%\n" +
	"\fentity_index\x18\a \x01(\x05:\x02-1R\ventityIndex\x12\x18\n" +
	"\achannel\x18\b \x01(\x05R\achannel\x12\x14\n" +
	"\x05pitch\x18\t \x01(\x05R\x05pitch\x12\x14\n" +
	"\x05flags\x18\n" +
	" \x01(\x05R\x05flags\x12\x1b\n" +
	"\tsound_num\x18\v \x01(\rR\bsoundNum\x12(\n" +
	"\x10sound_num_handle\x18\f \x01(\aR\x0esoundNumHandle\x12%\n" +
	"\x0espeaker_entity\x18\r \x01(\x05R\rspeakerEntity\x12\x1f\n" +
	"\vrandom_seed\x18\x0e \x01(\x05R\n" +
	"randomSeed\x12\x1f\n" +
	"\vsound_level\x18\x0f \x01(\x05R\n" +
	"soundLevel\x12\x1f\n" +
	"\vis_sentence\x18\x10 \x01(\bR\n" +
	"isSentence\x12\x1d\n" +
	"\n" +
	"is_ambient\x18\x11 \x01(\bR\tisAmbient\x12\x12\n" +
	"\x04guid\x18\x12 \x01(\rR\x04guid\x12*\n" +
	"\x11sound_resource_id\x18\x13 \x01(\x06R\x0fsoundResourceId\"\x9c\x01\n" +
	"\x10CSVCMsg_Prefetch\x12\x1f\n" +
	"\vsound_index\x18\x01 \x01(\x05R\n" +
	"soundIndex\x12g\n" +
	"\rresource_type\x18\x02 \x01(\x0e27.com.github.markus_wa.demoinfocs_golang.s2.PrefetchType:\tPFT_SOUNDR\fresourceType\"P\n" +
	"\x0fCSVCMsg_SetView\x12%\n" +
	"\fentity_index\x18\x01 \x01(\x05:\x02-1R\ventityIndex\x12\x16\n" +
	"\x04slot\x18\x02 \x01(\x05:\x02-1R\x04slot\"{\n" +
	"\x10CSVCMsg_FixAngle\x12\x1a\n" +
	"\brelative\x18\x01 \x01(\bR\brelative\x12K\n" +
	"\x05angle\x18\x02 \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngleR\x05angle\"e\n" +
	"\x16CSVCMsg_CrosshairAngle\x12K\n" +
	"\x05angle\x18\x01 \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngleR\x05angle\"\xf6\x01\n" +
	"\x10CSVCMsg_BSPDecal\x12G\n" +
	"\x03pos\x18\x01 \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgVectorR\x03pos\x12.\n" +
	"\x13decal_texture_index\x18\x02 \x01(\x05R\x11decalTextureIndex\x12%\n" +
	"\fentity_index\x18\x03 \x01(\x05:\x02-1R\ventityIndex\x12\x1f\n" +
	"\vmodel_index\x18\x04 \x01(\x05R\n" +
	"modelIndex\x12!\n" +
	"\flow_priority\x18\x05 \x01(\bR\vlowPriority\"\xc1\x01\n" +
	"\x13CSVCMsg_SplitScreen\x12o\n" +
	"\x04type\x18\x01 \x01(\x0e2B.com.github.markus_wa.demoinfocs_golang.s2.ESplitScreenMessageType:\x17MSG_SPLITSCREEN_ADDUSERR\x04type\x12\x12\n" +
	"\x04slot\x18\x02 \x01(\x05R\x04slot\x12%\n" +
	"\fplayer_index\x18\x03 \x01(\x05:\x02-1R\vplayerIndex\"K\n" +
	"\x14CSVCMsg_GetCvarValue\x12\x16\n" +
	"\x06cookie\x18\x01 \x01(\x05R\x06cookie\x12\x1b\n" +
	"\tcvar_name\x18\x02 \x01(\tR\bcvarName\"W\n" +
	"\fCSVCMsg_Menu\x12\x1f\n" +
	"\vdialog_type\x18\x01 \x01(\x05R\n" +
	"dialogType\x12&\n" +
	"\x0fmenu_key_values\x18\x02 \x01(\fR\rmenuKeyValues\"m\n" +
	"\x13CSVCMsg_UserMessage\x12\x19\n" +
	"\bmsg_type\x18\x01 \x01(\x05R\amsgType\x12\x19\n" +
	"\bmsg_data\x18\x02 \x01(\fR\amsgData\x12 \n" +
	"\vpassthrough\x18\x03 \x01(\x05R\vpassthrough\"\xd7\x03\n" +
	"\x11CSVCMsg_SendTable\x12\x15\n" +
	"\x06is_end\x18\x01 \x01(\bR\x05isEnd\x12$\n" +
	"\x0enet_table_name\x18\x02 \x01(\tR\fnetTableName\x12#\n" +
	"\rneeds_decoder\x18\x03 \x01(\bR\fneedsDecoder\x12]\n" +
	"\x05props\x18\x04 \x03(\v2G.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_SendTable.sendprop_tR\x05props\x1a\x80\x02\n" +
	"\n" +
	"sendprop_t\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x19\n" +
	"\bvar_name\x18\x02 \x01(\tR\avarName\x12\x14\n" +
	"\x05flags\x18\x03 \x01(\x05R\x05flags\x12\x1a\n" +
	"\bpriority\x18\x04 \x01(\x05R\bpriority\x12\x17\n" +
	"\adt_name\x18\x05 \x01(\tR\x06dtName\x12!\n" +
	"\fnum_elements\x18\x06 \x01(\x05R\vnumElements\x12\x1b\n" +
	"\tlow_value\x18\a \x01(\x02R\blowValue\x12\x1d\n" +
	"\n" +
	"high_value\x18\b \x01(\x02R\thighValue\x12\x19\n" +
	"\bnum_bits\x18\t \x01(\x05R\anumBits\"\xd4\x02\n" +
	"\x15CSVCMsg_GameEventList\x12o\n" +
	"\vdescriptors\x18\x01 \x03(\v2M.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventList.descriptor_tR\vdescriptors\x1a/\n" +
	"\x05key_t\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x1a\x98\x01\n" +
	"\fdescriptor_t\x12\x18\n" +
	"\aeventid\x18\x01 \x01(\x05R\aeventid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12Z\n" +
	"\x04keys\x18\x03 \x03(\v2F.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventList.key_tR\x04keys\"\xc5\f\n" +
	"\x16CSVCMsg_PacketEntities\x12\x1f\n" +
	"\vmax_entries\x18\x01 \x01(\x05R\n" +
	"maxEntries\x12'\n" +
	"\x0fupdated_entries\x18\x02 \x01(\x05R\x0eupdatedEntries\x12&\n" +
	"\x0flegacy_is_delta\x18\x03 \x01(\bR\rlegacyIsDelta\x12'\n" +
	"\x0fupdate_baseline\x18\x04 \x01(\bR\x0eupdateBaseline\x12\x1a\n" +
	"\bbaseline\x18\x05 \x01(\x05R\bbaseline\x12\x1d\n" +
	"\n" +
	"delta_from\x18\x06 \x01(\x05R\tdeltaFrom\x12\x1f\n" +
	"\ventity_data\x18\a \x01(\fR\n" +
	"entityData\x12,\n" +
	"\x12pending_full_frame\x18\b \x01(\bR\x10pendingFullFrame\x128\n" +
	"\x18active_spawngroup_handle\x18\t \x01(\rR\x16activeSpawngroupHandle\x12F\n" +
	"\x1fmax_spawngroup_creationsequence\x18\n" +
	" \x01(\rR\x1dmaxSpawngroupCreationsequence\x127\n" +
	"\x18last_cmd_number_executed\x18\v \x01(\rR\x15lastCmdNumberExecuted\x12:\n" +
	"\x1alast_cmd_number_recv_delta\x18\x11 \x01(\x11R\x16lastCmdNumberRecvDelta\x12\x1f\n" +
	"\vserver_tick\x18\f \x01(\rR\n" +
	"serverTick\x12/\n" +
	"\x13serialized_entities\x18\r \x01(\fR\x12serializedEntities\x12\x87\x01\n" +
	"\x13alternate_baselines\x18\x0f \x03(\v2V.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.alternate_baseline_tR\x12alternateBaselines\x12<\n" +
	"\x1bhas_pvs_vis_bits_deprecated\x18\x10 \x01(\rR\x17hasPvsVisBitsDeprecated\x12*\n" +
	"\x0fcmd_recv_status\x18\x16 \x03(\x11B\x02\x10\x01R\rcmdRecvStatus\x12\x96\x01\n" +
	"\x18non_transmitted_entities\x18\x13 \x01(\v2\\.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.non_transmitted_entities_tR\x16nonTransmittedEntities\x127\n" +
	"\x18cq_starved_command_ticks\x18\x14 \x01(\rR\x15cqStarvedCommandTicks\x12;\n" +
	"\x1acq_discarded_command_ticks\x18\x15 \x01(\rR\x17cqDiscardedCommandTicks\x12\x93\x01\n" +
	"\x17outofpvs_entity_updates\x18\x17 \x01(\v2[.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.outofpvs_entity_updates_tR\x15outofpvsEntityUpdates\x12 \n" +
	"\vdev_padding\x18\xe7\a \x01(\fR\n" +
	"devPadding\x1a`\n" +
	"\x14alternate_baseline_t\x12!\n" +
	"\fentity_index\x18\x01 \x01(\x05R\ventityIndex\x12%\n" +
	"\x0ebaseline_index\x18\x02 \x01(\x05R\rbaselineIndex\x1aS\n" +
	"\x1anon_transmitted_entities_t\x12!\n" +
	"\fheader_count\x18\x01 \x01(\x05R\vheaderCount\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x1aE\n" +
	"\x19outofpvs_entity_updates_t\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data:\x04\x80\xb5\x18\x00\"t\n" +
	"\x14CSVCMsg_TempEntities\x12\x1a\n" +
	"\breliable\x18\x01 \x01(\bR\breliable\x12\x1f\n" +
	"\vnum_entries\x18\x02 \x01(\x05R\n" +
	"numEntries\x12\x1f\n" +
	"\ventity_data\x18\x03 \x01(\fR\n" +
	"entityData\"\xa1\x03\n" +
	"\x19CSVCMsg_CreateStringTable\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vnum_entries\x18\x02 \x01(\x05R\n" +
	"numEntries\x12/\n" +
	"\x14user_data_fixed_size\x18\x03 \x01(\bR\x11userDataFixedSize\x12$\n" +
	"\x0euser_data_size\x18\x04 \x01(\x05R\fuserDataSize\x12-\n" +
	"\x13user_data_size_bits\x18\x05 \x01(\x05R\x10userDataSizeBits\x12\x14\n" +
	"\x05flags\x18\x06 \x01(\x05R\x05flags\x12\x1f\n" +
	"\vstring_data\x18\a \x01(\fR\n" +
	"stringData\x12+\n" +
	"\x11uncompressed_size\x18\b \x01(\x05R\x10uncompressedSize\x12'\n" +
	"\x0fdata_compressed\x18\t \x01(\bR\x0edataCompressed\x124\n" +
	"\x16using_varint_bitcounts\x18\n" +
	" \x01(\bR\x14usingVarintBitcounts:\x06\x80\xb5\x18\x80\x80\x03\"\x8f\x01\n" +
	"\x19CSVCMsg_UpdateStringTable\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\x05R\atableId\x12.\n" +
	"\x13num_changed_entries\x18\x02 \x01(\x05R\x11numChangedEntries\x12\x1f\n" +
	"\vstring_data\x18\x03 \x01(\fR\n" +
	"stringData:\x06\x80\xb5\x18\x80\x80\x10\"\x8b\x02\n" +
	"\x11CSVCMsg_VoiceData\x12O\n" +
	"\x05audio\x18\x01 \x01(\v29.com.github.markus_wa.demoinfocs_golang.s2.CMsgVoiceAudioR\x05audio\x12\x1a\n" +
	"\x06client\x18\x02 \x01(\x05:\x02-1R\x06client\x12\x1c\n" +
	"\tproximity\x18\x03 \x01(\bR\tproximity\x12\x12\n" +
	"\x04xuid\x18\x04 \x01(\x06R\x04xuid\x12!\n" +
	"\faudible_mask\x18\x05 \x01(\x05R\vaudibleMask\x12\x12\n" +
	"\x04tick\x18\x06 \x01(\rR\x04tick\x12 \n" +
	"\vpassthrough\x18\a \x01(\x05R\vpassthrough\"f\n" +
	"\x16CSVCMsg_PacketReliable\x12\x12\n" +
	"\x04tick\x18\x01 \x01(\x05R\x04tick\x12\"\n" +
	"\fmessagessize\x18\x02 \x01(\x05R\fmessagessize\x12\x14\n" +
	"\x05state\x18\x03 \x01(\bR\x05state\"p\n" +
	"\x16CSVCMsg_FullFrameSplit\x12\x12\n" +
	"\x04tick\x18\x01 \x01(\x05R\x04tick\x12\x18\n" +
	"\asection\x18\x02 \x01(\x05R\asection\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x05R\x05total\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\"v\n" +
	"\x12CSVCMsg_HLTVStatus\x12\x16\n" +
	"\x06master\x18\x01 \x01(\tR\x06master\x12\x18\n" +
	"\aclients\x18\x02 \x01(\x05R\aclients\x12\x14\n" +
	"\x05slots\x18\x03 \x01(\x05R\x05slots\x12\x18\n" +
	"\aproxies\x18\x04 \x01(\x05R\aproxies\"2\n" +
	"\x15CSVCMsg_ServerSteamID\x12\x19\n" +
	"\bsteam_id\x18\x01 \x01(\x04R\asteamId\"*\n" +
	"\x14CSVCMsg_CmdKeyValues\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"K\n" +
	"\x19CSVCMsg_RconServerDetails\x12\x14\n" +
	"\x05token\x18\x01 \x01(\fR\x05token\x12\x18\n" +
	"\adetails\x18\x02 \x01(\tR\adetails\"T\n" +
	"\x0eCMsgIPCAddress\x12#\n" +
	"\rcomputer_guid\x18\x01 \x01(\x06R\fcomputerGuid\x12\x1d\n" +
	"\n" +
	"process_id\x18\x02 \x01(\rR\tprocessId\"\x96\x02\n" +
	"\x0eCMsgServerPeer\x12#\n" +
	"\vplayer_slot\x18\x01 \x01(\x05:\x02-1R\n" +
	"playerSlot\x12\x18\n" +
	"\asteamid\x18\x02 \x01(\x06R\asteamid\x12K\n" +
	"\x03ipc\x18\x03 \x01(\v29.com.github.markus_wa.demoinfocs_golang.s2.CMsgIPCAddressR\x03ipc\x12\"\n" +
	"\rthey_hear_you\x18\x04 \x01(\bR\vtheyHearYou\x12\"\n" +
	"\ryou_hear_them\x18\x05 \x01(\bR\vyouHearThem\x120\n" +
	"\x14is_listenserver_host\x18\x06 \x01(\bR\x12isListenserverHost\"a\n" +
	"\x10CSVCMsg_PeerList\x12M\n" +
	"\x04peer\x18\x01 \x03(\v29.com.github.markus_wa.demoinfocs_golang.s2.CMsgServerPeerR\x04peer\"l\n" +
	"\x1cCSVCMsg_ClearAllStringTables\x12\x18\n" +
	"\amapname\x18\x01 \x01(\tR\amapname\x122\n" +
	"\x15create_tables_skipped\x18\x03 \x01(\bR\x13createTablesSkipped\"\x99\x06\n" +
	"\x1fProtoFlattenedSerializerField_t\x12 \n" +
	"\fvar_type_sym\x18\x01 \x01(\x05R\n" +
	"varTypeSym\x12 \n" +
	"\fvar_name_sym\x18\x02 \x01(\x05R\n" +
	"varNameSym\x12\x1b\n" +
	"\tbit_count\x18\x03 \x01(\x05R\bbitCount\x12\x1b\n" +
	"\tlow_value\x18\x04 \x01(\x02R\blowValue\x12\x1d\n" +
	"\n" +
	"high_value\x18\x05 \x01(\x02R\thighValue\x12!\n" +
	"\fencode_flags\x18\x06 \x01(\x05R\vencodeFlags\x129\n" +
	"\x19field_serializer_name_sym\x18\a \x01(\x05R\x16fieldSerializerNameSym\x128\n" +
	"\x18field_serializer_version\x18\b \x01(\x05R\x16fieldSerializerVersion\x12\"\n" +
	"\rsend_node_sym\x18\t \x01(\x05R\vsendNodeSym\x12&\n" +
	"\x0fvar_encoder_sym\x18\n" +
	" \x01(\x05R\rvarEncoderSym\x12\x8b\x01\n" +
	"\x11polymorphic_types\x18\v \x03(\v2^.com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializerField_t.polymorphic_field_tR\x10polymorphicTypes\x12,\n" +
	"\x12var_serializer_sym\x18\f \x01(\x05R\x10varSerializerSym\x1a\xb8\x01\n" +
	"\x13polymorphic_field_t\x12P\n" +
	"%polymorphic_field_serializer_name_sym\x18\x01 \x01(\x05R!polymorphicFieldSerializerNameSym\x12O\n" +
	"$polymorphic_field_serializer_version\x18\x02 \x01(\x05R!polymorphicFieldSerializerVersion\"\x9e\x01\n" +
	"\x1aProtoFlattenedSerializer_t\x12.\n" +
	"\x13serializer_name_sym\x18\x01 \x01(\x05R\x11serializerNameSym\x12-\n" +
	"\x12serializer_version\x18\x02 \x01(\x05R\x11serializerVersion\x12!\n" +
	"\ffields_index\x18\x03 \x03(\x05R\vfieldsIndex\"\x8a\x02\n" +
	"\x1bCSVCMsg_FlattenedSerializer\x12g\n" +
	"\vserializers\x18\x01 \x03(\v2E.com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializer_tR\vserializers\x12\x18\n" +
	"\asymbols\x18\x02 \x03(\tR\asymbols\x12b\n" +
	"\x06fields\x18\x03 \x03(\v2J.com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializerField_tR\x06fields:\x04\x80\xb5\x18\x00\"'\n" +
	"\x11CSVCMsg_StopSound\x12\x12\n" +
	"\x04guid\x18\x01 \x01(\aR\x04guid\"\xb2\x01\n" +
	"\x1eCBidirMsg_RebroadcastGameEvent\x12\"\n" +
	"\fposttoserver\x18\x01 \x01(\bR\fposttoserver\x12\x18\n" +
	"\abuftype\x18\x02 \x01(\x05R\abuftype\x12&\n" +
	"\x0eclientbitcount\x18\x03 \x01(\rR\x0eclientbitcount\x12*\n" +
	"\x10receivingclients\x18\x04 \x01(\x04R\x10receivingclients\"?\n" +
	"\x1bCBidirMsg_RebroadcastSource\x12 \n" +
	"\veventsource\x18\x01 \x01(\x05R\veventsource\"\xc7\x01\n" +
	"\x19CBidirMsg_PredictionEvent\x12\x19\n" +
	"\bevent_id\x18\x01 \x02(\rR\aeventId\x12\x1d\n" +
	"\n" +
	"event_data\x18\x02 \x02(\fR\teventData\x12\x1b\n" +
	"\tsync_type\x18\x03 \x01(\rR\bsyncType\x12&\n" +
	"\x0fsync_val_uint32\x18\x04 \x01(\rR\rsyncValUint32\"+\n" +
	"\tESyncType\x12\v\n" +
	"\aST_Tick\x10\x00\x12\x11\n" +
	"\rST_UserCmdNum\x10\x01\"\xaf\n" +
	"\n" +
	"\x16CMsgServerNetworkStats\x12\x1c\n" +
	"\tdedicated\x18\x01 \x01(\bR\tdedicated\x12\x1b\n" +
	"\tcpu_usage\x18\x02 \x01(\x05R\bcpuUsage\x12$\n" +
	"\x0ememory_used_mb\x18\x03 \x01(\x05R\fmemoryUsedMb\x12$\n" +
	"\x0ememory_free_mb\x18\x04 \x01(\x05R\fmemoryFreeMb\x12\x16\n" +
	"\x06uptime\x18\x05 \x01(\x05R\x06uptime\x12\x1f\n" +
	"\vspawn_count\x18\x06 \x01(\x05R\n" +
	"spawnCount\x12\x1f\n" +
	"\vnum_clients\x18\b \x01(\x05R\n" +
	"numClients\x12\x19\n" +
	"\bnum_bots\x18\t \x01(\x05R\anumBots\x12%\n" +
	"\x0enum_spectators\x18\n" +
	" \x01(\x05R\rnumSpectators\x12\"\n" +
	"\rnum_tv_relays\x18\v \x01(\x05R\vnumTvRelays\x12\x10\n" +
	"\x03fps\x18\f \x01(\x02R\x03fps\x12\\\n" +
	"\x05ports\x18\x11 \x03(\v2F.com.github.markus_wa.demoinfocs_golang.s2.CMsgServerNetworkStats.PortR\x05ports\x12\x1e\n" +
	"\vavg_ping_ms\x18\x12 \x01(\x02R\tavgPingMs\x123\n" +
	"\x16avg_engine_latency_out\x18\x13 \x01(\x02R\x13avgEngineLatencyOut\x12&\n" +
	"\x0favg_packets_out\x18\x14 \x01(\x02R\ravgPacketsOut\x12$\n" +
	"\x0eavg_packets_in\x18\x15 \x01(\x02R\favgPacketsIn\x12 \n" +
	"\favg_loss_out\x18\x16 \x01(\x02R\n" +
	"avgLossOut\x12\x1e\n" +
	"\vavg_loss_in\x18\x17 \x01(\x02R\tavgLossIn\x12 \n" +
	"\favg_data_out\x18\x18 \x01(\x02R\n" +
	"avgDataOut\x12\x1e\n" +
	"\vavg_data_in\x18\x19 \x01(\x02R\tavgDataIn\x12\"\n" +
	"\rtotal_data_in\x18\x1a \x01(\x04R\vtotalDataIn\x12(\n" +
	"\x10total_packets_in\x18\x1b \x01(\x04R\x0etotalPacketsIn\x12$\n" +
	"\x0etotal_data_out\x18\x1c \x01(\x04R\ftotalDataOut\x12*\n" +
	"\x11total_packets_out\x18\x1d \x01(\x04R\x0ftotalPacketsOut\x12b\n" +
	"\aplayers\x18\x1e \x03(\v2H.com.github.markus_wa.demoinfocs_golang.s2.CMsgServerNetworkStats.PlayerR\aplayers\x1a.\n" +
	"\x04Port\x12\x12\n" +
	"\x04port\x18\x01 \x01(\x05R\x04port\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x1a\x82\x02\n" +
	"\x06Player\x12\x18\n" +
	"\asteamid\x18\x01 \x01(\x04R\asteamid\x12\x1f\n" +
	"\vremote_addr\x18\x02 \x01(\tR\n" +
	"remoteAddr\x12\x1e\n" +
	"\vping_avg_ms\x18\x04 \x01(\x05R\tpingAvgMs\x12&\n" +
	"\x0fpacket_loss_pct\x18\x05 \x01(\x02R\rpacketLossPct\x12\x15\n" +
	"\x06is_bot\x18\x06 \x01(\bR\x05isBot\x12\x17\n" +
	"\aloss_in\x18\a \x01(\x02R\x06lossIn\x12\x19\n" +
	"\bloss_out\x18\b \x01(\x02R\alossOut\x12*\n" +
	"\x11engine_latency_ms\x18\t \x01(\x05R\x0fengineLatencyMs\"\xd1\x02\n" +
	"\x12CSVCMsg_HltvReplay\x12\x14\n" +
	"\x05delay\x18\x01 \x01(\x05R\x05delay\x12)\n" +
	"\x0eprimary_target\x18\x02 \x01(\x05:\x02-1R\rprimaryTarget\x12$\n" +
	"\x0ereplay_stop_at\x18\x03 \x01(\x05R\freplayStopAt\x12&\n" +
	"\x0freplay_start_at\x18\x04 \x01(\x05R\rreplayStartAt\x122\n" +
	"\x15replay_slowdown_begin\x18\x05 \x01(\x05R\x13replaySlowdownBegin\x12.\n" +
	"\x13replay_slowdown_end\x18\x06 \x01(\x05R\x11replaySlowdownEnd\x120\n" +
	"\x14replay_slowdown_rate\x18\a \x01(\x02R\x12replaySlowdownRate\x12\x16\n" +
	"\x06reason\x18\b \x01(\x05R\x06reason\"\xc6\x01\n" +
	"\x12CCLCMsg_HltvReplay\x12\x18\n" +
	"\arequest\x18\x01 \x01(\x05R\arequest\x12'\n" +
	"\x0fslowdown_length\x18\x02 \x01(\x02R\x0eslowdownLength\x12#\n" +
	"\rslowdown_rate\x18\x03 \x01(\x02R\fslowdownRate\x12)\n" +
	"\x0eprimary_target\x18\x04 \x01(\x05:\x02-1R\rprimaryTarget\x12\x1d\n" +
	"\n" +
	"event_time\x18\x05 \x01(\x02R\teventTime\"-\n" +
	"\x19CSVCMsg_Broadcast_Command\x12\x10\n" +
	"\x03cmd\x18\x01 \x01(\tR\x03cmd\"\xd0\x03\n" +
	"\x1dCCLCMsg_HltvFixupOperatorTick\x12\x12\n" +
	"\x04tick\x18\x01 \x01(\x05R\x04tick\x12\x1d\n" +
	"\n" +
	"props_data\x18\x02 \x01(\fR\tpropsData\x12M\n" +
	"\x06origin\x18\x03 \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgVectorR\x06origin\x12T\n" +
	"\n" +
	"eye_angles\x18\x04 \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngleR\teyeAngles\x12#\n" +
	"\robserver_mode\x18\x05 \x01(\x05R\fobserverMode\x121\n" +
	"\x14cameraman_scoreboard\x18\x06 \x01(\bR\x13cameramanScoreboard\x12'\n" +
	"\x0fobserver_target\x18\a \x01(\x05R\x0eobserverTarget\x12V\n" +
	"\vview_offset\x18\b \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgVectorR\n" +
	"viewOffset\"k\n" +
	"\x1fCSVCMsg_HltvFixupOperatorStatus\x12\x12\n" +
	"\x04mode\x18\x01 \x01(\rR\x04mode\x124\n" +
	"\x16override_operator_name\x18\x02 \x01(\tR\x14overrideOperatorName\"\xbe\x01\n" +
	"\x11CMsgServerUserCmd\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1d\n" +
	"\n" +
	"cmd_number\x18\x02 \x01(\x05R\tcmdNumber\x12#\n" +
	"\vplayer_slot\x18\x03 \x01(\x05:\x02-1R\n" +
	"playerSlot\x120\n" +
	"\x14server_tick_executed\x18\x04 \x01(\x05R\x12serverTickExecuted\x12\x1f\n" +
	"\vclient_tick\x18\x05 \x01(\x05R\n" +
	"clientTick\"p\n" +
	"\x14CSVCMsg_UserCommands\x12X\n" +
	"\bcommands\x18\x01 \x03(\v2<.com.github.markus_wa.demoinfocs_golang.s2.CMsgServerUserCmdR\bcommands*\xcb\x02\n" +
	"\fCLC_Messages\x12\x12\n" +
	"\x0eclc_ClientInfo\x10\x14\x12\f\n" +
	"\bclc_Move\x10\x15\x12\x11\n" +
	"\rclc_VoiceData\x10\x16\x12\x13\n" +
	"\x0fclc_BaselineAck\x10\x17\x12\x18\n" +
	"\x14clc_RespondCvarValue\x10\x19\x12\x17\n" +
	"\x13clc_LoadingProgress\x10\x1b\x12\x1a\n" +
	"\x16clc_SplitPlayerConnect\x10\x1c\x12\x1d\n" +
	"\x19clc_SplitPlayerDisconnect\x10\x1e\x12\x14\n" +
	"\x10clc_ServerStatus\x10\x1f\x12\x14\n" +
	"\x10clc_RequestPause\x10!\x12\x14\n" +
	"\x10clc_CmdKeyValues\x10\"\x12\x19\n" +
	"\x15clc_RconServerDetails\x10#\x12\x12\n" +
	"\x0eclc_HltvReplay\x10$\x12\x12\n" +
	"\x0eclc_Diagnostic\x10%*\x97\x05\n" +
	"\fSVC_Messages\x12\x12\n" +
	"\x0esvc_ServerInfo\x10(\x12\x1b\n" +
	"\x17svc_FlattenedSerializer\x10)\x12\x11\n" +
	"\rsvc_ClassInfo\x10*\x12\x10\n" +
	"\fsvc_SetPause\x10+\x12\x19\n" +
	"\x15svc_CreateStringTable\x10,\x12\x19\n" +
	"\x15svc_UpdateStringTable\x10-\x12\x11\n" +
	"\rsvc_VoiceInit\x10.\x12\x11\n" +
	"\rsvc_VoiceData\x10/\x12\r\n" +
	"\tsvc_Print\x100\x12\x0e\n" +
	"\n" +
	"svc_Sounds\x101\x12\x0f\n" +
	"\vsvc_SetView\x102\x12\x1c\n" +
	"\x18svc_ClearAllStringTables\x103\x12\x14\n" +
	"\x10svc_CmdKeyValues\x104\x12\x10\n" +
	"\fsvc_BSPDecal\x105\x12\x13\n" +
	"\x0fsvc_SplitScreen\x106\x12\x16\n" +
	"\x12svc_PacketEntities\x107\x12\x10\n" +
	"\fsvc_Prefetch\x108\x12\f\n" +
	"\bsvc_Menu\x109\x12\x14\n" +
	"\x10svc_GetCvarValue\x10:\x12\x11\n" +
	"\rsvc_StopSound\x10;\x12\x10\n" +
	"\fsvc_PeerList\x10<\x12\x16\n" +
	"\x12svc_PacketReliable\x10=\x12\x12\n" +
	"\x0esvc_HLTVStatus\x10>\x12\x15\n" +
	"\x11svc_ServerSteamID\x10?\x12\x16\n" +
	"\x12svc_FullFrameSplit\x10F\x12\x19\n" +
	"\x15svc_RconServerDetails\x10G\x12\x13\n" +
	"\x0fsvc_UserMessage\x10H\x12\x19\n" +
	"\x15svc_Broadcast_Command\x10J\x12\x1f\n" +
	"\x1bsvc_HltvFixupOperatorStatus\x10K\x12\x10\n" +
	"\fsvc_UserCmds\x10L*g\n" +
	"\x11VoiceDataFormat_t\x12\x1a\n" +
	"\x16VOICEDATA_FORMAT_STEAM\x10\x00\x12\x1b\n" +
	"\x17VOICEDATA_FORMAT_ENGINE\x10\x01\x12\x19\n" +
	"\x15VOICEDATA_FORMAT_OPUS\x10\x02*B\n" +
	"\x0eRequestPause_t\x12\f\n" +
	"\bRP_PAUSE\x10\x00\x12\x0e\n" +
	"\n" +
	"RP_UNPAUSE\x10\x01\x12\x12\n" +
	"\x0eRP_TOGGLEPAUSE\x10\x02*\x1d\n" +
	"\fPrefetchType\x12\r\n" +
	"\tPFT_SOUND\x10\x00*V\n" +
	"\x17ESplitScreenMessageType\x12\x1b\n" +
	"\x17MSG_SPLITSCREEN_ADDUSER\x10\x00\x12\x1e\n" +
	"\x1aMSG_SPLITSCREEN_REMOVEUSER\x10\x01*\xb3\x01\n" +
	"\x15EQueryCvarValueStatus\x12%\n" +
	"!eQueryCvarValueStatus_ValueIntact\x10\x00\x12&\n" +
	"\"eQueryCvarValueStatus_CvarNotFound\x10\x01\x12\"\n" +
	"\x1eeQueryCvarValueStatus_NotACvar\x10\x02\x12'\n" +
	"#eQueryCvarValueStatus_CvarProtected\x10\x03*h\n" +
	"\vDIALOG_TYPE\x12\x0e\n" +
	"\n" +
	"DIALOG_MSG\x10\x00\x12\x0f\n" +
	"\vDIALOG_MENU\x10\x01\x12\x0f\n" +
	"\vDIALOG_TEXT\x10\x02\x12\x10\n" +
	"\fDIALOG_ENTRY\x10\x03\x12\x15\n" +
	"\x11DIALOG_ASKCONNECT\x10\x04*+\n" +
	"\x19SVC_Messages_LowFrequency\x12\x0e\n" +
	"\tsvc_dummy\x10\xd8\x04*y\n" +
	"\x16Bidirectional_Messages\x12\x1b\n" +
	"\x17bi_RebroadcastGameEvent\x10\x10\x12\x18\n" +
	"\x14bi_RebroadcastSource\x10\x11\x12\x10\n" +
	"\fbi_GameEvent\x10\x12\x12\x16\n" +
	"\x12bi_PredictionEvent\x10\x13*M\n" +
	"#Bidirectional_Messages_LowFrequency\x12\x11\n" +
	"\fbi_RelayInfo\x10\xbc\x05\x12\x13\n" +
	"\x0ebi_RelayPacket\x10\xbd\x05*\xa1\x01\n" +
	"\x11ReplayEventType_t\x12\x17\n" +
	"\x13REPLAY_EVENT_CANCEL\x10\x00\x12\x16\n" +
	"\x12REPLAY_EVENT_DEATH\x10\x01\x12\x18\n" +
	"\x14REPLAY_EVENT_GENERIC\x10\x02\x12'\n" +
	"#REPLAY_EVENT_STUCK_NEED_FULL_UPDATE\x10\x03\x12\x18\n" +
	"\x14REPLAY_EVENT_VICTORY\x10\x04"

var (
	file_s2_netmessages_proto_rawDescOnce sync.Once
	file_s2_netmessages_proto_rawDescData []byte
)

func file_s2_netmessages_proto_rawDescGZIP() []byte {
	file_s2_netmessages_proto_rawDescOnce.Do(func() {
		file_s2_netmessages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_s2_netmessages_proto_rawDesc), len(file_s2_netmessages_proto_rawDesc)))
	})
	return file_s2_netmessages_proto_rawDescData
}

var file_s2_netmessages_proto_enumTypes = make([]protoimpl.EnumInfo, 13)
var file_s2_netmessages_proto_msgTypes = make([]protoimpl.MessageInfo, 81)
var file_s2_netmessages_proto_goTypes = []any{
	(CLC_Messages)(0),                                            // 0: com.github.markus_wa.demoinfocs_golang.s2.CLC_Messages
	(SVC_Messages)(0),                                            // 1: com.github.markus_wa.demoinfocs_golang.s2.SVC_Messages
	(VoiceDataFormatT)(0),                                        // 2: com.github.markus_wa.demoinfocs_golang.s2.VoiceDataFormat_t
	(RequestPauseT)(0),                                           // 3: com.github.markus_wa.demoinfocs_golang.s2.RequestPause_t
	(PrefetchType)(0),                                            // 4: com.github.markus_wa.demoinfocs_golang.s2.PrefetchType
	(ESplitScreenMessageType)(0),                                 // 5: com.github.markus_wa.demoinfocs_golang.s2.ESplitScreenMessageType
	(EQueryCvarValueStatus)(0),                                   // 6: com.github.markus_wa.demoinfocs_golang.s2.EQueryCvarValueStatus
	(DIALOG_TYPE)(0),                                             // 7: com.github.markus_wa.demoinfocs_golang.s2.DIALOG_TYPE
	(SVC_Messages_LowFrequency)(0),                               // 8: com.github.markus_wa.demoinfocs_golang.s2.SVC_Messages_LowFrequency
	(Bidirectional_Messages)(0),                                  // 9: com.github.markus_wa.demoinfocs_golang.s2.Bidirectional_Messages
	(Bidirectional_Messages_LowFrequency)(0),                     // 10: com.github.markus_wa.demoinfocs_golang.s2.Bidirectional_Messages_LowFrequency
	(ReplayEventTypeT)(0),                                        // 11: com.github.markus_wa.demoinfocs_golang.s2.ReplayEventType_t
	(CBidirMsg_PredictionEvent_ESyncType)(0),                     // 12: com.github.markus_wa.demoinfocs_golang.s2.CBidirMsg_PredictionEvent.ESyncType
	(*CCLCMsg_ClientInfo)(nil),                                   // 13: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_ClientInfo
	(*CCLCMsg_Move)(nil),                                         // 14: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_Move
	(*CMsgVoiceAudio)(nil),                                       // 15: com.github.markus_wa.demoinfocs_golang.s2.CMsgVoiceAudio
	(*CCLCMsg_VoiceData)(nil),                                    // 16: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_VoiceData
	(*CCLCMsg_BaselineAck)(nil),                                  // 17: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_BaselineAck
	(*CCLCMsg_ListenEvents)(nil),                                 // 18: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_ListenEvents
	(*CCLCMsg_RespondCvarValue)(nil),                             // 19: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_RespondCvarValue
	(*CCLCMsg_LoadingProgress)(nil),                              // 20: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_LoadingProgress
	(*CCLCMsg_SplitPlayerConnect)(nil),                           // 21: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_SplitPlayerConnect
	(*CCLCMsg_SplitPlayerDisconnect)(nil),                        // 22: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_SplitPlayerDisconnect
	(*CCLCMsg_ServerStatus)(nil),                                 // 23: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_ServerStatus
	(*CCLCMsg_RequestPause)(nil),                                 // 24: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_RequestPause
	(*CCLCMsg_CmdKeyValues)(nil),                                 // 25: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_CmdKeyValues
	(*CCLCMsg_RconServerDetails)(nil),                            // 26: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_RconServerDetails
	(*CMsgSource2SystemSpecs)(nil),                               // 27: com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2SystemSpecs
	(*CMsgSource2VProfLiteReportItem)(nil),                       // 28: com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReportItem
	(*CMsgSource2VProfLiteReport)(nil),                           // 29: com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReport
	(*CMsgSource2NetworkFlowQuality)(nil),                        // 30: com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2NetworkFlowQuality
	(*CMsgSource2PerfIntervalSample)(nil),                        // 31: com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2PerfIntervalSample
	(*CCLCMsg_Diagnostic)(nil),                                   // 32: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_Diagnostic
	(*CSource2Metrics_MatchPerfSummary_Notification)(nil),        // 33: com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification
	(*CSVCMsg_ServerInfo)(nil),                                   // 34: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_ServerInfo
	(*CSVCMsg_ClassInfo)(nil),                                    // 35: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_ClassInfo
	(*CSVCMsg_SetPause)(nil),                                     // 36: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_SetPause
	(*CSVCMsg_VoiceInit)(nil),                                    // 37: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_VoiceInit
	(*CSVCMsg_Print)(nil),                                        // 38: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Print
	(*CSVCMsg_Sounds)(nil),                                       // 39: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Sounds
	(*CSVCMsg_Prefetch)(nil),                                     // 40: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Prefetch
	(*CSVCMsg_SetView)(nil),                                      // 41: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_SetView
	(*CSVCMsg_FixAngle)(nil),                                     // 42: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_FixAngle
	(*CSVCMsg_CrosshairAngle)(nil),                               // 43: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_CrosshairAngle
	(*CSVCMsg_BSPDecal)(nil),                                     // 44: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_BSPDecal
	(*CSVCMsg_SplitScreen)(nil),                                  // 45: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_SplitScreen
	(*CSVCMsg_GetCvarValue)(nil),                                 // 46: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GetCvarValue
	(*CSVCMsg_Menu)(nil),                                         // 47: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Menu
	(*CSVCMsg_UserMessage)(nil),                                  // 48: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_UserMessage
	(*CSVCMsg_SendTable)(nil),                                    // 49: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_SendTable
	(*CSVCMsg_GameEventList)(nil),                                // 50: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventList
	(*CSVCMsg_PacketEntities)(nil),                               // 51: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities
	(*CSVCMsg_TempEntities)(nil),                                 // 52: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_TempEntities
	(*CSVCMsg_CreateStringTable)(nil),                            // 53: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_CreateStringTable
	(*CSVCMsg_UpdateStringTable)(nil),                            // 54: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_UpdateStringTable
	(*CSVCMsg_VoiceData)(nil),                                    // 55: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_VoiceData
	(*CSVCMsg_PacketReliable)(nil),                               // 56: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketReliable
	(*CSVCMsg_FullFrameSplit)(nil),                               // 57: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_FullFrameSplit
	(*CSVCMsg_HLTVStatus)(nil),                                   // 58: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_HLTVStatus
	(*CSVCMsg_ServerSteamID)(nil),                                // 59: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_ServerSteamID
	(*CSVCMsg_CmdKeyValues)(nil),                                 // 60: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_CmdKeyValues
	(*CSVCMsg_RconServerDetails)(nil),                            // 61: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_RconServerDetails
	(*CMsgIPCAddress)(nil),                                       // 62: com.github.markus_wa.demoinfocs_golang.s2.CMsgIPCAddress
	(*CMsgServerPeer)(nil),                                       // 63: com.github.markus_wa.demoinfocs_golang.s2.CMsgServerPeer
	(*CSVCMsg_PeerList)(nil),                                     // 64: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PeerList
	(*CSVCMsg_ClearAllStringTables)(nil),                         // 65: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_ClearAllStringTables
	(*ProtoFlattenedSerializerFieldT)(nil),                       // 66: com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializerField_t
	(*ProtoFlattenedSerializerT)(nil),                            // 67: com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializer_t
	(*CSVCMsg_FlattenedSerializer)(nil),                          // 68: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_FlattenedSerializer
	(*CSVCMsg_StopSound)(nil),                                    // 69: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_StopSound
	(*CBidirMsg_RebroadcastGameEvent)(nil),                       // 70: com.github.markus_wa.demoinfocs_golang.s2.CBidirMsg_RebroadcastGameEvent
	(*CBidirMsg_RebroadcastSource)(nil),                          // 71: com.github.markus_wa.demoinfocs_golang.s2.CBidirMsg_RebroadcastSource
	(*CBidirMsg_PredictionEvent)(nil),                            // 72: com.github.markus_wa.demoinfocs_golang.s2.CBidirMsg_PredictionEvent
	(*CMsgServerNetworkStats)(nil),                               // 73: com.github.markus_wa.demoinfocs_golang.s2.CMsgServerNetworkStats
	(*CSVCMsg_HltvReplay)(nil),                                   // 74: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_HltvReplay
	(*CCLCMsg_HltvReplay)(nil),                                   // 75: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_HltvReplay
	(*CSVCMsg_Broadcast_Command)(nil),                            // 76: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Broadcast_Command
	(*CCLCMsg_HltvFixupOperatorTick)(nil),                        // 77: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_HltvFixupOperatorTick
	(*CSVCMsg_HltvFixupOperatorStatus)(nil),                      // 78: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_HltvFixupOperatorStatus
	(*CMsgServerUserCmd)(nil),                                    // 79: com.github.markus_wa.demoinfocs_golang.s2.CMsgServerUserCmd
	(*CSVCMsg_UserCommands)(nil),                                 // 80: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_UserCommands
	(*CMsgSource2PerfIntervalSample_Tag)(nil),                    // 81: com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2PerfIntervalSample.Tag
	(*CSource2Metrics_MatchPerfSummary_Notification_Client)(nil), // 82: com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.Client
	(*CSVCMsg_ClassInfoClassT)(nil),                              // 83: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_ClassInfo.class_t
	(*CSVCMsg_SoundsSounddataT)(nil),                             // 84: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Sounds.sounddata_t
	(*CSVCMsg_SendTableSendpropT)(nil),                           // 85: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_SendTable.sendprop_t
	(*CSVCMsg_GameEventListKeyT)(nil),                            // 86: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventList.key_t
	(*CSVCMsg_GameEventListDescriptorT)(nil),                     // 87: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventList.descriptor_t
	(*CSVCMsg_PacketEntitiesAlternateBaselineT)(nil),             // 88: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.alternate_baseline_t
	(*CSVCMsg_PacketEntitiesNonTransmittedEntitiesT)(nil),        // 89: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.non_transmitted_entities_t
	(*CSVCMsg_PacketEntitiesOutofpvsEntityUpdatesT)(nil),         // 90: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.outofpvs_entity_updates_t
	(*ProtoFlattenedSerializerFieldTPolymorphicFieldT)(nil),      // 91: com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializerField_t.polymorphic_field_t
	(*CMsgServerNetworkStats_Port)(nil),                          // 92: com.github.markus_wa.demoinfocs_golang.s2.CMsgServerNetworkStats.Port
	(*CMsgServerNetworkStats_Player)(nil),                        // 93: com.github.markus_wa.demoinfocs_golang.s2.CMsgServerNetworkStats.Player
	(*CSVCMsg_GameSessionConfiguration)(nil),                     // 94: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameSessionConfiguration
	(*CMsgQAngle)(nil),                                           // 95: com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngle
	(*CMsgVector)(nil),                                           // 96: com.github.markus_wa.demoinfocs_golang.s2.CMsgVector
}
var file_s2_netmessages_proto_depIdxs = []int32{
	2,  // 0: com.github.markus_wa.demoinfocs_golang.s2.CMsgVoiceAudio.format:type_name -> com.github.markus_wa.demoinfocs_golang.s2.VoiceDataFormat_t
	15, // 1: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_VoiceData.audio:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgVoiceAudio
	3,  // 2: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_RequestPause.pause_type:type_name -> com.github.markus_wa.demoinfocs_golang.s2.RequestPause_t
	28, // 3: com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReport.total:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReportItem
	28, // 4: com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReport.items:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReportItem
	81, // 5: com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2PerfIntervalSample.tags:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2PerfIntervalSample.Tag
	27, // 6: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_Diagnostic.system_specs:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2SystemSpecs
	29, // 7: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_Diagnostic.vprof_report:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReport
	30, // 8: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_Diagnostic.downstream_flow:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2NetworkFlowQuality
	30, // 9: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_Diagnostic.upstream_flow:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2NetworkFlowQuality
	31, // 10: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_Diagnostic.perf_samples:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2PerfIntervalSample
	29, // 11: com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.server_profile:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReport
	82, // 12: com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.clients:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.Client
	94, // 13: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_ServerInfo.game_session_config:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameSessionConfiguration
	83, // 14: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_ClassInfo.classes:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_ClassInfo.class_t
	84, // 15: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Sounds.sounds:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Sounds.sounddata_t
	4,  // 16: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_Prefetch.resource_type:type_name -> com.github.markus_wa.demoinfocs_golang.s2.PrefetchType
	95, // 17: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_FixAngle.angle:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngle
	95, // 18: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_CrosshairAngle.angle:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngle
	96, // 19: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_BSPDecal.pos:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgVector
	5,  // 20: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_SplitScreen.type:type_name -> com.github.markus_wa.demoinfocs_golang.s2.ESplitScreenMessageType
	85, // 21: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_SendTable.props:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_SendTable.sendprop_t
	87, // 22: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventList.descriptors:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventList.descriptor_t
	88, // 23: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.alternate_baselines:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.alternate_baseline_t
	89, // 24: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.non_transmitted_entities:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.non_transmitted_entities_t
	90, // 25: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.outofpvs_entity_updates:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PacketEntities.outofpvs_entity_updates_t
	15, // 26: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_VoiceData.audio:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgVoiceAudio
	62, // 27: com.github.markus_wa.demoinfocs_golang.s2.CMsgServerPeer.ipc:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgIPCAddress
	63, // 28: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_PeerList.peer:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgServerPeer
	91, // 29: com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializerField_t.polymorphic_types:type_name -> com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializerField_t.polymorphic_field_t
	67, // 30: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_FlattenedSerializer.serializers:type_name -> com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializer_t
	66, // 31: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_FlattenedSerializer.fields:type_name -> com.github.markus_wa.demoinfocs_golang.s2.ProtoFlattenedSerializerField_t
	92, // 32: com.github.markus_wa.demoinfocs_golang.s2.CMsgServerNetworkStats.ports:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgServerNetworkStats.Port
	93, // 33: com.github.markus_wa.demoinfocs_golang.s2.CMsgServerNetworkStats.players:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgServerNetworkStats.Player
	96, // 34: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_HltvFixupOperatorTick.origin:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgVector
	95, // 35: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_HltvFixupOperatorTick.eye_angles:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngle
	96, // 36: com.github.markus_wa.demoinfocs_golang.s2.CCLCMsg_HltvFixupOperatorTick.view_offset:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgVector
	79, // 37: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_UserCommands.commands:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgServerUserCmd
	27, // 38: com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.Client.system_specs:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2SystemSpecs
	29, // 39: com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.Client.profile:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2VProfLiteReport
	30, // 40: com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.Client.downstream_flow:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2NetworkFlowQuality
	30, // 41: com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.Client.upstream_flow:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2NetworkFlowQuality
	31, // 42: com.github.markus_wa.demoinfocs_golang.s2.CSource2Metrics_MatchPerfSummary_Notification.Client.perf_samples:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgSource2PerfIntervalSample
	86, // 43: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventList.descriptor_t.keys:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventList.key_t
	44, // [44:44] is the sub-list for method output_type
	44, // [44:44] is the sub-list for method input_type
	44, // [44:44] is the sub-list for extension type_name
	44, // [44:44] is the sub-list for extension extendee
	0,  // [0:44] is the sub-list for field type_name
}

func init() { file_s2_netmessages_proto_init() }
func file_s2_netmessages_proto_init() {
	if File_s2_netmessages_proto != nil {
		return
	}
	file_s2_networkbasetypes_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_s2_netmessages_proto_rawDesc), len(file_s2_netmessages_proto_rawDesc)),
			NumEnums:      13,
			NumMessages:   81,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_s2_netmessages_proto_goTypes,
		DependencyIndexes: file_s2_netmessages_proto_depIdxs,
		EnumInfos:         file_s2_netmessages_proto_enumTypes,
		MessageInfos:      file_s2_netmessages_proto_msgTypes,
	}.Build()
	File_s2_netmessages_proto = out.File
	file_s2_netmessages_proto_goTypes = nil
	file_s2_netmessages_proto_depIdxs = nil
}
