// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: s2/networkbasetypes.proto

package msgs2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignonStateT int32

const (
	SignonStateT_SIGNONSTATE_NONE        SignonStateT = 0
	SignonStateT_SIGNONSTATE_CHALLENGE   SignonStateT = 1
	SignonStateT_SIGNONSTATE_CONNECTED   SignonStateT = 2
	SignonStateT_SIGNONSTATE_NEW         SignonStateT = 3
	SignonStateT_SIGNONSTATE_PRESPAWN    SignonStateT = 4
	SignonStateT_SIGNONSTATE_SPAWN       SignonStateT = 5
	SignonStateT_SIGNONSTATE_FULL        SignonStateT = 6
	SignonStateT_SIGNONSTATE_CHANGELEVEL SignonStateT = 7
)

// Enum value maps for SignonStateT.
var (
	SignonStateT_name = map[int32]string{
		0: "SIGNONSTATE_NONE",
		1: "SIGNONSTATE_CHALLENGE",
		2: "SIGNONSTATE_CONNECTED",
		3: "SIGNONSTATE_NEW",
		4: "SIGNONSTATE_PRESPAWN",
		5: "SIGNONSTATE_SPAWN",
		6: "SIGNONSTATE_FULL",
		7: "SIGNONSTATE_CHANGELEVEL",
	}
	SignonStateT_value = map[string]int32{
		"SIGNONSTATE_NONE":        0,
		"SIGNONSTATE_CHALLENGE":   1,
		"SIGNONSTATE_CONNECTED":   2,
		"SIGNONSTATE_NEW":         3,
		"SIGNONSTATE_PRESPAWN":    4,
		"SIGNONSTATE_SPAWN":       5,
		"SIGNONSTATE_FULL":        6,
		"SIGNONSTATE_CHANGELEVEL": 7,
	}
)

func (x SignonStateT) Enum() *SignonStateT {
	p := new(SignonStateT)
	*p = x
	return p
}

func (x SignonStateT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignonStateT) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_networkbasetypes_proto_enumTypes[0].Descriptor()
}

func (SignonStateT) Type() protoreflect.EnumType {
	return &file_s2_networkbasetypes_proto_enumTypes[0]
}

func (x SignonStateT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SignonStateT) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SignonStateT(num)
	return nil
}

// Deprecated: Use SignonStateT.Descriptor instead.
func (SignonStateT) EnumDescriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{0}
}

type NET_Messages int32

const (
	NET_Messages_net_NOP                        NET_Messages = 0
	NET_Messages_net_Disconnect_Legacy          NET_Messages = 1
	NET_Messages_net_SplitScreenUser            NET_Messages = 3
	NET_Messages_net_Tick                       NET_Messages = 4
	NET_Messages_net_StringCmd                  NET_Messages = 5
	NET_Messages_net_SetConVar                  NET_Messages = 6
	NET_Messages_net_SignonState                NET_Messages = 7
	NET_Messages_net_SpawnGroup_Load            NET_Messages = 8
	NET_Messages_net_SpawnGroup_ManifestUpdate  NET_Messages = 9
	NET_Messages_net_SpawnGroup_SetCreationTick NET_Messages = 11
	NET_Messages_net_SpawnGroup_Unload          NET_Messages = 12
	NET_Messages_net_SpawnGroup_LoadCompleted   NET_Messages = 13
	NET_Messages_net_DebugOverlay               NET_Messages = 15
)

// Enum value maps for NET_Messages.
var (
	NET_Messages_name = map[int32]string{
		0:  "net_NOP",
		1:  "net_Disconnect_Legacy",
		3:  "net_SplitScreenUser",
		4:  "net_Tick",
		5:  "net_StringCmd",
		6:  "net_SetConVar",
		7:  "net_SignonState",
		8:  "net_SpawnGroup_Load",
		9:  "net_SpawnGroup_ManifestUpdate",
		11: "net_SpawnGroup_SetCreationTick",
		12: "net_SpawnGroup_Unload",
		13: "net_SpawnGroup_LoadCompleted",
		15: "net_DebugOverlay",
	}
	NET_Messages_value = map[string]int32{
		"net_NOP":                        0,
		"net_Disconnect_Legacy":          1,
		"net_SplitScreenUser":            3,
		"net_Tick":                       4,
		"net_StringCmd":                  5,
		"net_SetConVar":                  6,
		"net_SignonState":                7,
		"net_SpawnGroup_Load":            8,
		"net_SpawnGroup_ManifestUpdate":  9,
		"net_SpawnGroup_SetCreationTick": 11,
		"net_SpawnGroup_Unload":          12,
		"net_SpawnGroup_LoadCompleted":   13,
		"net_DebugOverlay":               15,
	}
)

func (x NET_Messages) Enum() *NET_Messages {
	p := new(NET_Messages)
	*p = x
	return p
}

func (x NET_Messages) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NET_Messages) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_networkbasetypes_proto_enumTypes[1].Descriptor()
}

func (NET_Messages) Type() protoreflect.EnumType {
	return &file_s2_networkbasetypes_proto_enumTypes[1]
}

func (x NET_Messages) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NET_Messages) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NET_Messages(num)
	return nil
}

// Deprecated: Use NET_Messages.Descriptor instead.
func (NET_Messages) EnumDescriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{1}
}

type SpawnGroupFlagsT int32

const (
	SpawnGroupFlagsT_SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE     SpawnGroupFlagsT = 1
	SpawnGroupFlagsT_SPAWN_GROUP_DONT_SPAWN_ENTITIES         SpawnGroupFlagsT = 2
	SpawnGroupFlagsT_SPAWN_GROUP_SYNCHRONOUS_SPAWN           SpawnGroupFlagsT = 4
	SpawnGroupFlagsT_SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP      SpawnGroupFlagsT = 8
	SpawnGroupFlagsT_SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES SpawnGroupFlagsT = 16
	SpawnGroupFlagsT_SPAWN_GROUP_BLOCK_UNTIL_LOADED          SpawnGroupFlagsT = 64
	SpawnGroupFlagsT_SPAWN_GROUP_LOAD_STREAMING_DATA         SpawnGroupFlagsT = 128
	SpawnGroupFlagsT_SPAWN_GROUP_CREATE_NEW_SCENE_WORLD      SpawnGroupFlagsT = 256
)

// Enum value maps for SpawnGroupFlagsT.
var (
	SpawnGroupFlagsT_name = map[int32]string{
		1:   "SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE",
		2:   "SPAWN_GROUP_DONT_SPAWN_ENTITIES",
		4:   "SPAWN_GROUP_SYNCHRONOUS_SPAWN",
		8:   "SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP",
		16:  "SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES",
		64:  "SPAWN_GROUP_BLOCK_UNTIL_LOADED",
		128: "SPAWN_GROUP_LOAD_STREAMING_DATA",
		256: "SPAWN_GROUP_CREATE_NEW_SCENE_WORLD",
	}
	SpawnGroupFlagsT_value = map[string]int32{
		"SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE":     1,
		"SPAWN_GROUP_DONT_SPAWN_ENTITIES":         2,
		"SPAWN_GROUP_SYNCHRONOUS_SPAWN":           4,
		"SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP":      8,
		"SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES": 16,
		"SPAWN_GROUP_BLOCK_UNTIL_LOADED":          64,
		"SPAWN_GROUP_LOAD_STREAMING_DATA":         128,
		"SPAWN_GROUP_CREATE_NEW_SCENE_WORLD":      256,
	}
)

func (x SpawnGroupFlagsT) Enum() *SpawnGroupFlagsT {
	p := new(SpawnGroupFlagsT)
	*p = x
	return p
}

func (x SpawnGroupFlagsT) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpawnGroupFlagsT) Descriptor() protoreflect.EnumDescriptor {
	return file_s2_networkbasetypes_proto_enumTypes[2].Descriptor()
}

func (SpawnGroupFlagsT) Type() protoreflect.EnumType {
	return &file_s2_networkbasetypes_proto_enumTypes[2]
}

func (x SpawnGroupFlagsT) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SpawnGroupFlagsT) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SpawnGroupFlagsT(num)
	return nil
}

// Deprecated: Use SpawnGroupFlagsT.Descriptor instead.
func (SpawnGroupFlagsT) EnumDescriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{2}
}

type CMsgVector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *float32               `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y             *float32               `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z             *float32               `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	W             *float32               `protobuf:"fixed32,4,opt,name=w" json:"w,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgVector) Reset() {
	*x = CMsgVector{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVector) ProtoMessage() {}

func (x *CMsgVector) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVector.ProtoReflect.Descriptor instead.
func (*CMsgVector) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{0}
}

func (x *CMsgVector) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgVector) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgVector) GetZ() float32 {
	if x != nil && x.Z != nil {
		return *x.Z
	}
	return 0
}

func (x *CMsgVector) GetW() float32 {
	if x != nil && x.W != nil {
		return *x.W
	}
	return 0
}

type CMsgVector2D struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *float32               `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y             *float32               `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgVector2D) Reset() {
	*x = CMsgVector2D{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgVector2D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgVector2D) ProtoMessage() {}

func (x *CMsgVector2D) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgVector2D.ProtoReflect.Descriptor instead.
func (*CMsgVector2D) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{1}
}

func (x *CMsgVector2D) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgVector2D) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type CMsgQAngle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *float32               `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y             *float32               `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z             *float32               `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgQAngle) Reset() {
	*x = CMsgQAngle{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgQAngle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgQAngle) ProtoMessage() {}

func (x *CMsgQAngle) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgQAngle.ProtoReflect.Descriptor instead.
func (*CMsgQAngle) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{2}
}

func (x *CMsgQAngle) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgQAngle) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgQAngle) GetZ() float32 {
	if x != nil && x.Z != nil {
		return *x.Z
	}
	return 0
}

type CMsgQuaternion struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *float32               `protobuf:"fixed32,1,opt,name=x" json:"x,omitempty"`
	Y             *float32               `protobuf:"fixed32,2,opt,name=y" json:"y,omitempty"`
	Z             *float32               `protobuf:"fixed32,3,opt,name=z" json:"z,omitempty"`
	W             *float32               `protobuf:"fixed32,4,opt,name=w" json:"w,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgQuaternion) Reset() {
	*x = CMsgQuaternion{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgQuaternion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgQuaternion) ProtoMessage() {}

func (x *CMsgQuaternion) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgQuaternion.ProtoReflect.Descriptor instead.
func (*CMsgQuaternion) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{3}
}

func (x *CMsgQuaternion) GetX() float32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *CMsgQuaternion) GetY() float32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

func (x *CMsgQuaternion) GetZ() float32 {
	if x != nil && x.Z != nil {
		return *x.Z
	}
	return 0
}

func (x *CMsgQuaternion) GetW() float32 {
	if x != nil && x.W != nil {
		return *x.W
	}
	return 0
}

type CMsgTransform struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *CMsgVector            `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Scale         *float32               `protobuf:"fixed32,2,opt,name=scale" json:"scale,omitempty"`
	Orientation   *CMsgQuaternion        `protobuf:"bytes,3,opt,name=orientation" json:"orientation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgTransform) Reset() {
	*x = CMsgTransform{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgTransform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgTransform) ProtoMessage() {}

func (x *CMsgTransform) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgTransform.ProtoReflect.Descriptor instead.
func (*CMsgTransform) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{4}
}

func (x *CMsgTransform) GetPosition() *CMsgVector {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *CMsgTransform) GetScale() float32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

func (x *CMsgTransform) GetOrientation() *CMsgQuaternion {
	if x != nil {
		return x.Orientation
	}
	return nil
}

type CMsgRGBA struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	R             *int32                 `protobuf:"varint,1,opt,name=r" json:"r,omitempty"`
	G             *int32                 `protobuf:"varint,2,opt,name=g" json:"g,omitempty"`
	B             *int32                 `protobuf:"varint,3,opt,name=b" json:"b,omitempty"`
	A             *int32                 `protobuf:"varint,4,opt,name=a" json:"a,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgRGBA) Reset() {
	*x = CMsgRGBA{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgRGBA) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgRGBA) ProtoMessage() {}

func (x *CMsgRGBA) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgRGBA.ProtoReflect.Descriptor instead.
func (*CMsgRGBA) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{5}
}

func (x *CMsgRGBA) GetR() int32 {
	if x != nil && x.R != nil {
		return *x.R
	}
	return 0
}

func (x *CMsgRGBA) GetG() int32 {
	if x != nil && x.G != nil {
		return *x.G
	}
	return 0
}

func (x *CMsgRGBA) GetB() int32 {
	if x != nil && x.B != nil {
		return *x.B
	}
	return 0
}

func (x *CMsgRGBA) GetA() int32 {
	if x != nil && x.A != nil {
		return *x.A
	}
	return 0
}

type CMsgPlayerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Xuid          *uint64                `protobuf:"fixed64,2,opt,name=xuid" json:"xuid,omitempty"`
	Userid        *int32                 `protobuf:"varint,3,opt,name=userid" json:"userid,omitempty"`
	Steamid       *uint64                `protobuf:"fixed64,4,opt,name=steamid" json:"steamid,omitempty"`
	Fakeplayer    *bool                  `protobuf:"varint,5,opt,name=fakeplayer" json:"fakeplayer,omitempty"`
	Ishltv        *bool                  `protobuf:"varint,6,opt,name=ishltv" json:"ishltv,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsgPlayerInfo) Reset() {
	*x = CMsgPlayerInfo{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsgPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsgPlayerInfo) ProtoMessage() {}

func (x *CMsgPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsgPlayerInfo.ProtoReflect.Descriptor instead.
func (*CMsgPlayerInfo) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{6}
}

func (x *CMsgPlayerInfo) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsgPlayerInfo) GetXuid() uint64 {
	if x != nil && x.Xuid != nil {
		return *x.Xuid
	}
	return 0
}

func (x *CMsgPlayerInfo) GetUserid() int32 {
	if x != nil && x.Userid != nil {
		return *x.Userid
	}
	return 0
}

func (x *CMsgPlayerInfo) GetSteamid() uint64 {
	if x != nil && x.Steamid != nil {
		return *x.Steamid
	}
	return 0
}

func (x *CMsgPlayerInfo) GetFakeplayer() bool {
	if x != nil && x.Fakeplayer != nil {
		return *x.Fakeplayer
	}
	return false
}

func (x *CMsgPlayerInfo) GetIshltv() bool {
	if x != nil && x.Ishltv != nil {
		return *x.Ishltv
	}
	return false
}

type CEntityMsg struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TargetEntity  *uint32                `protobuf:"varint,1,opt,name=target_entity,json=targetEntity,def=16777215" json:"target_entity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

// Default values for CEntityMsg fields.
const (
	Default_CEntityMsg_TargetEntity = uint32(16777215)
)

func (x *CEntityMsg) Reset() {
	*x = CEntityMsg{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CEntityMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CEntityMsg) ProtoMessage() {}

func (x *CEntityMsg) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CEntityMsg.ProtoReflect.Descriptor instead.
func (*CEntityMsg) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{7}
}

func (x *CEntityMsg) GetTargetEntity() uint32 {
	if x != nil && x.TargetEntity != nil {
		return *x.TargetEntity
	}
	return Default_CEntityMsg_TargetEntity
}

type CMsg_CVars struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cvars         []*CMsg_CVars_CVar     `protobuf:"bytes,1,rep,name=cvars" json:"cvars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsg_CVars) Reset() {
	*x = CMsg_CVars{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsg_CVars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg_CVars) ProtoMessage() {}

func (x *CMsg_CVars) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg_CVars.ProtoReflect.Descriptor instead.
func (*CMsg_CVars) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{8}
}

func (x *CMsg_CVars) GetCvars() []*CMsg_CVars_CVar {
	if x != nil {
		return x.Cvars
	}
	return nil
}

type CNETMsg_NOP struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CNETMsg_NOP) Reset() {
	*x = CNETMsg_NOP{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_NOP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_NOP) ProtoMessage() {}

func (x *CNETMsg_NOP) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_NOP.ProtoReflect.Descriptor instead.
func (*CNETMsg_NOP) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{9}
}

type CNETMsg_SplitScreenUser struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Slot          *int32                 `protobuf:"varint,1,opt,name=slot" json:"slot,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CNETMsg_SplitScreenUser) Reset() {
	*x = CNETMsg_SplitScreenUser{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_SplitScreenUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_SplitScreenUser) ProtoMessage() {}

func (x *CNETMsg_SplitScreenUser) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_SplitScreenUser.ProtoReflect.Descriptor instead.
func (*CNETMsg_SplitScreenUser) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{10}
}

func (x *CNETMsg_SplitScreenUser) GetSlot() int32 {
	if x != nil && x.Slot != nil {
		return *x.Slot
	}
	return 0
}

type CNETMsg_Tick struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	Tick                            *uint32                `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	HostComputationtime             *uint32                `protobuf:"varint,4,opt,name=host_computationtime,json=hostComputationtime" json:"host_computationtime,omitempty"`
	HostComputationtimeStdDeviation *uint32                `protobuf:"varint,5,opt,name=host_computationtime_std_deviation,json=hostComputationtimeStdDeviation" json:"host_computationtime_std_deviation,omitempty"`
	LegacyHostLoss                  *uint32                `protobuf:"varint,7,opt,name=legacy_host_loss,json=legacyHostLoss" json:"legacy_host_loss,omitempty"`
	HostUnfilteredFrametime         *uint32                `protobuf:"varint,8,opt,name=host_unfiltered_frametime,json=hostUnfilteredFrametime" json:"host_unfiltered_frametime,omitempty"`
	HltvReplayFlags                 *uint32                `protobuf:"varint,9,opt,name=hltv_replay_flags,json=hltvReplayFlags" json:"hltv_replay_flags,omitempty"`
	ExpectedLongTick                *uint32                `protobuf:"varint,10,opt,name=expected_long_tick,json=expectedLongTick" json:"expected_long_tick,omitempty"`
	ExpectedLongTickReason          *string                `protobuf:"bytes,11,opt,name=expected_long_tick_reason,json=expectedLongTickReason" json:"expected_long_tick_reason,omitempty"`
	HostFrameDroppedPctX10          *uint32                `protobuf:"varint,12,opt,name=host_frame_dropped_pct_x10,json=hostFrameDroppedPctX10" json:"host_frame_dropped_pct_x10,omitempty"`
	HostFrameIrregularArrivalPctX10 *uint32                `protobuf:"varint,13,opt,name=host_frame_irregular_arrival_pct_x10,json=hostFrameIrregularArrivalPctX10" json:"host_frame_irregular_arrival_pct_x10,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *CNETMsg_Tick) Reset() {
	*x = CNETMsg_Tick{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_Tick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_Tick) ProtoMessage() {}

func (x *CNETMsg_Tick) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_Tick.ProtoReflect.Descriptor instead.
func (*CNETMsg_Tick) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{11}
}

func (x *CNETMsg_Tick) GetTick() uint32 {
	if x != nil && x.Tick != nil {
		return *x.Tick
	}
	return 0
}

func (x *CNETMsg_Tick) GetHostComputationtime() uint32 {
	if x != nil && x.HostComputationtime != nil {
		return *x.HostComputationtime
	}
	return 0
}

func (x *CNETMsg_Tick) GetHostComputationtimeStdDeviation() uint32 {
	if x != nil && x.HostComputationtimeStdDeviation != nil {
		return *x.HostComputationtimeStdDeviation
	}
	return 0
}

func (x *CNETMsg_Tick) GetLegacyHostLoss() uint32 {
	if x != nil && x.LegacyHostLoss != nil {
		return *x.LegacyHostLoss
	}
	return 0
}

func (x *CNETMsg_Tick) GetHostUnfilteredFrametime() uint32 {
	if x != nil && x.HostUnfilteredFrametime != nil {
		return *x.HostUnfilteredFrametime
	}
	return 0
}

func (x *CNETMsg_Tick) GetHltvReplayFlags() uint32 {
	if x != nil && x.HltvReplayFlags != nil {
		return *x.HltvReplayFlags
	}
	return 0
}

func (x *CNETMsg_Tick) GetExpectedLongTick() uint32 {
	if x != nil && x.ExpectedLongTick != nil {
		return *x.ExpectedLongTick
	}
	return 0
}

func (x *CNETMsg_Tick) GetExpectedLongTickReason() string {
	if x != nil && x.ExpectedLongTickReason != nil {
		return *x.ExpectedLongTickReason
	}
	return ""
}

func (x *CNETMsg_Tick) GetHostFrameDroppedPctX10() uint32 {
	if x != nil && x.HostFrameDroppedPctX10 != nil {
		return *x.HostFrameDroppedPctX10
	}
	return 0
}

func (x *CNETMsg_Tick) GetHostFrameIrregularArrivalPctX10() uint32 {
	if x != nil && x.HostFrameIrregularArrivalPctX10 != nil {
		return *x.HostFrameIrregularArrivalPctX10
	}
	return 0
}

type CNETMsg_StringCmd struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Command        *string                `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
	PredictionSync *uint32                `protobuf:"varint,2,opt,name=prediction_sync,json=predictionSync" json:"prediction_sync,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CNETMsg_StringCmd) Reset() {
	*x = CNETMsg_StringCmd{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_StringCmd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_StringCmd) ProtoMessage() {}

func (x *CNETMsg_StringCmd) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_StringCmd.ProtoReflect.Descriptor instead.
func (*CNETMsg_StringCmd) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{12}
}

func (x *CNETMsg_StringCmd) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *CNETMsg_StringCmd) GetPredictionSync() uint32 {
	if x != nil && x.PredictionSync != nil {
		return *x.PredictionSync
	}
	return 0
}

type CNETMsg_SetConVar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Convars       *CMsg_CVars            `protobuf:"bytes,1,opt,name=convars" json:"convars,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CNETMsg_SetConVar) Reset() {
	*x = CNETMsg_SetConVar{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_SetConVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_SetConVar) ProtoMessage() {}

func (x *CNETMsg_SetConVar) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_SetConVar.ProtoReflect.Descriptor instead.
func (*CNETMsg_SetConVar) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{13}
}

func (x *CNETMsg_SetConVar) GetConvars() *CMsg_CVars {
	if x != nil {
		return x.Convars
	}
	return nil
}

type CNETMsg_SignonState struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SignonState       *SignonStateT          `protobuf:"varint,1,opt,name=signon_state,json=signonState,enum=com.github.markus_wa.demoinfocs_golang.s2.SignonStateT,def=0" json:"signon_state,omitempty"`
	SpawnCount        *uint32                `protobuf:"varint,2,opt,name=spawn_count,json=spawnCount" json:"spawn_count,omitempty"`
	NumServerPlayers  *uint32                `protobuf:"varint,3,opt,name=num_server_players,json=numServerPlayers" json:"num_server_players,omitempty"`
	PlayersNetworkids []string               `protobuf:"bytes,4,rep,name=players_networkids,json=playersNetworkids" json:"players_networkids,omitempty"`
	MapName           *string                `protobuf:"bytes,5,opt,name=map_name,json=mapName" json:"map_name,omitempty"`
	Addons            *string                `protobuf:"bytes,6,opt,name=addons" json:"addons,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

// Default values for CNETMsg_SignonState fields.
const (
	Default_CNETMsg_SignonState_SignonState = SignonStateT_SIGNONSTATE_NONE
)

func (x *CNETMsg_SignonState) Reset() {
	*x = CNETMsg_SignonState{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_SignonState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_SignonState) ProtoMessage() {}

func (x *CNETMsg_SignonState) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_SignonState.ProtoReflect.Descriptor instead.
func (*CNETMsg_SignonState) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{14}
}

func (x *CNETMsg_SignonState) GetSignonState() SignonStateT {
	if x != nil && x.SignonState != nil {
		return *x.SignonState
	}
	return Default_CNETMsg_SignonState_SignonState
}

func (x *CNETMsg_SignonState) GetSpawnCount() uint32 {
	if x != nil && x.SpawnCount != nil {
		return *x.SpawnCount
	}
	return 0
}

func (x *CNETMsg_SignonState) GetNumServerPlayers() uint32 {
	if x != nil && x.NumServerPlayers != nil {
		return *x.NumServerPlayers
	}
	return 0
}

func (x *CNETMsg_SignonState) GetPlayersNetworkids() []string {
	if x != nil {
		return x.PlayersNetworkids
	}
	return nil
}

func (x *CNETMsg_SignonState) GetMapName() string {
	if x != nil && x.MapName != nil {
		return *x.MapName
	}
	return ""
}

func (x *CNETMsg_SignonState) GetAddons() string {
	if x != nil && x.Addons != nil {
		return *x.Addons
	}
	return ""
}

type CSVCMsg_GameEvent struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	EventName     *string                  `protobuf:"bytes,1,opt,name=event_name,json=eventName" json:"event_name,omitempty"`
	Eventid       *int32                   `protobuf:"varint,2,opt,name=eventid" json:"eventid,omitempty"`
	Keys          []*CSVCMsg_GameEventKeyT `protobuf:"bytes,3,rep,name=keys" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_GameEvent) Reset() {
	*x = CSVCMsg_GameEvent{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_GameEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_GameEvent) ProtoMessage() {}

func (x *CSVCMsg_GameEvent) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_GameEvent.ProtoReflect.Descriptor instead.
func (*CSVCMsg_GameEvent) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{15}
}

func (x *CSVCMsg_GameEvent) GetEventName() string {
	if x != nil && x.EventName != nil {
		return *x.EventName
	}
	return ""
}

func (x *CSVCMsg_GameEvent) GetEventid() int32 {
	if x != nil && x.Eventid != nil {
		return *x.Eventid
	}
	return 0
}

func (x *CSVCMsg_GameEvent) GetKeys() []*CSVCMsg_GameEventKeyT {
	if x != nil {
		return x.Keys
	}
	return nil
}

type CSVCMsgList_GameEvents struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Events        []*CSVCMsgList_GameEventsEventT `protobuf:"bytes,1,rep,name=events" json:"events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsgList_GameEvents) Reset() {
	*x = CSVCMsgList_GameEvents{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsgList_GameEvents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsgList_GameEvents) ProtoMessage() {}

func (x *CSVCMsgList_GameEvents) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsgList_GameEvents.ProtoReflect.Descriptor instead.
func (*CSVCMsgList_GameEvents) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{16}
}

func (x *CSVCMsgList_GameEvents) GetEvents() []*CSVCMsgList_GameEventsEventT {
	if x != nil {
		return x.Events
	}
	return nil
}

type CNETMsg_SpawnGroup_Load struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	Worldname              *string                `protobuf:"bytes,1,opt,name=worldname" json:"worldname,omitempty"`
	Entitylumpname         *string                `protobuf:"bytes,2,opt,name=entitylumpname" json:"entitylumpname,omitempty"`
	Entityfiltername       *string                `protobuf:"bytes,3,opt,name=entityfiltername" json:"entityfiltername,omitempty"`
	Spawngrouphandle       *uint32                `protobuf:"varint,4,opt,name=spawngrouphandle" json:"spawngrouphandle,omitempty"`
	Spawngroupownerhandle  *uint32                `protobuf:"varint,5,opt,name=spawngroupownerhandle" json:"spawngroupownerhandle,omitempty"`
	WorldOffsetPos         *CMsgVector            `protobuf:"bytes,6,opt,name=world_offset_pos,json=worldOffsetPos" json:"world_offset_pos,omitempty"`
	WorldOffsetAngle       *CMsgQAngle            `protobuf:"bytes,7,opt,name=world_offset_angle,json=worldOffsetAngle" json:"world_offset_angle,omitempty"`
	Spawngroupmanifest     []byte                 `protobuf:"bytes,8,opt,name=spawngroupmanifest" json:"spawngroupmanifest,omitempty"`
	Flags                  *uint32                `protobuf:"varint,9,opt,name=flags" json:"flags,omitempty"`
	Tickcount              *int32                 `protobuf:"varint,10,opt,name=tickcount" json:"tickcount,omitempty"`
	Manifestincomplete     *bool                  `protobuf:"varint,11,opt,name=manifestincomplete" json:"manifestincomplete,omitempty"`
	Localnamefixup         *string                `protobuf:"bytes,12,opt,name=localnamefixup" json:"localnamefixup,omitempty"`
	Parentnamefixup        *string                `protobuf:"bytes,13,opt,name=parentnamefixup" json:"parentnamefixup,omitempty"`
	Manifestloadpriority   *int32                 `protobuf:"varint,14,opt,name=manifestloadpriority" json:"manifestloadpriority,omitempty"`
	Worldgroupid           *uint32                `protobuf:"varint,15,opt,name=worldgroupid" json:"worldgroupid,omitempty"`
	Creationsequence       *uint32                `protobuf:"varint,16,opt,name=creationsequence" json:"creationsequence,omitempty"`
	Savegamefilename       *string                `protobuf:"bytes,17,opt,name=savegamefilename" json:"savegamefilename,omitempty"`
	Spawngroupparenthandle *uint32                `protobuf:"varint,18,opt,name=spawngroupparenthandle" json:"spawngroupparenthandle,omitempty"`
	Leveltransition        *bool                  `protobuf:"varint,19,opt,name=leveltransition" json:"leveltransition,omitempty"`
	Worldgroupname         *string                `protobuf:"bytes,20,opt,name=worldgroupname" json:"worldgroupname,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *CNETMsg_SpawnGroup_Load) Reset() {
	*x = CNETMsg_SpawnGroup_Load{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_SpawnGroup_Load) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_SpawnGroup_Load) ProtoMessage() {}

func (x *CNETMsg_SpawnGroup_Load) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_SpawnGroup_Load.ProtoReflect.Descriptor instead.
func (*CNETMsg_SpawnGroup_Load) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{17}
}

func (x *CNETMsg_SpawnGroup_Load) GetWorldname() string {
	if x != nil && x.Worldname != nil {
		return *x.Worldname
	}
	return ""
}

func (x *CNETMsg_SpawnGroup_Load) GetEntitylumpname() string {
	if x != nil && x.Entitylumpname != nil {
		return *x.Entitylumpname
	}
	return ""
}

func (x *CNETMsg_SpawnGroup_Load) GetEntityfiltername() string {
	if x != nil && x.Entityfiltername != nil {
		return *x.Entityfiltername
	}
	return ""
}

func (x *CNETMsg_SpawnGroup_Load) GetSpawngrouphandle() uint32 {
	if x != nil && x.Spawngrouphandle != nil {
		return *x.Spawngrouphandle
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Load) GetSpawngroupownerhandle() uint32 {
	if x != nil && x.Spawngroupownerhandle != nil {
		return *x.Spawngroupownerhandle
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Load) GetWorldOffsetPos() *CMsgVector {
	if x != nil {
		return x.WorldOffsetPos
	}
	return nil
}

func (x *CNETMsg_SpawnGroup_Load) GetWorldOffsetAngle() *CMsgQAngle {
	if x != nil {
		return x.WorldOffsetAngle
	}
	return nil
}

func (x *CNETMsg_SpawnGroup_Load) GetSpawngroupmanifest() []byte {
	if x != nil {
		return x.Spawngroupmanifest
	}
	return nil
}

func (x *CNETMsg_SpawnGroup_Load) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Load) GetTickcount() int32 {
	if x != nil && x.Tickcount != nil {
		return *x.Tickcount
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Load) GetManifestincomplete() bool {
	if x != nil && x.Manifestincomplete != nil {
		return *x.Manifestincomplete
	}
	return false
}

func (x *CNETMsg_SpawnGroup_Load) GetLocalnamefixup() string {
	if x != nil && x.Localnamefixup != nil {
		return *x.Localnamefixup
	}
	return ""
}

func (x *CNETMsg_SpawnGroup_Load) GetParentnamefixup() string {
	if x != nil && x.Parentnamefixup != nil {
		return *x.Parentnamefixup
	}
	return ""
}

func (x *CNETMsg_SpawnGroup_Load) GetManifestloadpriority() int32 {
	if x != nil && x.Manifestloadpriority != nil {
		return *x.Manifestloadpriority
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Load) GetWorldgroupid() uint32 {
	if x != nil && x.Worldgroupid != nil {
		return *x.Worldgroupid
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Load) GetCreationsequence() uint32 {
	if x != nil && x.Creationsequence != nil {
		return *x.Creationsequence
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Load) GetSavegamefilename() string {
	if x != nil && x.Savegamefilename != nil {
		return *x.Savegamefilename
	}
	return ""
}

func (x *CNETMsg_SpawnGroup_Load) GetSpawngroupparenthandle() uint32 {
	if x != nil && x.Spawngroupparenthandle != nil {
		return *x.Spawngroupparenthandle
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Load) GetLeveltransition() bool {
	if x != nil && x.Leveltransition != nil {
		return *x.Leveltransition
	}
	return false
}

func (x *CNETMsg_SpawnGroup_Load) GetWorldgroupname() string {
	if x != nil && x.Worldgroupname != nil {
		return *x.Worldgroupname
	}
	return ""
}

type CNETMsg_SpawnGroup_ManifestUpdate struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Spawngrouphandle   *uint32                `protobuf:"varint,1,opt,name=spawngrouphandle" json:"spawngrouphandle,omitempty"`
	Spawngroupmanifest []byte                 `protobuf:"bytes,2,opt,name=spawngroupmanifest" json:"spawngroupmanifest,omitempty"`
	Manifestincomplete *bool                  `protobuf:"varint,3,opt,name=manifestincomplete" json:"manifestincomplete,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *CNETMsg_SpawnGroup_ManifestUpdate) Reset() {
	*x = CNETMsg_SpawnGroup_ManifestUpdate{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_SpawnGroup_ManifestUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_SpawnGroup_ManifestUpdate) ProtoMessage() {}

func (x *CNETMsg_SpawnGroup_ManifestUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_SpawnGroup_ManifestUpdate.ProtoReflect.Descriptor instead.
func (*CNETMsg_SpawnGroup_ManifestUpdate) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{18}
}

func (x *CNETMsg_SpawnGroup_ManifestUpdate) GetSpawngrouphandle() uint32 {
	if x != nil && x.Spawngrouphandle != nil {
		return *x.Spawngrouphandle
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_ManifestUpdate) GetSpawngroupmanifest() []byte {
	if x != nil {
		return x.Spawngroupmanifest
	}
	return nil
}

func (x *CNETMsg_SpawnGroup_ManifestUpdate) GetManifestincomplete() bool {
	if x != nil && x.Manifestincomplete != nil {
		return *x.Manifestincomplete
	}
	return false
}

type CNETMsg_SpawnGroup_SetCreationTick struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Spawngrouphandle *uint32                `protobuf:"varint,1,opt,name=spawngrouphandle" json:"spawngrouphandle,omitempty"`
	Tickcount        *int32                 `protobuf:"varint,2,opt,name=tickcount" json:"tickcount,omitempty"`
	Creationsequence *uint32                `protobuf:"varint,3,opt,name=creationsequence" json:"creationsequence,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CNETMsg_SpawnGroup_SetCreationTick) Reset() {
	*x = CNETMsg_SpawnGroup_SetCreationTick{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_SpawnGroup_SetCreationTick) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_SpawnGroup_SetCreationTick) ProtoMessage() {}

func (x *CNETMsg_SpawnGroup_SetCreationTick) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_SpawnGroup_SetCreationTick.ProtoReflect.Descriptor instead.
func (*CNETMsg_SpawnGroup_SetCreationTick) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{19}
}

func (x *CNETMsg_SpawnGroup_SetCreationTick) GetSpawngrouphandle() uint32 {
	if x != nil && x.Spawngrouphandle != nil {
		return *x.Spawngrouphandle
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_SetCreationTick) GetTickcount() int32 {
	if x != nil && x.Tickcount != nil {
		return *x.Tickcount
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_SetCreationTick) GetCreationsequence() uint32 {
	if x != nil && x.Creationsequence != nil {
		return *x.Creationsequence
	}
	return 0
}

type CNETMsg_SpawnGroup_Unload struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Spawngrouphandle *uint32                `protobuf:"varint,1,opt,name=spawngrouphandle" json:"spawngrouphandle,omitempty"`
	Flags            *uint32                `protobuf:"varint,2,opt,name=flags" json:"flags,omitempty"`
	Tickcount        *int32                 `protobuf:"varint,3,opt,name=tickcount" json:"tickcount,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CNETMsg_SpawnGroup_Unload) Reset() {
	*x = CNETMsg_SpawnGroup_Unload{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_SpawnGroup_Unload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_SpawnGroup_Unload) ProtoMessage() {}

func (x *CNETMsg_SpawnGroup_Unload) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_SpawnGroup_Unload.ProtoReflect.Descriptor instead.
func (*CNETMsg_SpawnGroup_Unload) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{20}
}

func (x *CNETMsg_SpawnGroup_Unload) GetSpawngrouphandle() uint32 {
	if x != nil && x.Spawngrouphandle != nil {
		return *x.Spawngrouphandle
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Unload) GetFlags() uint32 {
	if x != nil && x.Flags != nil {
		return *x.Flags
	}
	return 0
}

func (x *CNETMsg_SpawnGroup_Unload) GetTickcount() int32 {
	if x != nil && x.Tickcount != nil {
		return *x.Tickcount
	}
	return 0
}

type CNETMsg_SpawnGroup_LoadCompleted struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Spawngrouphandle *uint32                `protobuf:"varint,1,opt,name=spawngrouphandle" json:"spawngrouphandle,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CNETMsg_SpawnGroup_LoadCompleted) Reset() {
	*x = CNETMsg_SpawnGroup_LoadCompleted{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_SpawnGroup_LoadCompleted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_SpawnGroup_LoadCompleted) ProtoMessage() {}

func (x *CNETMsg_SpawnGroup_LoadCompleted) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_SpawnGroup_LoadCompleted.ProtoReflect.Descriptor instead.
func (*CNETMsg_SpawnGroup_LoadCompleted) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{21}
}

func (x *CNETMsg_SpawnGroup_LoadCompleted) GetSpawngrouphandle() uint32 {
	if x != nil && x.Spawngrouphandle != nil {
		return *x.Spawngrouphandle
	}
	return 0
}

type CSVCMsg_GameSessionConfiguration struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	IsMultiplayer   *bool                  `protobuf:"varint,1,opt,name=is_multiplayer,json=isMultiplayer" json:"is_multiplayer,omitempty"`
	IsLoadsavegame  *bool                  `protobuf:"varint,2,opt,name=is_loadsavegame,json=isLoadsavegame" json:"is_loadsavegame,omitempty"`
	IsBackgroundMap *bool                  `protobuf:"varint,3,opt,name=is_background_map,json=isBackgroundMap" json:"is_background_map,omitempty"`
	IsHeadless      *bool                  `protobuf:"varint,4,opt,name=is_headless,json=isHeadless" json:"is_headless,omitempty"`
	MinClientLimit  *uint32                `protobuf:"varint,5,opt,name=min_client_limit,json=minClientLimit" json:"min_client_limit,omitempty"`
	MaxClientLimit  *uint32                `protobuf:"varint,6,opt,name=max_client_limit,json=maxClientLimit" json:"max_client_limit,omitempty"`
	MaxClients      *uint32                `protobuf:"varint,7,opt,name=max_clients,json=maxClients" json:"max_clients,omitempty"`
	TickInterval    *uint32                `protobuf:"fixed32,8,opt,name=tick_interval,json=tickInterval" json:"tick_interval,omitempty"`
	Hostname        *string                `protobuf:"bytes,9,opt,name=hostname" json:"hostname,omitempty"`
	Savegamename    *string                `protobuf:"bytes,10,opt,name=savegamename" json:"savegamename,omitempty"`
	S1Mapname       *string                `protobuf:"bytes,11,opt,name=s1_mapname,json=s1Mapname" json:"s1_mapname,omitempty"`
	Gamemode        *string                `protobuf:"bytes,12,opt,name=gamemode" json:"gamemode,omitempty"`
	ServerIpAddress *string                `protobuf:"bytes,13,opt,name=server_ip_address,json=serverIpAddress" json:"server_ip_address,omitempty"`
	Data            []byte                 `protobuf:"bytes,14,opt,name=data" json:"data,omitempty"`
	IsLocalonly     *bool                  `protobuf:"varint,15,opt,name=is_localonly,json=isLocalonly" json:"is_localonly,omitempty"`
	NoSteamServer   *bool                  `protobuf:"varint,19,opt,name=no_steam_server,json=noSteamServer" json:"no_steam_server,omitempty"`
	IsTransition    *bool                  `protobuf:"varint,16,opt,name=is_transition,json=isTransition" json:"is_transition,omitempty"`
	Previouslevel   *string                `protobuf:"bytes,17,opt,name=previouslevel" json:"previouslevel,omitempty"`
	Landmarkname    *string                `protobuf:"bytes,18,opt,name=landmarkname" json:"landmarkname,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CSVCMsg_GameSessionConfiguration) Reset() {
	*x = CSVCMsg_GameSessionConfiguration{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_GameSessionConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_GameSessionConfiguration) ProtoMessage() {}

func (x *CSVCMsg_GameSessionConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_GameSessionConfiguration.ProtoReflect.Descriptor instead.
func (*CSVCMsg_GameSessionConfiguration) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{22}
}

func (x *CSVCMsg_GameSessionConfiguration) GetIsMultiplayer() bool {
	if x != nil && x.IsMultiplayer != nil {
		return *x.IsMultiplayer
	}
	return false
}

func (x *CSVCMsg_GameSessionConfiguration) GetIsLoadsavegame() bool {
	if x != nil && x.IsLoadsavegame != nil {
		return *x.IsLoadsavegame
	}
	return false
}

func (x *CSVCMsg_GameSessionConfiguration) GetIsBackgroundMap() bool {
	if x != nil && x.IsBackgroundMap != nil {
		return *x.IsBackgroundMap
	}
	return false
}

func (x *CSVCMsg_GameSessionConfiguration) GetIsHeadless() bool {
	if x != nil && x.IsHeadless != nil {
		return *x.IsHeadless
	}
	return false
}

func (x *CSVCMsg_GameSessionConfiguration) GetMinClientLimit() uint32 {
	if x != nil && x.MinClientLimit != nil {
		return *x.MinClientLimit
	}
	return 0
}

func (x *CSVCMsg_GameSessionConfiguration) GetMaxClientLimit() uint32 {
	if x != nil && x.MaxClientLimit != nil {
		return *x.MaxClientLimit
	}
	return 0
}

func (x *CSVCMsg_GameSessionConfiguration) GetMaxClients() uint32 {
	if x != nil && x.MaxClients != nil {
		return *x.MaxClients
	}
	return 0
}

func (x *CSVCMsg_GameSessionConfiguration) GetTickInterval() uint32 {
	if x != nil && x.TickInterval != nil {
		return *x.TickInterval
	}
	return 0
}

func (x *CSVCMsg_GameSessionConfiguration) GetHostname() string {
	if x != nil && x.Hostname != nil {
		return *x.Hostname
	}
	return ""
}

func (x *CSVCMsg_GameSessionConfiguration) GetSavegamename() string {
	if x != nil && x.Savegamename != nil {
		return *x.Savegamename
	}
	return ""
}

func (x *CSVCMsg_GameSessionConfiguration) GetS1Mapname() string {
	if x != nil && x.S1Mapname != nil {
		return *x.S1Mapname
	}
	return ""
}

func (x *CSVCMsg_GameSessionConfiguration) GetGamemode() string {
	if x != nil && x.Gamemode != nil {
		return *x.Gamemode
	}
	return ""
}

func (x *CSVCMsg_GameSessionConfiguration) GetServerIpAddress() string {
	if x != nil && x.ServerIpAddress != nil {
		return *x.ServerIpAddress
	}
	return ""
}

func (x *CSVCMsg_GameSessionConfiguration) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CSVCMsg_GameSessionConfiguration) GetIsLocalonly() bool {
	if x != nil && x.IsLocalonly != nil {
		return *x.IsLocalonly
	}
	return false
}

func (x *CSVCMsg_GameSessionConfiguration) GetNoSteamServer() bool {
	if x != nil && x.NoSteamServer != nil {
		return *x.NoSteamServer
	}
	return false
}

func (x *CSVCMsg_GameSessionConfiguration) GetIsTransition() bool {
	if x != nil && x.IsTransition != nil {
		return *x.IsTransition
	}
	return false
}

func (x *CSVCMsg_GameSessionConfiguration) GetPreviouslevel() string {
	if x != nil && x.Previouslevel != nil {
		return *x.Previouslevel
	}
	return ""
}

func (x *CSVCMsg_GameSessionConfiguration) GetLandmarkname() string {
	if x != nil && x.Landmarkname != nil {
		return *x.Landmarkname
	}
	return ""
}

type CNETMsg_DebugOverlay struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Etype         *int32                 `protobuf:"varint,1,opt,name=etype" json:"etype,omitempty"`
	Vectors       []*CMsgVector          `protobuf:"bytes,2,rep,name=vectors" json:"vectors,omitempty"`
	Colors        []*CMsgRGBA            `protobuf:"bytes,3,rep,name=colors" json:"colors,omitempty"`
	Dimensions    []float32              `protobuf:"fixed32,4,rep,name=dimensions" json:"dimensions,omitempty"`
	Times         []float32              `protobuf:"fixed32,5,rep,name=times" json:"times,omitempty"`
	Bools         []bool                 `protobuf:"varint,6,rep,name=bools" json:"bools,omitempty"`
	Uint64S       []uint64               `protobuf:"varint,7,rep,name=uint64s" json:"uint64s,omitempty"`
	Strings       []string               `protobuf:"bytes,8,rep,name=strings" json:"strings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CNETMsg_DebugOverlay) Reset() {
	*x = CNETMsg_DebugOverlay{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CNETMsg_DebugOverlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CNETMsg_DebugOverlay) ProtoMessage() {}

func (x *CNETMsg_DebugOverlay) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CNETMsg_DebugOverlay.ProtoReflect.Descriptor instead.
func (*CNETMsg_DebugOverlay) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{23}
}

func (x *CNETMsg_DebugOverlay) GetEtype() int32 {
	if x != nil && x.Etype != nil {
		return *x.Etype
	}
	return 0
}

func (x *CNETMsg_DebugOverlay) GetVectors() []*CMsgVector {
	if x != nil {
		return x.Vectors
	}
	return nil
}

func (x *CNETMsg_DebugOverlay) GetColors() []*CMsgRGBA {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *CNETMsg_DebugOverlay) GetDimensions() []float32 {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *CNETMsg_DebugOverlay) GetTimes() []float32 {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *CNETMsg_DebugOverlay) GetBools() []bool {
	if x != nil {
		return x.Bools
	}
	return nil
}

func (x *CNETMsg_DebugOverlay) GetUint64S() []uint64 {
	if x != nil {
		return x.Uint64S
	}
	return nil
}

func (x *CNETMsg_DebugOverlay) GetStrings() []string {
	if x != nil {
		return x.Strings
	}
	return nil
}

type CMsg_CVars_CVar struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          *string                `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CMsg_CVars_CVar) Reset() {
	*x = CMsg_CVars_CVar{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CMsg_CVars_CVar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CMsg_CVars_CVar) ProtoMessage() {}

func (x *CMsg_CVars_CVar) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CMsg_CVars_CVar.ProtoReflect.Descriptor instead.
func (*CMsg_CVars_CVar) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CMsg_CVars_CVar) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CMsg_CVars_CVar) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type CSVCMsg_GameEventKeyT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *int32                 `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	ValString     *string                `protobuf:"bytes,2,opt,name=val_string,json=valString" json:"val_string,omitempty"`
	ValFloat      *float32               `protobuf:"fixed32,3,opt,name=val_float,json=valFloat" json:"val_float,omitempty"`
	ValLong       *int32                 `protobuf:"varint,4,opt,name=val_long,json=valLong" json:"val_long,omitempty"`
	ValShort      *int32                 `protobuf:"varint,5,opt,name=val_short,json=valShort" json:"val_short,omitempty"`
	ValByte       *int32                 `protobuf:"varint,6,opt,name=val_byte,json=valByte" json:"val_byte,omitempty"`
	ValBool       *bool                  `protobuf:"varint,7,opt,name=val_bool,json=valBool" json:"val_bool,omitempty"`
	ValUint64     *uint64                `protobuf:"varint,8,opt,name=val_uint64,json=valUint64" json:"val_uint64,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsg_GameEventKeyT) Reset() {
	*x = CSVCMsg_GameEventKeyT{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsg_GameEventKeyT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsg_GameEventKeyT) ProtoMessage() {}

func (x *CSVCMsg_GameEventKeyT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsg_GameEventKeyT.ProtoReflect.Descriptor instead.
func (*CSVCMsg_GameEventKeyT) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{15, 0}
}

func (x *CSVCMsg_GameEventKeyT) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CSVCMsg_GameEventKeyT) GetValString() string {
	if x != nil && x.ValString != nil {
		return *x.ValString
	}
	return ""
}

func (x *CSVCMsg_GameEventKeyT) GetValFloat() float32 {
	if x != nil && x.ValFloat != nil {
		return *x.ValFloat
	}
	return 0
}

func (x *CSVCMsg_GameEventKeyT) GetValLong() int32 {
	if x != nil && x.ValLong != nil {
		return *x.ValLong
	}
	return 0
}

func (x *CSVCMsg_GameEventKeyT) GetValShort() int32 {
	if x != nil && x.ValShort != nil {
		return *x.ValShort
	}
	return 0
}

func (x *CSVCMsg_GameEventKeyT) GetValByte() int32 {
	if x != nil && x.ValByte != nil {
		return *x.ValByte
	}
	return 0
}

func (x *CSVCMsg_GameEventKeyT) GetValBool() bool {
	if x != nil && x.ValBool != nil {
		return *x.ValBool
	}
	return false
}

func (x *CSVCMsg_GameEventKeyT) GetValUint64() uint64 {
	if x != nil && x.ValUint64 != nil {
		return *x.ValUint64
	}
	return 0
}

type CSVCMsgList_GameEventsEventT struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tick          *int32                 `protobuf:"varint,1,opt,name=tick" json:"tick,omitempty"`
	Event         *CSVCMsg_GameEvent     `protobuf:"bytes,2,opt,name=event" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CSVCMsgList_GameEventsEventT) Reset() {
	*x = CSVCMsgList_GameEventsEventT{}
	mi := &file_s2_networkbasetypes_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CSVCMsgList_GameEventsEventT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CSVCMsgList_GameEventsEventT) ProtoMessage() {}

func (x *CSVCMsgList_GameEventsEventT) ProtoReflect() protoreflect.Message {
	mi := &file_s2_networkbasetypes_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CSVCMsgList_GameEventsEventT.ProtoReflect.Descriptor instead.
func (*CSVCMsgList_GameEventsEventT) Descriptor() ([]byte, []int) {
	return file_s2_networkbasetypes_proto_rawDescGZIP(), []int{16, 0}
}

func (x *CSVCMsgList_GameEventsEventT) GetTick() int32 {
	if x != nil && x.Tick != nil {
		return *x.Tick
	}
	return 0
}

func (x *CSVCMsgList_GameEventsEventT) GetEvent() *CSVCMsg_GameEvent {
	if x != nil {
		return x.Event
	}
	return nil
}

var file_s2_networkbasetypes_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*int32)(nil),
		Field:         50000,
		Name:          "com.github.markus_wa.demoinfocs_golang.s2.maximum_size_bytes",
		Tag:           "varint,50000,opt,name=maximum_size_bytes",
		Filename:      "s2/networkbasetypes.proto",
	},
}

// Extension fields to descriptorpb.MessageOptions.
var (
	// optional int32 maximum_size_bytes = 50000;
	E_MaximumSizeBytes = &file_s2_networkbasetypes_proto_extTypes[0]
)

var File_s2_networkbasetypes_proto protoreflect.FileDescriptor

const file_s2_networkbasetypes_proto_rawDesc = "" +
	"\n" +
	"\x19s2/networkbasetypes.proto\x12)com.github.markus_wa.demoinfocs_golang.s2\x1a google/protobuf/descriptor.proto\x1a\x1bs2/network_connection.proto\"D\n" +
	"\n" +
	"CMsgVector\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x03 \x01(\x02R\x01z\x12\f\n" +
	"\x01w\x18\x04 \x01(\x02R\x01w\"*\n" +
	"\fCMsgVector2D\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\"6\n" +
	"\n" +
	"CMsgQAngle\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x03 \x01(\x02R\x01z\"H\n" +
	"\x0eCMsgQuaternion\x12\f\n" +
	"\x01x\x18\x01 \x01(\x02R\x01x\x12\f\n" +
	"\x01y\x18\x02 \x01(\x02R\x01y\x12\f\n" +
	"\x01z\x18\x03 \x01(\x02R\x01z\x12\f\n" +
	"\x01w\x18\x04 \x01(\x02R\x01w\"\xd5\x01\n" +
	"\rCMsgTransform\x12Q\n" +
	"\bposition\x18\x01 \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgVectorR\bposition\x12\x14\n" +
	"\x05scale\x18\x02 \x01(\x02R\x05scale\x12[\n" +
	"\vorientation\x18\x03 \x01(\v29.com.github.markus_wa.demoinfocs_golang.s2.CMsgQuaternionR\vorientation\"B\n" +
	"\bCMsgRGBA\x12\f\n" +
	"\x01r\x18\x01 \x01(\x05R\x01r\x12\f\n" +
	"\x01g\x18\x02 \x01(\x05R\x01g\x12\f\n" +
	"\x01b\x18\x03 \x01(\x05R\x01b\x12\f\n" +
	"\x01a\x18\x04 \x01(\x05R\x01a\"\xa2\x01\n" +
	"\x0eCMsgPlayerInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04xuid\x18\x02 \x01(\x06R\x04xuid\x12\x16\n" +
	"\x06userid\x18\x03 \x01(\x05R\x06userid\x12\x18\n" +
	"\asteamid\x18\x04 \x01(\x06R\asteamid\x12\x1e\n" +
	"\n" +
	"fakeplayer\x18\x05 \x01(\bR\n" +
	"fakeplayer\x12\x16\n" +
	"\x06ishltv\x18\x06 \x01(\bR\x06ishltv\";\n" +
	"\n" +
	"CEntityMsg\x12-\n" +
	"\rtarget_entity\x18\x01 \x01(\r:\b16777215R\ftargetEntity\"\x90\x01\n" +
	"\n" +
	"CMsg_CVars\x12P\n" +
	"\x05cvars\x18\x01 \x03(\v2:.com.github.markus_wa.demoinfocs_golang.s2.CMsg_CVars.CVarR\x05cvars\x1a0\n" +
	"\x04CVar\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\r\n" +
	"\vCNETMsg_NOP\"-\n" +
	"\x17CNETMsg_SplitScreenUser\x12\x12\n" +
	"\x04slot\x18\x01 \x01(\x05R\x04slot\"\xa8\x04\n" +
	"\fCNETMsg_Tick\x12\x12\n" +
	"\x04tick\x18\x01 \x01(\rR\x04tick\x121\n" +
	"\x14host_computationtime\x18\x04 \x01(\rR\x13hostComputationtime\x12K\n" +
	"\"host_computationtime_std_deviation\x18\x05 \x01(\rR\x1fhostComputationtimeStdDeviation\x12(\n" +
	"\x10legacy_host_loss\x18\a \x01(\rR\x0elegacyHostLoss\x12:\n" +
	"\x19host_unfiltered_frametime\x18\b \x01(\rR\x17hostUnfilteredFrametime\x12*\n" +
	"\x11hltv_replay_flags\x18\t \x01(\rR\x0fhltvReplayFlags\x12,\n" +
	"\x12expected_long_tick\x18\n" +
	" \x01(\rR\x10expectedLongTick\x129\n" +
	"\x19expected_long_tick_reason\x18\v \x01(\tR\x16expectedLongTickReason\x12:\n" +
	"\x1ahost_frame_dropped_pct_x10\x18\f \x01(\rR\x16hostFrameDroppedPctX10\x12M\n" +
	"$host_frame_irregular_arrival_pct_x10\x18\r \x01(\rR\x1fhostFrameIrregularArrivalPctX10\"V\n" +
	"\x11CNETMsg_StringCmd\x12\x18\n" +
	"\acommand\x18\x01 \x01(\tR\acommand\x12'\n" +
	"\x0fprediction_sync\x18\x02 \x01(\rR\x0epredictionSync\"k\n" +
	"\x11CNETMsg_SetConVar\x12O\n" +
	"\aconvars\x18\x01 \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsg_CVarsR\aconvars:\x05\x80\xb5\x18\x80 \"\xb5\x02\n" +
	"\x13CNETMsg_SignonState\x12m\n" +
	"\fsignon_state\x18\x01 \x01(\x0e28.com.github.markus_wa.demoinfocs_golang.s2.SignonState_t:\x10SIGNONSTATE_NONER\vsignonState\x12\x1f\n" +
	"\vspawn_count\x18\x02 \x01(\rR\n" +
	"spawnCount\x12,\n" +
	"\x12num_server_players\x18\x03 \x01(\rR\x10numServerPlayers\x12-\n" +
	"\x12players_networkids\x18\x04 \x03(\tR\x11playersNetworkids\x12\x19\n" +
	"\bmap_name\x18\x05 \x01(\tR\amapName\x12\x16\n" +
	"\x06addons\x18\x06 \x01(\tR\x06addons\"\x8b\x03\n" +
	"\x11CSVCMsg_GameEvent\x12\x1d\n" +
	"\n" +
	"event_name\x18\x01 \x01(\tR\teventName\x12\x18\n" +
	"\aeventid\x18\x02 \x01(\x05R\aeventid\x12V\n" +
	"\x04keys\x18\x03 \x03(\v2B.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEvent.key_tR\x04keys\x1a\xe4\x01\n" +
	"\x05key_t\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x1d\n" +
	"\n" +
	"val_string\x18\x02 \x01(\tR\tvalString\x12\x1b\n" +
	"\tval_float\x18\x03 \x01(\x02R\bvalFloat\x12\x19\n" +
	"\bval_long\x18\x04 \x01(\x05R\avalLong\x12\x1b\n" +
	"\tval_short\x18\x05 \x01(\x05R\bvalShort\x12\x19\n" +
	"\bval_byte\x18\x06 \x01(\x05R\avalByte\x12\x19\n" +
	"\bval_bool\x18\a \x01(\bR\avalBool\x12\x1d\n" +
	"\n" +
	"val_uint64\x18\b \x01(\x04R\tvalUint64\"\xee\x01\n" +
	"\x16CSVCMsgList_GameEvents\x12a\n" +
	"\x06events\x18\x01 \x03(\v2I.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsgList_GameEvents.event_tR\x06events\x1aq\n" +
	"\aevent_t\x12\x12\n" +
	"\x04tick\x18\x01 \x01(\x05R\x04tick\x12R\n" +
	"\x05event\x18\x02 \x01(\v2<.com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEventR\x05event\"\xdb\a\n" +
	"\x17CNETMsg_SpawnGroup_Load\x12\x1c\n" +
	"\tworldname\x18\x01 \x01(\tR\tworldname\x12&\n" +
	"\x0eentitylumpname\x18\x02 \x01(\tR\x0eentitylumpname\x12*\n" +
	"\x10entityfiltername\x18\x03 \x01(\tR\x10entityfiltername\x12*\n" +
	"\x10spawngrouphandle\x18\x04 \x01(\rR\x10spawngrouphandle\x124\n" +
	"\x15spawngroupownerhandle\x18\x05 \x01(\rR\x15spawngroupownerhandle\x12_\n" +
	"\x10world_offset_pos\x18\x06 \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgVectorR\x0eworldOffsetPos\x12c\n" +
	"\x12world_offset_angle\x18\a \x01(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngleR\x10worldOffsetAngle\x12.\n" +
	"\x12spawngroupmanifest\x18\b \x01(\fR\x12spawngroupmanifest\x12\x14\n" +
	"\x05flags\x18\t \x01(\rR\x05flags\x12\x1c\n" +
	"\ttickcount\x18\n" +
	" \x01(\x05R\ttickcount\x12.\n" +
	"\x12manifestincomplete\x18\v \x01(\bR\x12manifestincomplete\x12&\n" +
	"\x0elocalnamefixup\x18\f \x01(\tR\x0elocalnamefixup\x12(\n" +
	"\x0fparentnamefixup\x18\r \x01(\tR\x0fparentnamefixup\x122\n" +
	"\x14manifestloadpriority\x18\x0e \x01(\x05R\x14manifestloadpriority\x12\"\n" +
	"\fworldgroupid\x18\x0f \x01(\rR\fworldgroupid\x12*\n" +
	"\x10creationsequence\x18\x10 \x01(\rR\x10creationsequence\x12*\n" +
	"\x10savegamefilename\x18\x11 \x01(\tR\x10savegamefilename\x126\n" +
	"\x16spawngroupparenthandle\x18\x12 \x01(\rR\x16spawngroupparenthandle\x12(\n" +
	"\x0fleveltransition\x18\x13 \x01(\bR\x0fleveltransition\x12&\n" +
	"\x0eworldgroupname\x18\x14 \x01(\tR\x0eworldgroupname:\x06\x80\xb5\x18\x80\x80\b\"\xaf\x01\n" +
	"!CNETMsg_SpawnGroup_ManifestUpdate\x12*\n" +
	"\x10spawngrouphandle\x18\x01 \x01(\rR\x10spawngrouphandle\x12.\n" +
	"\x12spawngroupmanifest\x18\x02 \x01(\fR\x12spawngroupmanifest\x12.\n" +
	"\x12manifestincomplete\x18\x03 \x01(\bR\x12manifestincomplete\"\x9a\x01\n" +
	"\"CNETMsg_SpawnGroup_SetCreationTick\x12*\n" +
	"\x10spawngrouphandle\x18\x01 \x01(\rR\x10spawngrouphandle\x12\x1c\n" +
	"\ttickcount\x18\x02 \x01(\x05R\ttickcount\x12*\n" +
	"\x10creationsequence\x18\x03 \x01(\rR\x10creationsequence\"{\n" +
	"\x19CNETMsg_SpawnGroup_Unload\x12*\n" +
	"\x10spawngrouphandle\x18\x01 \x01(\rR\x10spawngrouphandle\x12\x14\n" +
	"\x05flags\x18\x02 \x01(\rR\x05flags\x12\x1c\n" +
	"\ttickcount\x18\x03 \x01(\x05R\ttickcount\"N\n" +
	" CNETMsg_SpawnGroup_LoadCompleted\x12*\n" +
	"\x10spawngrouphandle\x18\x01 \x01(\rR\x10spawngrouphandle\"\xce\x05\n" +
	" CSVCMsg_GameSessionConfiguration\x12%\n" +
	"\x0eis_multiplayer\x18\x01 \x01(\bR\risMultiplayer\x12'\n" +
	"\x0fis_loadsavegame\x18\x02 \x01(\bR\x0eisLoadsavegame\x12*\n" +
	"\x11is_background_map\x18\x03 \x01(\bR\x0fisBackgroundMap\x12\x1f\n" +
	"\vis_headless\x18\x04 \x01(\bR\n" +
	"isHeadless\x12(\n" +
	"\x10min_client_limit\x18\x05 \x01(\rR\x0eminClientLimit\x12(\n" +
	"\x10max_client_limit\x18\x06 \x01(\rR\x0emaxClientLimit\x12\x1f\n" +
	"\vmax_clients\x18\a \x01(\rR\n" +
	"maxClients\x12#\n" +
	"\rtick_interval\x18\b \x01(\aR\ftickInterval\x12\x1a\n" +
	"\bhostname\x18\t \x01(\tR\bhostname\x12\"\n" +
	"\fsavegamename\x18\n" +
	" \x01(\tR\fsavegamename\x12\x1d\n" +
	"\n" +
	"s1_mapname\x18\v \x01(\tR\ts1Mapname\x12\x1a\n" +
	"\bgamemode\x18\f \x01(\tR\bgamemode\x12*\n" +
	"\x11server_ip_address\x18\r \x01(\tR\x0fserverIpAddress\x12\x12\n" +
	"\x04data\x18\x0e \x01(\fR\x04data\x12!\n" +
	"\fis_localonly\x18\x0f \x01(\bR\visLocalonly\x12&\n" +
	"\x0fno_steam_server\x18\x13 \x01(\bR\rnoSteamServer\x12#\n" +
	"\ris_transition\x18\x10 \x01(\bR\fisTransition\x12$\n" +
	"\rpreviouslevel\x18\x11 \x01(\tR\rpreviouslevel\x12\"\n" +
	"\flandmarkname\x18\x12 \x01(\tR\flandmarkname\"\xca\x02\n" +
	"\x14CNETMsg_DebugOverlay\x12\x14\n" +
	"\x05etype\x18\x01 \x01(\x05R\x05etype\x12O\n" +
	"\avectors\x18\x02 \x03(\v25.com.github.markus_wa.demoinfocs_golang.s2.CMsgVectorR\avectors\x12K\n" +
	"\x06colors\x18\x03 \x03(\v23.com.github.markus_wa.demoinfocs_golang.s2.CMsgRGBAR\x06colors\x12\x1e\n" +
	"\n" +
	"dimensions\x18\x04 \x03(\x02R\n" +
	"dimensions\x12\x14\n" +
	"\x05times\x18\x05 \x03(\x02R\x05times\x12\x14\n" +
	"\x05bools\x18\x06 \x03(\bR\x05bools\x12\x18\n" +
	"\auint64s\x18\a \x03(\x04R\auint64s\x12\x18\n" +
	"\astrings\x18\b \x03(\tR\astrings*\xd4\x01\n" +
	"\rSignonState_t\x12\x14\n" +
	"\x10SIGNONSTATE_NONE\x10\x00\x12\x19\n" +
	"\x15SIGNONSTATE_CHALLENGE\x10\x01\x12\x19\n" +
	"\x15SIGNONSTATE_CONNECTED\x10\x02\x12\x13\n" +
	"\x0fSIGNONSTATE_NEW\x10\x03\x12\x18\n" +
	"\x14SIGNONSTATE_PRESPAWN\x10\x04\x12\x15\n" +
	"\x11SIGNONSTATE_SPAWN\x10\x05\x12\x14\n" +
	"\x10SIGNONSTATE_FULL\x10\x06\x12\x1b\n" +
	"\x17SIGNONSTATE_CHANGELEVEL\x10\a*\xcb\x02\n" +
	"\fNET_Messages\x12\v\n" +
	"\anet_NOP\x10\x00\x12\x19\n" +
	"\x15net_Disconnect_Legacy\x10\x01\x12\x17\n" +
	"\x13net_SplitScreenUser\x10\x03\x12\f\n" +
	"\bnet_Tick\x10\x04\x12\x11\n" +
	"\rnet_StringCmd\x10\x05\x12\x11\n" +
	"\rnet_SetConVar\x10\x06\x12\x13\n" +
	"\x0fnet_SignonState\x10\a\x12\x17\n" +
	"\x13net_SpawnGroup_Load\x10\b\x12!\n" +
	"\x1dnet_SpawnGroup_ManifestUpdate\x10\t\x12\"\n" +
	"\x1enet_SpawnGroup_SetCreationTick\x10\v\x12\x19\n" +
	"\x15net_SpawnGroup_Unload\x10\f\x12 \n" +
	"\x1cnet_SpawnGroup_LoadCompleted\x10\r\x12\x14\n" +
	"\x10net_DebugOverlay\x10\x0f*\xcc\x02\n" +
	"\x11SpawnGroupFlags_t\x12'\n" +
	"#SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE\x10\x01\x12#\n" +
	"\x1fSPAWN_GROUP_DONT_SPAWN_ENTITIES\x10\x02\x12!\n" +
	"\x1dSPAWN_GROUP_SYNCHRONOUS_SPAWN\x10\x04\x12&\n" +
	"\"SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP\x10\b\x12+\n" +
	"'SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES\x10\x10\x12\"\n" +
	"\x1eSPAWN_GROUP_BLOCK_UNTIL_LOADED\x10@\x12$\n" +
	"\x1fSPAWN_GROUP_LOAD_STREAMING_DATA\x10\x80\x01\x12'\n" +
	"\"SPAWN_GROUP_CREATE_NEW_SCENE_WORLD\x10\x80\x02:O\n" +
	"\x12maximum_size_bytes\x12\x1f.google.protobuf.MessageOptions\x18І\x03 \x01(\x05R\x10maximumSizeBytes"

var (
	file_s2_networkbasetypes_proto_rawDescOnce sync.Once
	file_s2_networkbasetypes_proto_rawDescData []byte
)

func file_s2_networkbasetypes_proto_rawDescGZIP() []byte {
	file_s2_networkbasetypes_proto_rawDescOnce.Do(func() {
		file_s2_networkbasetypes_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_s2_networkbasetypes_proto_rawDesc), len(file_s2_networkbasetypes_proto_rawDesc)))
	})
	return file_s2_networkbasetypes_proto_rawDescData
}

var file_s2_networkbasetypes_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_s2_networkbasetypes_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_s2_networkbasetypes_proto_goTypes = []any{
	(SignonStateT)(0),                          // 0: com.github.markus_wa.demoinfocs_golang.s2.SignonState_t
	(NET_Messages)(0),                          // 1: com.github.markus_wa.demoinfocs_golang.s2.NET_Messages
	(SpawnGroupFlagsT)(0),                      // 2: com.github.markus_wa.demoinfocs_golang.s2.SpawnGroupFlags_t
	(*CMsgVector)(nil),                         // 3: com.github.markus_wa.demoinfocs_golang.s2.CMsgVector
	(*CMsgVector2D)(nil),                       // 4: com.github.markus_wa.demoinfocs_golang.s2.CMsgVector2D
	(*CMsgQAngle)(nil),                         // 5: com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngle
	(*CMsgQuaternion)(nil),                     // 6: com.github.markus_wa.demoinfocs_golang.s2.CMsgQuaternion
	(*CMsgTransform)(nil),                      // 7: com.github.markus_wa.demoinfocs_golang.s2.CMsgTransform
	(*CMsgRGBA)(nil),                           // 8: com.github.markus_wa.demoinfocs_golang.s2.CMsgRGBA
	(*CMsgPlayerInfo)(nil),                     // 9: com.github.markus_wa.demoinfocs_golang.s2.CMsgPlayerInfo
	(*CEntityMsg)(nil),                         // 10: com.github.markus_wa.demoinfocs_golang.s2.CEntityMsg
	(*CMsg_CVars)(nil),                         // 11: com.github.markus_wa.demoinfocs_golang.s2.CMsg_CVars
	(*CNETMsg_NOP)(nil),                        // 12: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_NOP
	(*CNETMsg_SplitScreenUser)(nil),            // 13: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SplitScreenUser
	(*CNETMsg_Tick)(nil),                       // 14: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_Tick
	(*CNETMsg_StringCmd)(nil),                  // 15: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_StringCmd
	(*CNETMsg_SetConVar)(nil),                  // 16: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SetConVar
	(*CNETMsg_SignonState)(nil),                // 17: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SignonState
	(*CSVCMsg_GameEvent)(nil),                  // 18: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEvent
	(*CSVCMsgList_GameEvents)(nil),             // 19: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsgList_GameEvents
	(*CNETMsg_SpawnGroup_Load)(nil),            // 20: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SpawnGroup_Load
	(*CNETMsg_SpawnGroup_ManifestUpdate)(nil),  // 21: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SpawnGroup_ManifestUpdate
	(*CNETMsg_SpawnGroup_SetCreationTick)(nil), // 22: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SpawnGroup_SetCreationTick
	(*CNETMsg_SpawnGroup_Unload)(nil),          // 23: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SpawnGroup_Unload
	(*CNETMsg_SpawnGroup_LoadCompleted)(nil),   // 24: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SpawnGroup_LoadCompleted
	(*CSVCMsg_GameSessionConfiguration)(nil),   // 25: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameSessionConfiguration
	(*CNETMsg_DebugOverlay)(nil),               // 26: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_DebugOverlay
	(*CMsg_CVars_CVar)(nil),                    // 27: com.github.markus_wa.demoinfocs_golang.s2.CMsg_CVars.CVar
	(*CSVCMsg_GameEventKeyT)(nil),              // 28: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEvent.key_t
	(*CSVCMsgList_GameEventsEventT)(nil),       // 29: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsgList_GameEvents.event_t
	(*descriptorpb.MessageOptions)(nil),        // 30: google.protobuf.MessageOptions
}
var file_s2_networkbasetypes_proto_depIdxs = []int32{
	3,  // 0: com.github.markus_wa.demoinfocs_golang.s2.CMsgTransform.position:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgVector
	6,  // 1: com.github.markus_wa.demoinfocs_golang.s2.CMsgTransform.orientation:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgQuaternion
	27, // 2: com.github.markus_wa.demoinfocs_golang.s2.CMsg_CVars.cvars:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsg_CVars.CVar
	11, // 3: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SetConVar.convars:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsg_CVars
	0,  // 4: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SignonState.signon_state:type_name -> com.github.markus_wa.demoinfocs_golang.s2.SignonState_t
	28, // 5: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEvent.keys:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEvent.key_t
	29, // 6: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsgList_GameEvents.events:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsgList_GameEvents.event_t
	3,  // 7: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SpawnGroup_Load.world_offset_pos:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgVector
	5,  // 8: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_SpawnGroup_Load.world_offset_angle:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgQAngle
	3,  // 9: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_DebugOverlay.vectors:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgVector
	8,  // 10: com.github.markus_wa.demoinfocs_golang.s2.CNETMsg_DebugOverlay.colors:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CMsgRGBA
	18, // 11: com.github.markus_wa.demoinfocs_golang.s2.CSVCMsgList_GameEvents.event_t.event:type_name -> com.github.markus_wa.demoinfocs_golang.s2.CSVCMsg_GameEvent
	30, // 12: com.github.markus_wa.demoinfocs_golang.s2.maximum_size_bytes:extendee -> google.protobuf.MessageOptions
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	12, // [12:13] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_s2_networkbasetypes_proto_init() }
func file_s2_networkbasetypes_proto_init() {
	if File_s2_networkbasetypes_proto != nil {
		return
	}
	file_s2_network_connection_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_s2_networkbasetypes_proto_rawDesc), len(file_s2_networkbasetypes_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   27,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_s2_networkbasetypes_proto_goTypes,
		DependencyIndexes: file_s2_networkbasetypes_proto_depIdxs,
		EnumInfos:         file_s2_networkbasetypes_proto_enumTypes,
		MessageInfos:      file_s2_networkbasetypes_proto_msgTypes,
		ExtensionInfos:    file_s2_networkbasetypes_proto_extTypes,
	}.Build()
	File_s2_networkbasetypes_proto = out.File
	file_s2_networkbasetypes_proto_goTypes = nil
	file_s2_networkbasetypes_proto_depIdxs = nil
}
